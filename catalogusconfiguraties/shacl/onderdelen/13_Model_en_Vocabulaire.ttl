#
#
#
# MODEL EN VOCABULAIRE
#
#
#

@prefix stage: <http://localhost:8080/catalogus/shacl/stage#>.
@prefix updatestage: <http://localhost:8080/catalogus/shacl/update/>.
@prefix elmo: <http://bp4mc2.org/elmo/def#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xhtml: <http://www.w3.org/1999/xhtml/vocab#>.
@prefix container: <http://localhost:8080/catalogus/shacl/container/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix skosax: <http://bp4mc2.org/skosax#>.
@prefix skoslex: <http://bp4mc2.org/def/skos-lex#>.
@prefix thes: <http://purl.org/iso25964/skos-thes#>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix dct: <http://purl.org/dc/terms/>.
@prefix dctype: <http://purl.org/dc/dcmitype/>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix prov: <http://www.w3.org/ns/prov#>.
@prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>.
@prefix vcard: <http://www.w3.org/2006/vcard/ns#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix iso: <http://id.loc.gov/vocabulary/iso639-1/>.
@prefix dcat: <http://www.w3.org/ns/dcat#>.

#
# PAGINA'S (REPRESENTATIONS)
#

# Vocabulairepagina
stage:VocabulairePagina	a	elmo:Representation;
	elmo:url-pattern "/catalogus/shacl/query/vocabulary";
	elmo:contains stage:ShaclHeader;
	elmo:contains stage:ShaclFooter;
	elmo:contains stage:ShaclMenu;
	elmo:contains stage:search_models;
	elmo:appearance elmo:VocabularyAppearance;
	elmo:queryForm stage:ShaclSelectModel;
	elmo:query stage:Modelquery;
.

#
# FORMS
#

stage:ShaclSelectModel a elmo:Form;
	rdfs:label "Selecteer model";
	elmo:index "2";
    elmo:fragment [
        elmo:applies-to "model";
        rdfs:label "Selecteer model"@nl;
        rdfs:label "Select model"@en;
        elmo:valuesFrom stage:search_models;
        elmo:constraint elmo:MandatoryConstraint;
        elmo:index "2";
    ];
    elmo:fragment [
        elmo:appearance elmo:SubmitAppearance;
        rdfs:label "Ga verder"@nl;
        elmo:index "3";
    ]
.

# PARTS

# Zoeken van modellen
stage:search_models a elmo:Part;
    elmo:appearance elmo:HiddenAppearance;
    elmo:query '''
        CONSTRUCT {
			?model rdfs:label ?label
		}
        WHERE {
            SELECT *
            WHERE {
				GRAPH ?g {
					?model a owl:Ontology.
					?model rdfs:label ?label.
				}
				FILTER regex(?g, "^http://localhost:8080/catalogus/shacl/(?!stage)")
            }
            LIMIT 100
        }
    ''';
.

# QUERY'S

# Query voor Vocabulairepagina
stage:VocabulaireQuery a elmo:Query;
	elmo:query '''
		prefix dct: <http://purl.org/dc/terms/>
		prefix shacl: <http://www.w3.org/ns/shacl#>
		CONSTRUCT {
			?element rdf:type ?type.
			?element rdfs:label ?label.
			?element rdfs:comment ?def.
			?element rdfs:subClassOf ?super.
			?shape shacl:targetClass ?element.
			?shape shacl:property ?pc.
			?pc shacl:path ?pred.
			?pc shacl:class ?class.
			?pc shacl:datatype ?datatype.
			?pc shacl:in ?collection.
		}
		WHERE {
			GRAPH <@MODEL@> {
				?element rdf:type ?type.
				OPTIONAL {?element rdfs:label ?label}
				OPTIONAL {?element rdfs:comment ?def}
				OPTIONAL {
					?element dct:subject ?begrip.
					?begrip skos:definition ?def.
				}
				OPTIONAL {?element rdfs:subClassOf ?super}
				OPTIONAL {
					?shape shacl:targetClass ?element.
					?shape shacl:property ?pc.
					?pc shacl:path ?pred.
					OPTIONAL {?pc shacl:class ?class}
					OPTIONAL {?pc shacl:datatype ?datatype}
					OPTIONAL {?pc shacl:in ?collection}
				}
				FILTER (?type = owl:Class || ?type = owl:DatatypeProperty || ?type = owl:ObjectProperty || ?type = owl:Ontology)
			}
		}
	'''
.
# Query voor Vocabulairepagina en model
stage:Modelquery a elmo:Query;
	elmo:query '''
		prefix shacl: <http://www.w3.org/ns/shacl#>
		construct {
			?shape ?sp ?so.
			?class rdf:type rdfs:Class.
			?class rdfs:comment ?ccomment.
			?subclass rdfs:subClassOf ?superclass.
			?superclass rdf:type rdfs:Class.
			?pc ?pcp ?pco.
			?property rdf:type rdf:Property.
			?property rdfs:comment ?pcomment.
			?subproperty rdfs:subPropertyOf ?superproperty.
			?superproperty rdf:type rdf:Property.
		}
		where {
			graph <@MODEL@> {
				?shape a shacl:NodeShape.
				?shape ?sp ?so.
				OPTIONAL {
					?shape shacl:targetClass ?class.

					OPTIONAL {
						?class rdfs:subClassOf* ?subclass.
						?subclass rdfs:subClassOf ?superclass.
					}
				}
				OPTIONAL {
					?shape rdfs:comment ?currentccomment.
				}
				BIND( IF( BOUND(?currentccomment), ?currentccomment, "") AS ?ccomment )	
				OPTIONAL {
					?shape shacl:property ?pc.
					?pc ?pcp ?pco.
					OPTIONAL {
						?pc shacl:path ?property.
						OPTIONAL {
							?property rdfs:subPropertyOf* ?subproperty.
							?subproperty rdfs:subPropertyOf ?superproperty
						}
					}
				}
				OPTIONAL {
					?pc rdfs:comment ?currentpcomment.
				}
				BIND( IF( BOUND(?currentpcomment), ?currentpcomment, "") AS ?pcomment )	
			}
		}
	''';
.
