#
#
#
# FRAMEWORK
#
#
#

@prefix stage: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/stage#>.
@prefix updatestage: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/update/>.
@prefix elmo: <http://bp4mc2.org/elmo/def#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xhtml: <http://www.w3.org/1999/xhtml/vocab#>.
@prefix container: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/container/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix skosax: <http://bp4mc2.org/skosax#>.
@prefix skoslex: <http://bp4mc2.org/def/skos-lex#>.
@prefix thes: <http://purl.org/iso25964/skos-thes#>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix dct: <http://purl.org/dc/terms/>.
@prefix dctype: <http://purl.org/dc/dcmitype/>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix prov: <http://www.w3.org/ns/prov#>.
@prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>.
@prefix vcard: <http://www.w3.org/2006/vcard/ns#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix iso: <http://id.loc.gov/vocabulary/iso639-1/>.
@prefix dcat: <http://www.w3.org/ns/dcat#>.

#
#
#
# PAGINA'S (REPRESENTATIONS)
#
#
#


# Welkomstpagina
stage:ShaclWelkomstpagina rdf:type elmo:Representation;
	elmo:url-pattern "/catalogus/shacl(|/)$";
	elmo:contains stage:ShaclMenu;
	elmo:contains stage:ShaclHeader;
	elmo:contains stage:ShaclFooter;
	elmo:appearance elmo:HtmlAppearance;
	elmo:data [
		rdfs:label "Shacl";
		elmo:html "<div><p>Welkom bij de Catalogus voor het DSO-programma. Vanaf hier kunt u via de conceptenboom of via de alfabetische conceptenlijst navigeren door de verschillende concepten die in de Catalogus zijn vastgelegd.</p><p>Op de Help-pagina staat uitleg over wat de verschillende termen die gebruikt worden in de Catalogus betekenen. Tevens staat daar een instructie over hoe concepten aan de Catalogus kunnen worden toegevoegd, bewerkt of verwijderd.</p></div>"
	]
.

# Helppagina
stage:ShaclHelp rdf:type elmo:Representation;
	elmo:url-pattern "/catalogus/shacl/query/help(|/)$";
	elmo:contains stage:ShaclMenu;
	elmo:contains stage:ShaclHeader;
	elmo:contains stage:ShaclFooter;
	elmo:appearance elmo:HtmlAppearance;
	elmo:data [
		rdfs:label "Help";
		elmo:html '''Help will always be given to those who ask for it.'''
	];
.

# Helppagina beheer
stage:ShaclBeheerHelp rdf:type elmo:Representation;
	elmo:url-pattern "/catalogus/shacl/query/beheerhelp(|/)$";
	elmo:contains stage:ShaclBeheermenu;
	elmo:contains stage:ShaclHeader;
	elmo:contains stage:ShaclFooter;
	elmo:appearance elmo:HtmlAppearance;
	elmo:data [
		rdfs:label "Help";
		elmo:html '''<div>Op deze beheerpagina kunnen de volgende acties worden uitgevoerd:
				<ul>
					<li>Hoofdpagina - keer terug naar de hoofdpagina van het Shacl.</li>
					<li>Upload - kies de wijze van uploaden van nieuwe data uit het menu. Upload vervolgens het bronbestand. Een succesvolle import is te herkennen door het zeer kort verschijnen van het woord 'Succes'.</li>
					<li>Speciaal
						<ul>
							<li>Verwijder alle data - hiermee worden alle gegevens uit de Catalogus verwijderd. Wees hier dus voorzichtig mee!</li>
						</ul>
					</li>
				</ul>
				</div>'''
	]
.

# Hoofdpagina beheer
stage:ShaclBeheerpagina rdf:type elmo:Representation;
	elmo:url-pattern "/catalogus/shacl/admin(|/)$";
	elmo:contains stage:ShaclBeheermenu;
	elmo:contains stage:ShaclHeader;
	elmo:contains stage:ShaclFooter;
	elmo:appearance elmo:HtmlAppearance;
	elmo:data [
		rdfs:label "Shacl";
		elmo:html "<div><p>U bent succesvol ingelogd op de beheerpagina.</p></div>"
	]
.


#
#
#
# HERBRUIKBARE PAGINA-ONDERDELEN (PARTS)
#
#
#

#
# Indexloos: Appearance bepaalt plaats op de pagina
#

# Header
stage:ShaclHeader a elmo:Part;
	elmo:appearance elmo:HeaderAppearance;
	elmo:data [elmo:html "<a href='http://data.ontwikkeling.pdok.nl/catalogus/shacl'><img src='http://data.ontwikkeling.pdok.nl/catalogus/images/LogoOMGWklein.png'></img></a>"^^rdf:HTML];
.

# Menubalk hoofdmenu
stage:ShaclMenu a elmo:Part;
	elmo:appearance elmo:NavbarSearchAppearance;
	elmo:data [
		elmo:data [
			rdfs:label "Shacl";
			xhtml:link "/catalogus/shacl";
			elmo:index "0"
		];
		elmo:data [
			rdfs:label "Download model";
			elmo:index "3";
			xhtml:link "query/downloadmodel";
		];
		elmo:data [
			rdfs:label "Vocabulaires";
			elmo:index "4";
			xhtml:link "query/vocabulary";
		];
		elmo:data [
			rdfs:label "Beheer";
			xhtml:link "admin";
			elmo:index "6"
		];
		elmo:data [
			rdfs:label "Help";
			xhtml:link "query/help";
			elmo:index "7"
		];
	]
.


# Beheermenu
stage:ShaclBeheermenu a elmo:Part;
	elmo:appearance elmo:NavbarSearchAppearance;
	elmo:data [
		elmo:data [
			rdfs:label "BEHEER";
			xhtml:link "admin";
			elmo:index: "0";
		];
		elmo:data [ 
			rdfs:label "Hoofdpagina";
			elmo:index "1";
			xhtml:link "/catalogus/shacl";
		];
		elmo:data [
			rdfs:label "Upload";
			elmo:index "2";
			elmo:data [
				rdfs:label "Upload model (XMI)";
				elmo:index "2";
				xhtml:link "container/umlmodelupload";
			];
			elmo:data [
				rdfs:label "Upload model (XML)";
				elmo:index "3";
				xhtml:link "container/xmlmodelupload";
			];
			elmo:data [
				rdfs:label "Upload model (ttl)";
				elmo:index "4";
				xhtml:link "container/shModelUpload";
			];
			elmo:data [
				rdfs:label "Sync geupload XMI-model (incl ST)";
				elmo:index "5";
				xhtml:link "update/syncumlinclupload";
			];
			elmo:data [
				rdfs:label "Sync geupload XMI-model (excl ST)";
				elmo:index "6";
				xhtml:link "update/syncumlupload";
			];
		];
		elmo:data [
			rdfs:label "Acties";
			elmo:index "3";
			elmo:data [
				rdfs:label "Verwijder alle data";
				elmo:index "1";
				xhtml:link "update/clearalldata";
			];
			elmo:data [
				rdfs:label "Voeg nieuw model toe";
				elmo:index "2";
				xhtml:link "update/addnewmodel";
			];
		];
		elmo:data [
			rdfs:label "Help";
			xhtml:link "query/beheerhelp";
			elmo:index "6"
		];
	]
.

# Footer
stage:ShaclFooter a elmo:Part;
	elmo:appearance elmo:FooterAppearance;
	elmo:data [
		elmo:html '''
			<div class="row">
				<div class="col-sm-4">
					<h4>Links</h4>
					<ul class="list-unstyled">
						<li>
							<a href="http://aandeslagmetdeomgevingswet.nl">Aan de slag met de omgevingswet</a>
						</li>
						<li>
							<a href="http://www.stelselcatalogus.nl">Stelselcatalogus</a>
						</li>
						<li>
							<a href="http://brt.basisregistraties.overheid.nl">BRT</a>
						</li>
						<li>
							<a href="http://brk.basisregistraties.overheid.nl">BRK</a>
						</li>
					</ul>
				</div>
				<div class="col-sm-4">
					<h4>Contact</h4>
					<p><a href="mailto:arjen.santema@kadaster.nl">Arjen Santema</a></p>
				</div>
				<div class="col-sm-4">
					<h4>Disclaimer</h4>
					<p>Dit betreft een eerste versie van de Catalogus. De Catalogus is nog in ontwikkeling.</p>
					<p>Aan de informatie op deze pagina's kunnen geen rechten worden ontleend.</p>
				</div>
			</div>
		'''^^rdf:html
	];
.
 
#
#
#
# BEHEER UMLMODEL
#
#
#

@prefix stage: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/stage#>.
@prefix updatestage: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/update/>.
@prefix elmo: <http://bp4mc2.org/elmo/def#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xhtml: <http://www.w3.org/1999/xhtml/vocab#>.
@prefix container: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/container/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix skosax: <http://bp4mc2.org/skosax#>.
@prefix skoslex: <http://bp4mc2.org/def/skos-lex#>.
@prefix thes: <http://purl.org/iso25964/skos-thes#>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix dct: <http://purl.org/dc/terms/>.
@prefix dctype: <http://purl.org/dc/dcmitype/>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix prov: <http://www.w3.org/ns/prov#>.
@prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>.
@prefix vcard: <http://www.w3.org/2006/vcard/ns#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix iso: <http://id.loc.gov/vocabulary/iso639-1/>.
@prefix dcat: <http://www.w3.org/ns/dcat#>.

#
# CONTAINERS
#

# Uploadcontainer UML-model
container:umlmodelupload a elmo:Container;
	elmo:representation elmo:UploadRepresentation;
	elmo:contains stage:ShaclHeader;
	elmo:contains stage:ShaclFooter;
	elmo:contains stage:ShaclBeheermenu;
	elmo:translator elmo:XMI21Translator;
	rdfs:label "Upload UML-model via XMI2.1";
	elmo:replaces container:generiek;
.
container:xmlmodelupload a elmo:Container;	
	elmo:representation elmo:UploadRepresentation;
	elmo:contains stage:ShaclHeader;
	elmo:contains stage:ShaclFooter;
	elmo:contains stage:ShaclBeheermenu;
	elmo:replaces container:generiek;
	rdfs:label "Upload UML-model via xml";
.
container:shModelUpload a elmo:Container;
	elmo:representation elmo:UploadRepresentation;
	elmo:contains stage:ShaclHeader;
	elmo:contains stage:ShaclFooter;
	elmo:contains stage:ShaclBeheermenu;
	elmo:replaces container:ttlmodelupload;
	rdfs:label "Upload Shacl shapes file";
	elmo:query stage:ShaclShapeModelUploadScene;
	elmo:fragment [
        elmo:applies-to "model";
        rdfs:label "Selecteer model"@nl;
        elmo:constraint elmo:MandatoryConstraint;
        elmo:index "1";
    ];
.
#
# PRODUCTIONS
#

updatestage:syncumlupload a elmo:Production;
	elmo:contains stage:ShaclHeader;
	elmo:contains stage:ShaclFooter;
	elmo:contains stage:ShaclBeheermenu;
	elmo:queryForm stage:ShaclSelectModel;
	elmo:contains stage:ShaclUMLUploadScene;
.

updatestage:syncumlinclupload a elmo:Production;
	elmo:contains stage:ShaclHeader;
	elmo:contains stage:ShaclFooter;
	elmo:contains stage:ShaclBeheermenu;
	elmo:queryForm stage:ShaclSelectModel;
	elmo:contains stage:ShaclUMLInclUploadScene;
.

#
# SCENES
#

# 
# Uploadquery TTL-model
stage:ShaclShapeModelUploadScene a elmo:Scene;
	rdfs:label "Postquery TTL-upload";
	elmo:index "1";
	elmo:query '''
		prefix container: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/container/>
		prefix owl: <http://www.w3.org/2002/07/owl#>

		INSERT {
			GRAPH <http://data.ontwikkeling.pdok.nl/catalogus/shacl/def/@MODEL@> {
				?s ?p ?o.
			}
		}
		WHERE {
			GRAPH container:ttlmodelupload {
				?s ?p ?o.
				FILTER NOT EXISTS {
					?s rdf:type owl:Ontology.
				}
			}
		}
		
		CLEAR GRAPH container:ttlmodelupload
	''';
.

# Uploadquery UML-model exclusief stereotype
stage:ShaclUMLUploadScene a elmo:Scene;
	rdfs:label "Postquery UML-upload";
	elmo:index "1";
	elmo:query '''
		prefix container: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/container/>
		prefix uml: <http://schema.omg.org/spec/UML/2.1.1#>
		prefix sh: <http://www.w3.org/ns/shacl#>
		prefix ea: <http://www.sparxsystems.com/extender/EA6.5#>
		
		INSERT INTO <temp> {
			?model rdf:type owl:Ontology.
			?model rdfs:label ?label.
		} WHERE {
			GRAPH <@MODEL@> {
				?model rdf:type owl:Ontology.
				?model rdfs:label ?label.
			}
		}
		
		CLEAR GRAPH <@MODEL@>
		
		INSERT INTO <@MODEL@> {
			?s ?p ?o
		} WHERE {
			GRAPH <temp> {
				?s ?p ?o
			}
		}
		
		CLEAR GRAPH <temp>
		
		INSERT INTO <@MODEL@> {
			?class rdf:type owl:Class.
			?class rdfs:label ?label.
			?shape rdf:type sh:NodeShape.
			?shape rdfs:label ?label.
			?shape sh:targetClass ?class.
		}
		WHERE {
			SELECT
				(iri(concat('@MODEL@#',sql:UCamelCase(?label))) AS ?class)
				(iri(concat('@MODEL@/',sql:UCamelCase(?label))) AS ?shape)
				?label
			WHERE {
				GRAPH container:generiek {
					?c rdf:type uml:Class.
					?c rdfs:label ?label.
					# ?c ea:stereotype ?stereotype.
					FILTER NOT EXISTS {
						?c ea:stereotype 'CodeList'.
					}
				}
			}
		}
		
		INSERT INTO <@MODEL@> {
			?property rdf:type owl:DatatypeProperty.
			?property rdfs:label ?alabel.
			?pc rdf:type sh:PropertyShape.
			?shape sh:property ?pc.
			?pc sh:path ?property.
			?pc rdfs:label ?plabel.
		}
		WHERE {
			SELECT
				(iri(concat('@MODEL@#',sql:UCamelCase(?clabel))) AS ?class)
				(iri(concat('@MODEL@#',sql:LCamelCase(?alabel))) AS ?property)
				(iri(concat('@MODEL@/',sql:UCamelCase(?clabel))) AS ?shape)
				(iri(concat('@MODEL@/',sql:UCamelCase(?clabel),'/',sql:LCamelCase(?alabel))) AS ?pc)
				(concat(?clabel,'.',?alabel) AS ?plabel)
				?clabel ?alabel
			WHERE {
				GRAPH container:generiek {
					?c rdf:type uml:Class.
					?c uml:ownedAttribute ?a.
					# ?c ea:stereotype ?stereotype.
					FILTER NOT EXISTS {
						?c ea:stereotype 'CodeList'.
					}
					FILTER NOT EXISTS {
						?a uml:association ?assoc
					}
					?c rdfs:label ?clabel.
					?a rdfs:label ?alabel.
				}
			}
		}
		
		INSERT INTO <@MODEL@> {
			?property rdf:type owl:ObjectProperty.
			?property rdfs:label ?alabel.
			?pc rdf:type sh:PropertyShape.
			?shape sh:property ?pc.
			?pc sh:path ?property.
			?pc rdfs:label ?plabel.
			?pc sh:class ?refclass.
		}
		WHERE {
			SELECT
				(iri(concat('@MODEL@#',sql:UCamelCase(?clabel))) as ?class)
				(iri(concat('@MODEL@#',sql:UCamelCase(?rclabel))) as ?refclass)
				(iri(concat('@MODEL@#',sql:LCamelCase(?alabel))) as ?property)
				(iri(concat('@MODEL@/',sql:UCamelCase(?clabel))) as ?shape)
				(iri(concat('@MODEL@/',sql:UCamelCase(?clabel),'/',sql:LCamelCase(?alabel))) as ?pc)
				(concat(?clabel,'.',?alabel) as ?plabel)
				?clabel ?alabel
			WHERE {
				GRAPH container:generiek {
					?c rdf:type uml:Class.
					?c uml:ownedAttribute ?a.
					# ?c ea:stereotype ?stereotype.
					FILTER NOT EXISTS {
						?c ea:stereotype 'CodeList'.
					}
					?a uml:association ?assoc.
					?assoc uml:memberEnd ?a.
					?a uml:type ?rc.
					?rc rdfs:label ?rclabel.
					?c rdfs:label ?clabel.
					?a rdfs:label ?alabel.
				}
			}
		}
		INSERT INTO <@MODEL@> {
			?class rdfs:comment ?comment
		}
		WHERE {
			{SELECT
				(iri(concat('@MODEL@#',sql:UCamelCase(?clabel))) as ?class)
				(replace(?def,'-- .* --','') as ?comment)
			WHERE {
				GRAPH container:generiek {
					?c rdf:type uml:Class.
					?c rdfs:label ?clabel.
					# ?c ea:stereotype ?stereotype.
					FILTER NOT EXISTS {
						?c ea:stereotype 'CodeList'.
					}
					?c ea:documentation ?def.
					
				}
			}}
			FILTER (?comment!='')
		}
		INSERT INTO <@MODEL@> {
			?property rdfs:comment ?comment
		}
		WHERE {
			{SELECT
				(iri(concat('@MODEL@#',sql:LCamelCase(?alabel))) as ?property)
				(replace(?def,'-- .* --','') as ?comment)
			WHERE {
				GRAPH container:generiek {
					?c rdf:type uml:Class.
					# ?c ea:stereotype ?stereotype.
					FILTER NOT EXISTS {
						?c ea:stereotype 'CodeList'.
					}
					?c uml:ownedAttribute ?a.
					?c rdfs:label ?alabel.
					?a ea:documentation ?def.
					
				}
			}}
			FILTER (?comment!='')
		}
		
		INSERT INTO <@MODEL@> {
			?subclass rdfs:subClassOf ?class
		}
		WHERE {
			SELECT
				(iri(concat('@MODEL@#',sql:UCamelCase(?clabel))) as ?class)
				(iri(concat('@MODEL@#',sql:UCamelCase(?sublabel))) as ?subclass)
			WHERE {
				GRAPH container:generiek {
					?sub uml:generalization ?gen.
					?gen rdf:type uml:Generalization.
					?gen uml:general ?c.
					?sub rdfs:label ?sublabel.
					?c rdfs:label ?clabel.
				}
			}
		}
		
		CLEAR GRAPH container:generiek	
	''';
.

# Uploadquery UML-model inclusief stereotype
stage:ShaclUMLInclUploadScene a elmo:Scene;
	rdfs:label "Postquery UML-upload";
	elmo:index "1";
	elmo:query '''
		prefix container: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/container/>
		prefix uml: <http://schema.omg.org/spec/UML/2.1.1#>
		prefix sh: <http://www.w3.org/ns/shacl#>
		prefix ea: <http://www.sparxsystems.com/extender/EA6.5#>
		
		INSERT INTO <temp> {
			?model rdf:type owl:Ontology.
			?model rdfs:label ?label.
		} WHERE {
			GRAPH <@MODEL@> {
				?model rdf:type owl:Ontology.
				?model rdfs:label ?label.
			}
		}
		
		CLEAR GRAPH <@MODEL@>
		
		INSERT INTO <@MODEL@> {
			?s ?p ?o
		} WHERE {
			GRAPH <temp> {
				?s ?p ?o
			}
		}
		
		CLEAR GRAPH <temp>
		
		INSERT INTO <@MODEL@> {
			?class rdf:type owl:Class.
			?class rdfs:label ?label.
			?shape rdf:type sh:NodeShape.
			?shape rdfs:label ?label.
			?shape sh:targetClass ?class.
		}
		WHERE {
			SELECT
				(iri(concat('@MODEL@#',sql:UCamelCase(?label))) AS ?class)
				(iri(concat('@MODEL@/',sql:UCamelCase(?label))) AS ?shape)
				?label
			WHERE {
				GRAPH container:generiek {
					?c rdf:type uml:Class.
					?c rdfs:label ?label.
					?c ea:stereotype ?stereotype.
					FILTER NOT EXISTS {
						?c ea:stereotype 'CodeList'.
					}
				}
			}
		}
		
		INSERT INTO <@MODEL@> {
			?property rdf:type owl:DatatypeProperty.
			?property rdfs:label ?alabel.
			?pc rdf:type sh:PropertyShape.
			?shape sh:property ?pc.
			?pc sh:path ?property.
			?pc rdfs:label ?plabel.
		}
		WHERE {
			SELECT
				(iri(concat('@MODEL@#',sql:UCamelCase(?clabel))) AS ?class)
				(iri(concat('@MODEL@#',sql:LCamelCase(?alabel))) AS ?property)
				(iri(concat('@MODEL@/',sql:UCamelCase(?clabel))) AS ?shape)
				(iri(concat('@MODEL@/',sql:UCamelCase(?clabel),'/',sql:LCamelCase(?alabel))) AS ?pc)
				(concat(?clabel,'.',?alabel) AS ?plabel)
				?clabel ?alabel
			WHERE {
				GRAPH container:generiek {
					?c rdf:type uml:Class.
					?c uml:ownedAttribute ?a.
					?c ea:stereotype ?stereotype.
					FILTER NOT EXISTS {
						?c ea:stereotype 'CodeList'.
					}
					FILTER NOT EXISTS {
						?a uml:association ?assoc
					}
					?c rdfs:label ?clabel.
					?a rdfs:label ?alabel.
				}
			}
		}
		
		INSERT INTO <@MODEL@> {
			?property rdf:type owl:ObjectProperty.
			?property rdfs:label ?alabel.
			?pc rdf:type sh:PropertyShape.
			?shape sh:property ?pc.
			?pc sh:path ?property.
			?pc rdfs:label ?plabel.
			?pc sh:class ?refclass.
		}
		WHERE {
			SELECT
				(iri(concat('@MODEL@#',sql:UCamelCase(?clabel))) as ?class)
				(iri(concat('@MODEL@#',sql:UCamelCase(?rclabel))) as ?refclass)
				(iri(concat('@MODEL@#',sql:LCamelCase(?alabel))) as ?property)
				(iri(concat('@MODEL@/',sql:UCamelCase(?clabel))) as ?shape)
				(iri(concat('@MODEL@/',sql:UCamelCase(?clabel),'/',sql:LCamelCase(?alabel))) as ?pc)
				(concat(?clabel,'.',?alabel) as ?plabel)
				?clabel ?alabel
			WHERE {
				GRAPH container:generiek {
					?c rdf:type uml:Class.
					?c uml:ownedAttribute ?a.
					?c ea:stereotype ?stereotype.
					FILTER NOT EXISTS {
						?c ea:stereotype 'CodeList'.
					}
					?a uml:association ?assoc.
					?assoc uml:memberEnd ?a.
					?a uml:type ?rc.
					?rc rdfs:label ?rclabel.
					?c rdfs:label ?clabel.
					?a rdfs:label ?alabel.
				}
			}
		}
		INSERT INTO <@MODEL@> {
			?class rdfs:comment ?comment
		}
		WHERE {
			{SELECT
				(iri(concat('@MODEL@#',sql:UCamelCase(?clabel))) as ?class)
				(replace(?def,'-- .* --','') as ?comment)
			WHERE {
				GRAPH container:generiek {
					?c rdf:type uml:Class.
					?c rdfs:label ?clabel.
					?c ea:stereotype ?stereotype.
					FILTER NOT EXISTS {
						?c ea:stereotype 'CodeList'.
					}
					?c ea:documentation ?def.
					
				}
			}}
			FILTER (?comment!='')
		}
		INSERT INTO <@MODEL@> {
			?property rdfs:comment ?comment
		}
		WHERE {
			{SELECT
				(iri(concat('@MODEL@#',sql:LCamelCase(?alabel))) as ?property)
				(replace(?def,'-- .* --','') as ?comment)
			WHERE {
				GRAPH container:generiek {
					?c rdf:type uml:Class.
					?c ea:stereotype ?stereotype.
					FILTER NOT EXISTS {
						?c ea:stereotype 'CodeList'.
					}
					?c uml:ownedAttribute ?a.
					?c rdfs:label ?alabel.
					?a ea:documentation ?def.
					
				}
			}}
			FILTER (?comment!='')
		}
		
		INSERT INTO <@MODEL@> {
			?subclass rdfs:subClassOf ?class
		}
		WHERE {
			SELECT
				(iri(concat('@MODEL@#',sql:UCamelCase(?clabel))) as ?class)
				(iri(concat('@MODEL@#',sql:UCamelCase(?sublabel))) as ?subclass)
			WHERE {
				GRAPH container:generiek {
					?sub uml:generalization ?gen.
					?gen rdf:type uml:Generalization.
					?gen uml:general ?c.
					?sub rdfs:label ?sublabel.
					?c rdfs:label ?clabel.
				}
			}
		}
		
		CLEAR GRAPH container:generiek	
	''';
. 
#
#
#
# CLEAR ALL DATA
#
#
#

@prefix stage: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/stage#>.
@prefix updatestage: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/update/>.
@prefix elmo: <http://bp4mc2.org/elmo/def#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xhtml: <http://www.w3.org/1999/xhtml/vocab#>.
@prefix container: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/container/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix skosax: <http://bp4mc2.org/skosax#>.
@prefix skoslex: <http://bp4mc2.org/def/skos-lex#>.
@prefix thes: <http://purl.org/iso25964/skos-thes#>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix dct: <http://purl.org/dc/terms/>.
@prefix dctype: <http://purl.org/dc/dcmitype/>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix prov: <http://www.w3.org/ns/prov#>.
@prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>.
@prefix vcard: <http://www.w3.org/2006/vcard/ns#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix iso: <http://id.loc.gov/vocabulary/iso639-1/>.
@prefix dcat: <http://www.w3.org/ns/dcat#>.

#
# PRODUCTIONS
#

# Speciale pagina om alle gegevens te wissen
# Deze backdoor moet zeer waarschijnlijk verwijderd worden uit de definitieve configuratie!
updatestage:clearalldata a elmo:Production;
	elmo:contains stage:ShaclBeheermenu;
	elmo:contains stage:ShaclHeader;
	elmo:contains stage:ShaclFooter;
	elmo:queryForm stage:ShaclDummyForm;
	elmo:contains stage:ClearAllDataScene;
.

# DummyForm nodig omdat anders de feedback vanuit de scenes niet getoond wordt
stage:ShaclDummyForm a elmo:Form.


#
# SCENES
#

# Scene gebruikt voor het verwijderen van alle data
stage:ClearAllDataScene a elmo:Scene;
	elmo:index "1";
	rdfs:label "Verwijder alle data";
	elmo:query '''
		DELETE {
			GRAPH ?g {
				?s ?p ?o
			}
		}
		WHERE {
			GRAPH ?g {
				?s ?p ?o
			}
			FILTER regex(?g, "^http://data.ontwikkeling.pdok.nl/catalogus/shacl/(?!stage)")
		}
	'''
.
 
#
#
#
# CLEAR ALL DATA
#
#
#

@prefix stage: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/stage#>.
@prefix updatestage: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/update/>.
@prefix elmo: <http://bp4mc2.org/elmo/def#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xhtml: <http://www.w3.org/1999/xhtml/vocab#>.
@prefix container: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/container/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix skosax: <http://bp4mc2.org/skosax#>.
@prefix skoslex: <http://bp4mc2.org/def/skos-lex#>.
@prefix thes: <http://purl.org/iso25964/skos-thes#>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix dct: <http://purl.org/dc/terms/>.
@prefix dctype: <http://purl.org/dc/dcmitype/>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix prov: <http://www.w3.org/ns/prov#>.
@prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>.
@prefix vcard: <http://www.w3.org/2006/vcard/ns#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix iso: <http://id.loc.gov/vocabulary/iso639-1/>.
@prefix dcat: <http://www.w3.org/ns/dcat#>.

#
# PRODUCTIONS
#

# Speciale pagina om nieuw model toe te voegen
updatestage:addnewmodel a elmo:Production;
	elmo:contains stage:ShaclBeheermenu;
	elmo:contains stage:ShaclHeader;
	elmo:contains stage:ShaclFooter;
	elmo:queryForm stage:ShaclNameForm;
	elmo:contains stage:AddNewModelScene;
.

#
# FORMS
#

stage:ShaclNameForm a elmo:Form;
	rdfs:label "Voeg model toe";
    elmo:fragment [
        elmo:applies-to "name";
        rdfs:label "Naam model"@nl;
        rdfs:label "Model name"@en;
        elmo:constraint elmo:MandatoryConstraint;
        elmo:index "1";
    ];
    elmo:fragment [
        elmo:appearance elmo:SubmitAppearance;
        rdfs:label "Voeg toe"@nl;
        elmo:index "2";
    ]
.


#
# SCENES
#

# Scene gebruikt voor het verwijderen van alle data
stage:AddNewModelScene a elmo:Scene;
	elmo:index "1";
	rdfs:label "Naam toevoegen";
	elmo:query '''
		INSERT {
			GRAPH ?graph {
				?graph rdf:type owl:Ontology.
				?graph rdfs:label ?label.
			}
		}
		WHERE {
			BIND( REPLACE( "@NAME@", "[^A-Za-z0-9-_]", "" ) AS ?label )
			BIND( IRI( CONCAT( "http://data.ontwikkeling.pdok.nl/catalogus/shacl/def/", REPLACE( "@NAME@", "[^A-Za-z0-9-_]", "" ) ) ) AS ?graph )
		}
	'''
.
 
#
#
#
# MODEL EN VOCABULAIRE
#
#
#

@prefix stage: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/stage#>.
@prefix updatestage: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/update/>.
@prefix elmo: <http://bp4mc2.org/elmo/def#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xhtml: <http://www.w3.org/1999/xhtml/vocab#>.
@prefix container: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/container/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix skosax: <http://bp4mc2.org/skosax#>.
@prefix skoslex: <http://bp4mc2.org/def/skos-lex#>.
@prefix thes: <http://purl.org/iso25964/skos-thes#>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix dct: <http://purl.org/dc/terms/>.
@prefix dctype: <http://purl.org/dc/dcmitype/>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix prov: <http://www.w3.org/ns/prov#>.
@prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>.
@prefix vcard: <http://www.w3.org/2006/vcard/ns#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix iso: <http://id.loc.gov/vocabulary/iso639-1/>.
@prefix dcat: <http://www.w3.org/ns/dcat#>.

#
# PAGINA'S (REPRESENTATIONS)
#

# Vocabulairepagina
stage:VocabulairePagina	a	elmo:Representation;
	elmo:url-pattern "/catalogus/shacl/query/vocabulary";
	elmo:contains stage:ShaclHeader;
	elmo:contains stage:ShaclFooter;
	elmo:contains stage:ShaclMenu;
	elmo:contains stage:search_models;
	elmo:appearance elmo:VocabularyAppearance;
	elmo:queryForm stage:ShaclSelectModel;
	elmo:query stage:Modelquery;
.

#
# FORMS
#

stage:ShaclSelectModel a elmo:Form;
	rdfs:label "Selecteer model";
	elmo:index "2";
    elmo:fragment [
        elmo:applies-to "model";
        rdfs:label "Selecteer model"@nl;
        rdfs:label "Select model"@en;
        elmo:valuesFrom stage:search_models;
        elmo:constraint elmo:MandatoryConstraint;
        elmo:index "2";
    ];
    elmo:fragment [
        elmo:appearance elmo:SubmitAppearance;
        rdfs:label "Ga verder"@nl;
        elmo:index "3";
    ]
.

# PARTS

# Zoeken van modellen
stage:search_models a elmo:Part;
    elmo:appearance elmo:HiddenAppearance;
    elmo:query '''
        CONSTRUCT {
			?model rdfs:label ?label
		}
        WHERE {
            SELECT *
            WHERE {
				GRAPH ?g {
					?model a owl:Ontology.
					?model rdfs:label ?label.
				}
				FILTER regex(?g, "^http://data.ontwikkeling.pdok.nl/catalogus/shacl/(?!stage)")
            }
            LIMIT 100
        }
    ''';
.

# QUERY'S

# Query voor Vocabulairepagina
stage:VocabulaireQuery a elmo:Query;
	elmo:query '''
		prefix dct: <http://purl.org/dc/terms/>
		prefix shacl: <http://www.w3.org/ns/shacl#>
		CONSTRUCT {
			?element rdf:type ?type.
			?element rdfs:label ?label.
			?element rdfs:comment ?def.
			?element rdfs:subClassOf ?super.
			?shape shacl:targetClass ?element.
			?shape shacl:property ?pc.
			?pc shacl:path ?pred.
			?pc shacl:class ?class.
			?pc shacl:datatype ?datatype.
			?pc shacl:in ?collection.
		}
		WHERE {
			GRAPH <@MODEL@> {
				?element rdf:type ?type.
				OPTIONAL {?element rdfs:label ?label}
				OPTIONAL {?element rdfs:comment ?def}
				OPTIONAL {
					?element dct:subject ?begrip.
					?begrip skos:definition ?def.
				}
				OPTIONAL {?element rdfs:subClassOf ?super}
				OPTIONAL {
					?shape shacl:targetClass ?element.
					?shape shacl:property ?pc.
					?pc shacl:path ?pred.
					OPTIONAL {?pc shacl:class ?class}
					OPTIONAL {?pc shacl:datatype ?datatype}
					OPTIONAL {?pc shacl:in ?collection}
				}
				FILTER (?type = owl:Class || ?type = owl:DatatypeProperty || ?type = owl:ObjectProperty || ?type = owl:Ontology)
			}
		}
	'''
.
# Query voor Vocabulairepagina en model
stage:Modelquery a elmo:Query;
	elmo:query '''
		prefix shacl: <http://www.w3.org/ns/shacl#>
		construct {
			?shape ?sp ?so.
			?class rdf:type rdfs:Class.
			?class rdfs:comment ?ccomment.
			?subclass rdfs:subClassOf ?superclass.
			?superclass rdf:type rdfs:Class.
			?pc ?pcp ?pco.
			?property rdf:type rdf:Property.
			?property rdfs:comment ?pcomment.
			?subproperty rdfs:subPropertyOf ?superproperty.
			?superproperty rdf:type rdf:Property.
		}
		where {
			graph <@MODEL@> {
				?shape a shacl:NodeShape.
				?shape ?sp ?so.
				OPTIONAL {
					?shape shacl:targetClass ?class.

					OPTIONAL {
						?class rdfs:subClassOf* ?subclass.
						?subclass rdfs:subClassOf ?superclass.
					}
				}
				OPTIONAL {
					?shape rdfs:comment ?currentccomment.
				}
				BIND( IF( BOUND(?currentccomment), ?currentccomment, "") AS ?ccomment )	
				OPTIONAL {
					?shape shacl:property ?pc.
					?pc ?pcp ?pco.
					OPTIONAL {
						?pc shacl:path ?property.
						OPTIONAL {
							?property rdfs:subPropertyOf* ?subproperty.
							?subproperty rdfs:subPropertyOf ?superproperty
						}
					}
				}
				OPTIONAL {
					?pc rdfs:comment ?currentpcomment.
				}
				BIND( IF( BOUND(?currentpcomment), ?currentpcomment, "") AS ?pcomment )	
			}
		}
	''';
.
 
#
#
#
# DOWNLOAD YED
#
#
#

@prefix stage: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/stage#>.
@prefix updatestage: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/update/>.
@prefix elmo: <http://bp4mc2.org/elmo/def#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xhtml: <http://www.w3.org/1999/xhtml/vocab#>.
@prefix container: <http://data.ontwikkeling.pdok.nl/catalogus/shacl/container/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix skosax: <http://bp4mc2.org/skosax#>.
@prefix skoslex: <http://bp4mc2.org/def/skos-lex#>.
@prefix thes: <http://purl.org/iso25964/skos-thes#>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix dct: <http://purl.org/dc/terms/>.
@prefix dctype: <http://purl.org/dc/dcmitype/>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix prov: <http://www.w3.org/ns/prov#>.
@prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>.
@prefix vcard: <http://www.w3.org/2006/vcard/ns#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix iso: <http://id.loc.gov/vocabulary/iso639-1/>.
@prefix dcat: <http://www.w3.org/ns/dcat#>.
@prefix yed: <http://bp4mc2.org/yed#>.

#
# REPRESENTATIONS
#

stage:ShaclChooseModelDownload a elmo:Representation;
	elmo:url-pattern "/query/downloadmodel";
	elmo:contains stage:ShaclMenu;
	elmo:contains stage:ShaclHeader;
	elmo:contains stage:ShaclFooter;
	elmo:contains stage:ShaclChooseModelExplanation;
	elmo:contains stage:ShaclChooseModelTable;
.

stage:ShaclDownloadyEd a elmo:Representation;
	elmo:url-pattern	"/query/downloadmodel\\.yed$";
	elmo:layer elmo:TopLayer;
	elmo:fragment [
		elmo:applies-to rdfs:subClassOf;
		rdfs:label "";
		yed:sourceArrow "none";
		yed:targetArrow "white_delta";
	];
	elmo:query '''
		prefix shacl: <http://www.w3.org/ns/shacl#>
		
		CONSTRUCT {
			?element rdfs:label ?label.
			?element rdfs:comment ?attribs.
			?element rdfs:subClassOf ?super.
			?element ?pc ?class.
			?element rdf:type owl:Class.
			?pc rdfs:label ?plabel.
		}
		WHERE {
			GRAPH <@MODEL@> {
				?element rdf:type owl:Class.
				?element rdfs:label ?label
				OPTIONAL {?element rdfs:subClassOf ?super}
				OPTIONAL {
					select ?element ?pc ?class (concat(if(bound(?plabel),?plabel,strafter(str(?pred),"#"))," [",if(bound(?minc),?minc,"0"),",",if(bound(?maxc),?maxc,"n"),"]") as ?plabel)
					where {
						?shape shacl:targetClass ?element.
						?shape shacl:property ?pc.
						?pc shacl:path ?pred.
						?pc shacl:class ?class.
						?class rdf:type owl:Class.
						OPTIONAL {?pred rdfs:label ?plabel}
						OPTIONAL {?pc shacl:minCount ?minc}
						OPTIONAL {?pc shacl:maxCount ?maxc}
						FILTER NOT EXISTS {?pc shacl:in ?col}
					}
				}
				OPTIONAL {
					select ?element (group_concat(concat(if(bound(?plabel),?plabel,strafter(str(?pred),"#"))," (",strafter(str(?datatype),"#"),") [",if(bound(?minc),?minc,"0"),",",?maxc,"]");separator="\\n") as ?attribs)
					where {
						?shape shacl:targetClass ?element.
						?shape shacl:property ?pc.
						?pc shacl:path ?pred.
						OPTIONAL {?pred rdfs:label ?plabel}
						OPTIONAL {?pc shacl:datatype ?datatype}
						OPTIONAL {?pc shacl:minCount ?minc}
						OPTIONAL {?pc shacl:maxCount ?maxc}
						FILTER NOT EXISTS {
							?pc shacl:class ?class.
							?class rdf:type owl:Class.
						}
					}
					group by ?element
				}
			}
		}
	''';
.

# PARTS

stage:ShaclChooseModelExplanation a elmo:Part;
	elmo:appearance elmo:HtmlAppearance;
	elmo:index "1";
	elmo:data [
		rdfs:label "Downloaden model";
		elmo:html '''
			Klik hieronder op het model dat je wilt downloaden.<br/>
			Om dit model te kunnen bekijken, heeft u <a href="https://www.yworks.com/products/yed">yEd</a> nodig.
		''';
	];
.

stage:ShaclChooseModelTable a elmo:Part;
	elmo:index "2";
	elmo:appearance elmo:TableAppearance;
	elmo:query stage:ShaclSelectOntologyQuery;
.

# QUERY'S

stage:ShaclSelectOntologyQuery a elmo:Query;
    elmo:query '''
        SELECT
			(iri(concat('http://data.ontwikkeling.pdok.nl/catalogus/shacl/query/downloadmodel.yed?model=',str(?ont))) AS ?Model)
			?Model_label
		WHERE {
			GRAPH ?g {
				?ont a owl:Ontology.
				?ont rdfs:label ?Model_label.
			}
			FILTER regex(?g, "^http://data.ontwikkeling.pdok.nl/catalogus/shacl/(?!stage)")
		}
    ''';
. 
