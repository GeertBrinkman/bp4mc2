#
#
#
# PREFIXES
#
#
#

@prefix adms: 	  		<http://www.w3.org/ns/adms#>.
@prefix brt: 		     	<http://brt.basisregistraties.overheid.nl/id/dataset/>.
@prefix container: 		<http://localhost:8080/catalogus/dsov2/container/>.
@prefix dc: 		    	<http://purl.org/dc/elements/1.1/>.
@prefix dcat: 	  		<http://www.w3.org/ns/dcat#>.
@prefix dcmiperiod:   <http://dublincore.org/documents/2006/04/10/dcmi-period/>.
@prefix dct: 	    		<http://purl.org/dc/terms/>.
@prefix dctype: 		  <http://purl.org/dc/dcmitype/>.
@prefix elmo: 			  <http://bp4mc2.org/elmo/def#>.
@prefix foaf: 	  		<http://xmlns.com/foaf/0.1/>.
@prefix geosparql: 		<http://www.opengis.net/ont/geosparql#>.
@prefix iso: 		    	<http://id.loc.gov/vocabulary/iso639-1/>.
@prefix owl: 		    	<http://www.w3.org/2002/07/owl#>.
@prefix prov: 	  		<http://www.w3.org/ns/prov#>.
@prefix rdf: 		    	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: 		  	<http://www.w3.org/2000/01/rdf-schema#>.
@prefix sd:           <http://www.w3.org/ns/sparql-service-description/>.
@prefix sh: 		    	<http://www.w3.org/ns/shacl#>.
@prefix skos: 			  <http://www.w3.org/2004/02/skos/core#>.
@prefix skosax: 	  	<http://bp4mc2.org/skosax#>.
@prefix skoslex: 	  	<http://bp4mc2.org/def/skos-lex/>.
@prefix stage: 			  <http://localhost:8080/catalogus/dsov2/stage#>.
@prefix thes: 		  	<http://purl.org/iso25964/skos-thes#>.
@prefix updatestage: 	<http://localhost:8080/catalogus/dsov2/update/>.
@prefix vcard: 	  		<http://www.w3.org/2006/vcard/ns#>.
@prefix xhtml: 	    	<http://www.w3.org/1999/xhtml/vocab#>.
@prefix xsd: 		    	<http://www.w3.org/2001/XMLSchema#>.
@prefix wdrs: 	  		<http://www.w3.org/2007/05/powder-s#>.
@prefix yed: 	    		<http://bp4mc2.org/yed#>.
 
#
#
#
# FRAMEWORK
#
#
#

#
#
#
# PAGINA'S (REPRESENTATIONS)
#
#
#

# Hoofdpagina beheer
stage:DSOv2Beheerpagina rdf:type elmo:Representation;
	elmo:url-pattern "/catalogus/dsov2/admin(|/)$";
	elmo:contains stage:DSOv2Beheermenu;
	elmo:appearance elmo:HtmlAppearance;
	elmo:data [
		rdfs:label "DSOv2";
		elmo:html "<div><p>U bent succesvol ingelogd op de beheerpagina.</p></div>"
	]
.


#
#
#
# HERBRUIKBARE PAGINA-ONDERDELEN (PARTS)
#
#
#

# Menubalk hoofdmenu
stage:DSOv2Menu a elmo:Part;
	elmo:appearance elmo:NavbarSearchAppearance;
  elmo:data [
    elmo:data [
      rdfs:label "Home";
      xhtml:link "/catalogus/dsov2";
      elmo:index "1"
    ];
    elmo:data [
      rdfs:label "Beheer";
      xhtml:link "/catalogus/dsov2/admin";
      elmo:index "2";
    ];
  ]
.


# Beheermenu
stage:DSOv2Beheermenu a elmo:Part;
	elmo:appearance elmo:NavbarSearchAppearance;
	elmo:data [
		elmo:data [
			rdfs:label "Beheer";
			xhtml:link "/catalogus/dsov2/admin";
			elmo:index "0";
		];
		elmo:data [ 
			rdfs:label "Home";
			elmo:index "1";
			xhtml:link "/catalogus/dsov2";
		];
		elmo:data [
			rdfs:label "Resources";
			elmo:index "2";
			elmo:data [
				rdfs:label "Upload resources";
				elmo:index "01";
				xhtml:link "/catalogus/dsov2/container/resource-post-ttl";
			];
      elmo:data [
				rdfs:label "Sync nieuwe resources";
				elmo:index "02";
				xhtml:link "/catalogus/dsov2/update/resource-post";
			];
			elmo:data [
				rdfs:label "Pas bestaande resource(s) aan";
				elmo:index "03";
				xhtml:link "/catalogus/dsov2/container/resource-put-ttl";
			];
      elmo:data [
				rdfs:label "Vul bestaande resource aan";
				elmo:index "04";
				xhtml:link "/catalogus/dsov2/container/resource-add-ttl";
			];
      elmo:data [
				rdfs:label "Maak resource geldig";
				elmo:index "05";
				xhtml:link "/catalogus/dsov2/update/resource-geldigmaken";
			];
      elmo:data [
				rdfs:label "Maak resource ongeldig";
				elmo:index "06";
				xhtml:link "/catalogus/dsov2/update/resource-ongeldigmaken";
			];
      elmo:data [
				rdfs:label "Maak alle resources in dataset geldig";
				elmo:index "07";
				xhtml:link "/catalogus/dsov2/update/dataset-geldigmaken";
			];
		];
    elmo:data [
      rdfs:label "Waardelijsten";
      elmo:index "3";
      elmo:data [
				rdfs:label "Maak een waardelijst aan";
				elmo:index "1";
				xhtml:link "update/createwaardelijst";
			];
      elmo:data [
				rdfs:label "Upload nieuwe waarden voor waardelijst";
				elmo:index "2";
				xhtml:link "container/waarden-post";
			];
      elmo:data [
				rdfs:label "Sync nieuwe waarden naar waardelijst";
				elmo:index "3";
				xhtml:link "update/syncwaarden";
			];
      elmo:data [
				rdfs:label "Verwijder waarde uit waardelijst";
				elmo:index "4";
        xhtml:link "/catalogus/dsov2/update/deletewaardenvaluelist";
        
			];
      elmo:data [
				rdfs:label "Maak versie van waardelijst geldig";
				elmo:index "6";
				xhtml:link "update/waardelijst-geldigmaken";
			];
    ];
    elmo:data [
      rdfs:label "Collecties";
      elmo:index "4";
      elmo:data [
				rdfs:label "Verwijder waarde uit collectie";
				elmo:index "1";
        xhtml:link "update/deletevaluescollection"; 
			];
    ];
		elmo:data [
			rdfs:label "Acties";
			elmo:index "5";
			elmo:data [
				rdfs:label "Verwijder alle data behalve waardelijsten";
				elmo:index "1";
				xhtml:link "/catalogus/dsov2/update/clearalldata";
			];
			elmo:data [
				rdfs:label "Verwijder alle waardelijsten";
				elmo:index "2";
				xhtml:link "/catalogus/dsov2/update/clearwaardelijsten";
			];
      elmo:data [
        rdfs:label "Verwijder alle collecties";
        elmo:index "3";
        xhtml:link "/catalogus/dsov2/update/clearcollection"
      ];
      elmo:data [
				rdfs:label "Verwijder enkele resource";
				elmo:index "4";
				xhtml:link "/catalogus/dsov2/update/clearsingleresource";
			];
      elmo:data [
				rdfs:label "Voer TomcatUser op";
				elmo:index "5";
				xhtml:link "/catalogus/dsov2/update/insert-tomcatuser";
			];
      elmo:data [
				rdfs:label "Voeg nieuw model toe";
				elmo:index "6";
				xhtml:link "update/addnewmodel";
			];
		];
	]
. 
#
#
#
# DEMO
# Specifiek gedeelte voor demonstratiedoeleinden, nicely displayed
#
#
#

#
# PAGINA'S (REPRESENTATIONS)
#

# Overzichtspagina concepten
stage:Demo a elmo:Representation;
  # Bereikbaarheid
	elmo:url-pattern "/query/demo$";
  
  # Onderdelen
  elmo:contains stage:DemoMenu;
  
  # Data
  elmo:contains stage:DemoAlleBegrippen;
.

stage:DemoBegrip a elmo:Representation;
	elmo:url-pattern "/query/demobegrip$";
	elmo:layer elmo:TopLayer;
	elmo:contains stage:DemoMenu;
	elmo:contains stage:DemoBegripVersies;
	elmo:contains stage:DemoGraph;
.

stage:DemoMenuTerug a elmo:Part;
	elmo:index "~";
	elmo:appearance elmo:NavbarSearchAppearance;
	elmo:data [
		elmo:data [rdfs:label "Terug naar demo"; xhtml:link "query/demo"]
	];
.
	
stage:DemoMenu a elmo:Part;
	elmo:index "~";
	elmo:appearance elmo:NavbarSearchAppearance;
	elmo:query '''
		prefix xhtml: <http://www.w3.org/1999/xhtml/vocab#>
    prefix elmo:  <http://bp4mc2.org/elmo/def#>
    
		construct {
			<urn:menu> elmo:data <urn:menu1>,<urn:menu2>,<urn:menu3>,<urn:menu4>,<urn:menu5>.
			<urn:menu1> elmo:index "1";
						rdfs:label ?glabel;
						xhtml:link ?glink.
			<urn:menu2> elmo:index "2";
						rdfs:label "Start demo";
						xhtml:link "update/startdemo".
			<urn:menu3> elmo:index "3";
						rdfs:label "Begrip opvoeren";
						xhtml:link "container/nieuwbegrip".
			<urn:menu4> elmo:index "4";
						rdfs:label "Begrip aanpassen";
						xhtml:link "container/begripaanpassen".
			<urn:menu5> elmo:index "5";
						rdfs:label "Statusverandering";
						elmo:data [elmo:index "1"; rdfs:label "Bekendmaken"; xhtml:link "update/bekendmaken"];
						elmo:data [elmo:index "2"; rdfs:label "Geldig maken"; xhtml:link "update/geldigmaken"].
		}
		where {
			select (group_concat(?label; separator=',') as ?glabel) (group_concat(?link; separator=',') as ?glink)
			where {
				select distinct ?label ?link
				where {
					graph ?g {
						?begrip rdf:type skos:Concept.
						?begrip rdfs:label ?label.
						BIND (concat('query/demobegrip?subject=',str(?begrip)) as ?link)
					}
					FILTER regex( ?g, "^http://omgevingswet.overheid.nl/catalogus/id/transactie/" )
				}
			}
		}
	''';
.

stage:DemoBegripVersies a elmo:Part;
	elmo:index "1";
	elmo:fragment [
		elmo:applies-to rdfs:label;
		elmo:appearance elmo:HiddenAppearance;
	];
	elmo:fragment [
		elmo:applies-to skos:definition;
		rdfs:label "Definitie:";
		elmo:index "1";
	];
	elmo:fragment [
		elmo:applies-to adms:latestStatus; #Dit is eigenlijk niet goed, maar LDT kan niet onderscheid maken tussen hoofdlabel en nested label
		rdfs:label "Actuele status:";
		elmo:index "2";
	];
  elmo:fragment [
    elmo:appearance elmo:HiddenAppearance;
		elmo:applies-to dct:latestIssued;
		rdfs:label "Actuele bekendmaking:";
		elmo:index "3";
	];
	elmo:fragment [
		elmo:applies-to dct:latestStart;
		rdfs:label "Actuele startdatum geldigheid:";
		elmo:index "4";
	];
  elmo:fragment [
		elmo:applies-to dct:latestEnd;
		rdfs:label "Actuele einddatum geldigheid:";
		elmo:index "5";
	];
	elmo:fragment [
		elmo:applies-to foaf:isPrimaryTopicOf;
		elmo:appearance elmo:NestedAppearance;
		rdfs:label "Metadata:";
		elmo:index "6";
	];
	elmo:fragment [
		elmo:applies-to adms:status;
		rdfs:label "Status:";
		elmo:index "1";
	];
	elmo:fragment [
		elmo:applies-to prov:generatedAtTime;
		rdfs:label "Beschikbaar op:";
		elmo:index "2";
	];
	elmo:fragment [
    elmo:appearance elmo:HiddenAppearance;
		elmo:applies-to dct:issued;
		rdfs:label "Bekendgemaakt op:";
		elmo:index "3";
	];
  elmo:fragment [
		elmo:applies-to dcmiperiod:start;
		rdfs:label "Geldig van:";
		elmo:index "4";
	];
  elmo:fragment [
		elmo:applies-to dcmiperiod:end;
		rdfs:label "Geldig tot:";
		elmo:index "5";
	];
	elmo:query '''
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix wdrs: <http://www.w3.org/2007/05/powder-s#>
		prefix adms: <http://www.w3.org/ns/adms#>
		prefix adms-status: <http://purl.org/adms/status/>
		prefix slex-status: <http://bp4mc2.org/skos-lex/status/>
		prefix dct: <http://purl.org/dc/terms/>
    prefix dcmiperiod: <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix foaf: 	  		<http://xmlns.com/foaf/0.1/>
    
		construct {
			?doc rdfs:label ?titel.
			?doc skos:definition ?definitie.
			?doc foaf:isPrimaryTopicOf ?metadata.
			?doc adms:latestStatus ?latestStatus.
			?doc dct:latestIssued ?latestIssued.
			?doc dct:latestStart ?latestStart.
			?doc dct:latestEnd ?latestEnd.
			?metadata adms:status ?status.
			?metadata dct:issued ?issued.
      ?metadata dcmiperiod:start ?start.
      ?metadata dcmiperiod:end ?end.
			?metadata prov:generatedAtTime ?doctijdstip.
			adms-status:UnderDevelopment rdfs:label "Werkversie".
			adms-status:Deprecated rdfs:label "Vervallen".
			adms-status:Withdrawn rdfs:label "Teruggetrokken".
			slex-status:Issued rdfs:label "Bekendgemaakt".
			adms-status:Completed rdfs:label "Te gebruiken".
		}
		where {
			graph ?g {
				<@SUBJECT@> rdf:type skos:Concept.
				<@SUBJECT@> rdfs:label ?label.
        OPTIONAL { <@SUBJECT@> skos:definition ?definitie. }
				?g prov:generatedAtTime ?tijdstip.
				<@SUBJECT@> foaf:isPrimaryTopicOf ?doc.
				BIND (concat(?label,' (geregistreerd op ',?tijdstip,')') as ?titel)
			}
			graph ?gdoc {
				?doc adms:status ?status.
				OPTIONAL {?doc dct:issued ?issued}
        OPTIONAL {?doc dct:temporal/dcmiperiod:start ?start}
        OPTIONAL {?doc dct:temporal/dcmiperiod:end ?end}
				?gdoc prov:generatedAtTime ?doctijdstip.
				BIND (iri(concat(str(?doc),'?graph=',str(?gdoc))) as ?metadata)
			}
      graph ?latestdoc {
        ?doc adms:status ?latestStatus.
        OPTIONAL {?doc dct:issued ?latestIssued}
        OPTIONAL {?doc dct:temporal/dcmiperiod:start ?latestStart}
        OPTIONAL {?doc dct:temporal/dcmiperiod:end ?latestEnd}
        ?latestdoc prov:generatedAtTime ?latestdoctijdstip.
      }
      FILTER NOT EXISTS {
        graph ?laterdoc {
          ?doc rdf:type prov:Entity.
          ?laterdoc prov:generatedAtTime ?laterdoctijdstip.
          FILTER (?laterdoctijdstip > ?latestdoctijdstip)
        }
      }
      FILTER regex( ?g, "^http://omgevingswet.overheid.nl/catalogus/id/transactie/" )
		}
	''';
.

stage:DemoGraph a elmo:Part;
	elmo:index "2";
	elmo:appearance elmo:GraphAppearance;
	elmo:query '''
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix wdrs: <http://www.w3.org/2007/05/powder-s#>
		prefix adms: <http://www.w3.org/ns/adms#>
    prefix adms-status: <http://purl.org/adms/status/>
    prefix slex-status: <http://bp4mc2.org/skos-lex/status/>
		prefix dct: <http://purl.org/dc/terms/>
		construct {
			# Generiek
			<@SUBJECT@> rdfs:label ?label.
			# Begrip
			<@SUBJECT@> dct:hasVersion ?doc.
			?doc rdfs:label ?doctitel.
			# Doc
			<@SUBJECT@> foaf:isPrimaryTopicOf ?metadata.
			<@SUBJECT@> prov:wasRevisionOf ?rev.
			?metadata rdfs:label ?label.
			# Meta
			prov:wasRevisionOf rdfs:label "revisie van".
			dct:hasVersion rdfs:label "versie".
			foaf:isPrimaryTopicOf rdfs:label "metadata".
		}
		where {
			{
				graph ?g {
					<@SUBJECT@> rdf:type skos:Concept.
					<@SUBJECT@> rdfs:label ?label.
					<@SUBJECT@> foaf:isPrimaryTopicOf ?doc.
					BIND (strbefore(strafter(str(?doc),'doc/'),'/concept') as ?doctitel)
				}
			}
			UNION
			{
				graph ?gdoc {
					<@SUBJECT@> adms:status ?status.
					OPTIONAL {<@SUBJECT@> prov:wasRevisionOf ?rev}
					?gdoc prov:generatedAtTime ?doctijdstip.
          BIND( IF( ?status = adms-status:UnderDevelopment, "Werkversie",
                IF( ?status = slex-status:Issued, "Bekendgemaakt", 
                IF( ?status = adms-status:Completed, "Te gebruiken",
                IF( ?status = adms-status:Withdrawn, "Teruggetrokken",
                IF( ?status = adms-status:Deprecated, "Vervallen"
                , str( ?status ) ) ) ) ) ) AS ?statusstring )
					BIND (concat(?statusstring,' (',?doctijdstip,')') as ?label)
					BIND (iri(concat('@SUBJECT@','?graph=',str(?gdoc))) as ?metadata)
				}
			}
		}
	''';
.

#
# Productions
#
updatestage:startdemo a elmo:Production;
	elmo:contains stage:DemoMenu;
	elmo:contains stage:ClearTransactions;
.
updatestage:bekendmaken a elmo:Production;
	elmo:contains stage:DemoMenu;
	elmo:contains stage:search-concepts-under-development;
	elmo:queryForm stage:DSOv2IssueConceptsForm;
	elmo:contains stage:IssueConceptScene;
.

updatestage:geldigmaken a elmo:Production;
  elmo:contains stage:DemoMenu;
	elmo:contains stage:search-concepts-nonenacted;
	elmo:queryForm stage:DSOv2EnactConceptsForm;
	elmo:contains stage:EnactConceptScene;
	elmo:contains stage:werkingsregels;
.


#
# Containers
#
container:nieuwbegrip a elmo:Container;
  elmo:contains stage:DemoMenuTerug;
  rdfs:label "Voeg nieuw concept toe (.ttl)";
  
  # Data
  elmo:replaces container:generiek;
  elmo:query stage:DSOv2ConceptenPost;
.
container:begripaanpassen a elmo:Container;
  elmo:contains stage:DemoMenuTerug;
  rdfs:label "Update bestaand concept (.ttl)";
  
  # Data
  elmo:replaces container:generiek;
  elmo:query stage:DSOv2ConceptenPut;
.
 
#
#
#
# BEHEER CONCEPTEN
#
#
#

#
# CONTAINERS
#

# Twee soorten containers:
# POST
# 	- Voegt één of meerdere nieuwe resourcepen toe
# 	- Geeft een foutmelding als één of meerdere van de geuploade resourcepen al bestaan
# PUT
# 	- Update bestaande resourcepen
#	- Geeft een foutmelding als één of meerdere van de geuploade resourcepen nog niet bestaan
# 

#
# CONTAINERS
#

# Container POST Turtle Concepten
container:resource-post-ttl a elmo:Container;
  # Onderdelen
  elmo:contains stage:DSOv2Beheermenu;
  elmo:representation elmo:UploadRepresentation;
  rdfs:label "Voeg nieuw resource toe (.ttl)";
  
  # Assertions
  elmo:assertion [
		rdfs:label "De upload mag geen datasets zonder dct:title bevatten.";
		elmo:assert-not '''
			prefix container: <http://localhost:8080/catalogus/dsov2/container/>
			prefix dcterms: <http://purl.org/dc/terms/>
      prefix dcat: <http://www.w3.org/ns/dcat#>
			ASK {
				GRAPH container:generiek {
					?s rdf:type ?type.
          FILTER(  ?type IN ( dcat:Dataset, skos:ConceptScheme ) )
					FILTER NOT EXISTS {
						?s dcterms:title ?title.
					}
				}
			}
		''';
	];
	elmo:assertion [
		rdfs:label "De upload mag geen datasets zonder skos:ConceptScheme bevatten.";
		elmo:assert-not '''
			prefix container: <http://localhost:8080/catalogus/dsov2/container/>
			prefix dcat: <http://www.w3.org/ns/dcat#>
			ASK {
				GRAPH container:generiek {
					?s rdf:type dcat:Dataset.
					FILTER NOT EXISTS {
						?s rdf:type skos:ConceptScheme.
					}
				}
			}
		''';
	];
	elmo:assertion [
		rdfs:label "De upload mag geen conceptschemes zonder dcat:Dataset bevatten.";
		elmo:assert-not '''
			prefix container: <http://localhost:8080/catalogus/dsov2/container/>
			prefix dcat: <http://www.w3.org/ns/dcat#>
			ASK {
				GRAPH container:generiek {
					?s rdf:type skos:ConceptScheme.
					FILTER NOT EXISTS {
						?s rdf:type dcat:Dataset.
					}
				}
			}
		''';
	];
  elmo:assertion [
		rdfs:label "De upload mag geen triples met skos:inScheme als predicate bevatten.";
		elmo:assert-not '''
			prefix container: <http://localhost:8080/catalogus/dsov2/container/>
			prefix dcat: <http://www.w3.org/ns/dcat#>
			ASK {
				GRAPH container:generiek {
					?s skos:inScheme ?scheme.
				}
			}
		''';
	];
  elmo:assertion [
		rdfs:label "De upload mag geen triples met dcterms:temporal als predicate bevatten.";
		elmo:assert-not '''
			prefix container: <http://localhost:8080/catalogus/dsov2/container/>
			prefix dcterms: <http://purl.org/dc/terms/>

			ASK {
				GRAPH container:generiek {
					?s dcterms:temporal ?temporal.
				}
			}
		''';
	];
  # Data
  elmo:replaces container:generiek
.

# Container PUT Turtle Concepten
container:resource-put-ttl a elmo:Container;
  # Onderdelen
  elmo:contains stage:DSOv2Beheermenu;
  
  # Weergave
  elmo:representation elmo:UploadRepresentation;
  rdfs:label "Update bestaande resource (.ttl)";
  
  # Assertions
  elmo:assertion [
    rdfs:label "De upload bevat resources die nog niet bestaan.";
    elmo:assert-not '''
      prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
      ASK {
        GRAPH container:generiek {
          ?s rdf:type ?type.
        }
        FILTER NOT EXISTS {
          GRAPH ?transactie {
            ?s rdf:type ?type.
          }
          FILTER regex( ?transactie, "http://catalogus.test.kadaster.nl/id/transactie/" )
        }
      }
    '''
  ];
  
  # Data
  elmo:replaces container:generiek;
  elmo:query stage:ResourcePutScene;
.

# Container voor aanvullen resource
container:resource-add-ttl a elmo:Container;
  # Onderdelen
  elmo:contains stage:DSOv2Beheermenu;
  
  # Weergave
  elmo:representation elmo:UploadRepresentation;
  rdfs:label "Vul bestaand resource aan (.ttl)";
  
  # Data
  elmo:replaces container:generiek;
  elmo:query stage:ResourceAddScene;
.

#
# PRODUCTIONS
#
updatestage:resource-post a elmo:Production;
  elmo:contains stage:DSOv2Beheermenu;
  elmo:contains stage:SelectOrganization;
  elmo:contains stage:SelectDataset;
  elmo:queryForm stage:ResourcePostForm;
  elmo:contains stage:PrepareDatasetDataScene;
  elmo:contains stage:ResourcePostScene;
  elmo:contains stage:GarbageCollectionScene
.

stage:ResourcePostForm a elmo:Form;
  rdfs:label "Selecteer organisatie en dataset";
  elmo:fragment [
      elmo:applies-to "oin";
      rdfs:label "Organisatie"@nl;
      elmo:valuesFrom stage:SelectOrganization;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "1";
  ];
  elmo:fragment [
      elmo:applies-to "dataset";
      rdfs:label "Dataset"@nl;
      elmo:valuesFrom stage:SelectDataset;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "2";
  ];
  elmo:fragment [
		elmo:appearance elmo:SubmitAppearance;
		rdfs:label "Ga verder"@nl;
		elmo:index "4";
	]
.

#
# PARTS
#

stage:SelectOrganization a elmo:Part;
	elmo:appearance elmo:HiddenAppearance;
	elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix org:             <http://www.w3.org/TR/vocab-org#>
		prefix prov:            <http://www.w3.org/ns/prov#>
		prefix skos:            <http://www.w3.org/2004/02/skos/core#>
		
		CONSTRUCT {
			?oin rdfs:label ?label.
		}
		WHERE {
      {
        GRAPH ?orgGraph {
          ?org rdf:type org:Organization;
            rdfs:label ?label;
            foaf:isPrimaryTopicOf ?doc;
            org:identifier ?identifier
          .
        }
        FILTER regex( ?orgGraph, "http://catalogus.test.kadaster.nl/id/transactie/" )
        GRAPH ?docGraph {
          ?doc rdf:type prov:Entity;
            adms:status adms-status:Completed;
            dcterms:temporal/dcmiperiod:start ?start
          .
          FILTER( strdt( ?start, xsd:dateTime ) <= now() )
          FILTER NOT EXISTS {
            ?doc dcterms:temporal/dcmiperiod:end ?end.
            FILTER( strdt( ?end, xsd:dateTime ) < now() )
          }
          
          ?docGraph prov:generatedAtTime ?docTime.
          FILTER NOT EXISTS {
            GRAPH ?newerDocGraph {
              ?doc rdf:type prov:Entity.
              ?newerDocGraph prov:generatedAtTime ?newerDocTime.
              FILTER( ?newerDocTime > ?docTime )
            }
          }
        }
        BIND( iri( ?identifier) AS ?oin )
      } UNION {
        BIND( iri( "blank" ) AS ?oin )
        BIND( "(N/A)" AS ?label )
      }
		}
	'''
.

# Bij overgang naar LDT2.0 zou het mooi zijn als hier enkel de datasets horende bij de geselecteerde organisatie getoond worden
stage:SelectDataset a elmo:Part;
	elmo:appearance elmo:HiddenAppearance;
	elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcat: 		        <http://www.w3.org/ns/dcat#>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix org:             <http://www.w3.org/TR/vocab-org#>
		prefix prov:            <http://www.w3.org/ns/prov#>
		prefix skos:            <http://www.w3.org/2004/02/skos/core#>
		
		CONSTRUCT {
			?dataset rdfs:label ?label.
		}
		WHERE {
      {
        GRAPH ?datasetGraph {
          ?dataset rdf:type dcat:Dataset;
            dcterms:title ?label;
            foaf:isPrimaryTopicOf ?doc
          .
        }
        FILTER regex( ?datasetGraph, "http://catalogus.test.kadaster.nl/id/transactie/" )
        GRAPH ?docGraph {
          ?doc rdf:type prov:Entity;
            adms:status adms-status:Completed;
            dcterms:temporal/dcmiperiod:start ?docStart
          .
          FILTER( strdt( ?docStart, xsd:dateTime ) <= now() )
          FILTER NOT EXISTS {
            ?doc dcterms:temporal/dcmiperiod:end ?end.
            FILTER( strdt( ?end, xsd:dateTime ) < now() )
          }
          
          ?docGraph prov:generatedAtTime ?docTime.
          FILTER NOT EXISTS {
            GRAPH ?newerDocGraph {
              ?doc rdf:type prov:Entity.
              ?newerDocGraph prov:generatedAtTime ?newerDocTime.
              FILTER( ?newerDocTime > ?docTime )
            }
          }
        }
      } UNION {
        BIND( iri( "blank" ) AS ?dataset )
        BIND( "(N/A)" AS ?label )
      }
		}
	'''
.

#
# SCENES
#

stage:PrepareDatasetDataScene a elmo:Scene;
  rdfs:label "Datasetinformatie toevoegen waar nodig";
  elmo:index "10";
  elmo:query '''
    prefix dcat: 		        <http://www.w3.org/ns/dcat#>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    
    INSERT {
      GRAPH container:generiek {
        ?s skos:inScheme <@DATASET@>.
      }
    }
    WHERE {
      GRAPH container:generiek {
        ?s rdf:type ?type.
        FILTER NOT EXISTS {
          ?s skos:inScheme ?scheme.
        }
        FILTER( ?type NOT IN ( dcat:Dataset, skos:ConceptScheme, dcat:Catalog ) )
      }
      
    }
  '''
.

stage:ResourcePostScene a elmo:Scene;
	rdfs:label "Opslaan van de resources";
  elmo:index "90";
	elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcat: 		        <http://www.w3.org/ns/dcat#>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix def:             <http://catalogus.test.kadaster.nl/def/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix org:             <http://www.w3.org/TR/vocab-org#>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
    prefix skos-lex-status: <http://bp4mc2.org/skos-lex/status/>
    
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
    
    INSERT {
      GRAPH ?transactie {
        ?transactie rdf:type sd:Graph, prov:Entity;
          skos:changeNote "Reserveren van de resource in de Catalogus";
          prov:generatedAtTime ?now;
          prov:wasAttributedTo ?org
        .
        
        ?subject ?p ?o;
          foaf:isPrimaryTopicOf ?doc
        .
        
        ?doc rdf:type prov:Entity;
          adms:status adms-status:UnderDevelopment
        .
      }
    }
    WHERE {
      {
        GRAPH ?orgGraph {
          ?org rdf:type org:Organization;
            org:identifier "@OIN@"^^xsd:string;
            foaf:isPrimaryTopicOf ?docOrg
          .
        }
        GRAPH ?docOrgGraph {
          ?docOrg adms:status adms-status:Completed;
            dcterms:temporal/dcmiperiod:start ?orgStart
          .
          FILTER( strdt( ?orgStart, xsd:dateTime ) <= now() )
          FILTER NOT EXISTS {
            ?docOrg dcterms:temporal/dcmiperiod:end ?orgEnd.
            FILTER( strdt( ?orgEnd, xsd:dateTime ) < now() )
          }
          
          ?docOrgGraph prov:generatedAtTime ?docOrgTime.
          FILTER NOT EXISTS {
            GRAPH ?newerDocOrgGraph {
              ?docOrg rdf:type prov:Entity.
              ?newerDocOrgGraph prov:generatedAtTime ?newerDocOrgTime.
              FILTER( ?newerDocOrgTime > ?docOrgTime )
            }
          }
        }
        GRAPH ?datasetGraph {
          <@DATASET@> dcterms:publisher ?org;
            foaf:isPrimaryTopicOf ?docDataset
          .
        }
        GRAPH ?docDatasetGraph {
          ?docDataset adms:status adms-status:Completed;
            dcterms:temporal/dcmiperiod:start ?datasetStart
          .
          FILTER( strdt( ?datasetStart, xsd:dateTime ) <= now() ).
          FILTER NOT EXISTS {
            ?docDataset dcterms:temporal/dcmiperiod:end ?datasetEnd.
            FILTER( strdt( ?datasetEnd, xsd:dateTime ) < now() )
          }
          
          ?docDatasetGraph prov:generatedAtTime ?docDatasetTime.
          FILTER NOT EXISTS {
            GRAPH ?newerDocDatasetGraph {
              ?docDataset rdf:type prov:Entity.
              ?newerDocDatasetGraph prov:generatedAtTime ?newerDocDatasetTime.
              FILTER( ?newerDocDatasetTime > ?docDatasetTime )
            }
          }
        }
        GRAPH container:generiek {
          ?s rdf:type ?type;
            ?p ?o
          .
          OPTIONAL {
            ?s skos:prefLabel ?prefLabel
          }
          FILTER( ?type NOT IN ( dcat:Dataset, skos:ConceptScheme, org:Organization ) )
        }
      } UNION {
        GRAPH container:generiek {
          ?s rdf:type ?type;
            ?p ?o
          .
          OPTIONAL {
            ?s dcterms:title ?title.
          }
          OPTIONAL {
            ?s skos:prefLabel ?prefLabel
          }
          BIND( user:Admin as ?org )
          
          FILTER( ?type IN ( dcat:Dataset, skos:ConceptScheme, org:Organization ) )
        }
      }
      
      BIND( iri( concat( "http://catalogus.test.kadaster.nl/id/transactie/", replace( now(), " ", "T" ) ) ) AS ?transactie )
      BIND( IF( BOUND( ?prefLabel ), ?prefLabel,
            IF( BOUND( ?title ), replace( ?title, " ", "" ),
            replace( str( ?s ), ".+/", "" )
          ) ) AS ?workingLabel )
      BIND( IF( ?type = skos:ConceptScheme, dcat:Dataset, ?type ) AS ?workingType )
      BIND( lcase( replace( replace( str( ?workingType ), ".+/", "" ), ".+#", "" ) ) AS ?typename )
      BIND( strbefore( "@DATASET@", "/id/" ) AS ?prefix )
      BIND( IF( ?workingType = dcat:Dataset, ?s, iri( concat( ?prefix, "/id/", ?typename, "/", ?workingLabel ) ) ) AS ?subject )
      BIND( iri ( concat(  "http://catalogus.test.kadaster.nl/id/entity/", replace( now(), " ", "T" ), "-", ?typename, "-", ?workingLabel ) ) AS ?doc )
      BIND( now() AS ?now )
    }
	''';
.

stage:ResourcePutScene a elmo:Scene;
	rdfs:label "Query voor verwerken PUT";
	elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcat: 	  		    <http://www.w3.org/ns/dcat#>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
    prefix skos-lex-status: <http://bp4mc2.org/skos-lex/status/>
    
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
		
    INSERT {
      GRAPH ?transactie {
        ?transactie rdf:type sd:Graph, prov:Entity;
          skos:changeNote "Aanpassen van een resource in de Catalogus";
          prov:generatedAtTime ?now;
          prov:wasAttributedTo user:TomcatUser
        .
        
        ?s ?p ?o;
          foaf:isPrimaryTopicOf ?doc;
          skos:inScheme ?scheme
        .
        
        ?doc rdf:type prov:Entity;
          adms:status adms-status:UnderDevelopment;
          prov:wasRevisionOf ?currentDoc
        .
        
        ?udDoc ?docP ?docO;
          adms:status adms-status:Withdrawn
        .
      }
    }
    WHERE {
      GRAPH container:generiek {
        ?s ?p ?o;
          rdf:type ?type
        .
        FILTER( ?p != skos:inScheme )
      }
      GRAPH ?graph {       
        ?s foaf:isPrimaryTopicOf ?currentDoc.
        OPTIONAL {
          ?s skos:prefLabel ?prefLabel.
        }
        OPTIONAL {
          ?s dcterms:title ?title.
        }
        OPTIONAL {
          ?s skos:inScheme ?scheme.
        }
        
        ?graph prov:generatedAtTime ?graphTime.
        FILTER NOT EXISTS {
          GRAPH ?newerGraph {
            ?newerGraph prov:generatedAtTime ?newerTime.
            ?s rdf:type ?type.
            FILTER( ?newerTime > ?graphTime )
          }
        }
      }
      FILTER regex( ?graph, "http://catalogus.test.kadaster.nl/id/transactie/" )
      
      OPTIONAL {
        GRAPH ?udGraph {
          ?s foaf:isPrimaryTopicOf ?udDoc.
          ?udDoc ?docP ?docO;
            adms:status adms-status:UnderDevelopment
          .
          FILTER( ?docP != adms:status )
          
          ?udGraph prov:generatedAtTime ?udGraphTime.       
          FILTER NOT EXISTS {
            GRAPH ?newerDocGraph {
              ?udDoc rdf:type prov:Entity.
              ?newerDocGraph prov:generatedAtTime ?newerDocGraphTime.
              FILTER ( ?newerDocGraphTime > ?udGraphTime )            
            }
          }
        }
        FILTER regex( ?udGraph, "http://catalogus.test.kadaster.nl/id/transactie/" )
      }
      
      BIND( iri( concat( "http://catalogus.test.kadaster.nl/id/transactie/", replace( now(), " ", "T" ) ) ) AS ?transactie )
      BIND( IF( ?type = skos:ConceptScheme, dcat:Dataset, ?type ) AS ?workingType )
      BIND( lcase( replace( replace( str( ?workingType ), ".+/", "" ), ".+#", "" ) ) AS ?typename )
      BIND( IF( BOUND( ?title ), replace( ?title, " ", "" ), ?prefLabel ) AS ?label )
      BIND( iri ( concat(  "http://catalogus.test.kadaster.nl/id/entity/", replace( now(), " ", "T" ), "-", ?typename, "-", ?label ) ) AS ?doc )
      BIND( now() AS ?now )
    }
    
    CLEAR GRAPH container:generiek
    CLEAR GRAPH container:resource-put-ttl

  '''
.
    
stage:ResourceAddScene a elmo:Scene;
	rdfs:label "Query voor verwerken aanvullen resource";
	elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcterms:         <http://purl.org/dc/terms/>
    prefix foaf:            <http://xmlns.com/foaf/0.1/>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
    prefix skos-lex-status: <http://bp4mc2.org/skos-lex/status/>
    
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
		
    INSERT {
      GRAPH ?transactie {
        ?transactie rdf:type sd:Graph, prov:Entity;
          skos:changeNote "Aanvullen van een in werking zijnde resource met buiten-besluit elementen";
          prov:generatedAtTime ?now;
          prov:wasAttributedTo user:TomcatUser
        .
        
        ?s ?p ?o;
          foaf:isPrimaryTopicOf ?doc;
          ?pred ?obj
        .
        
        ?doc adms:status adms-status:Completed;
          prov:wasRevisionOf ?currentDoc;
          ?docP ?docO
        .
        
        ?currentDoc adms:status adms-status:Deprecated;
          prov:wasRevisionOf ?currentDocRev;
          prov:wasGeneratedBy ?activity;
          ?docP ?docO
        .
      }
    }
    WHERE {
      GRAPH container:generiek {
        ?s ?p ?o.
        
        FILTER(
          ?p != rdf:type
          && ?p != rdfs:label
          && ?p != skos:prefLabel
          && ?p != skos:definition
        )
      }
      GRAPH ?graph {
        ?s rdf:type ?type;
          foaf:isPrimaryTopicOf ?currentDoc;
          ?pred ?obj
        .
        OPTIONAL {
          ?s skos:prefLabel ?prefLabel.
        }
        OPTIONAL {
          ?s dcterms:title ?title.
        }
        FILTER(
          ?pred != foaf:isPrimaryTopicOf
        )
          
        ?graph prov:generatedAtTime ?graphTime.
        FILTER NOT EXISTS {
          GRAPH ?newerGraph {
            ?newerGraph prov:generatedAtTime ?newerTime.
            ?s rdf:type skos:Concept;
              foaf:isPrimaryTopicOf ?newerDoc.
            FILTER( ?newerTime > ?graphTime )
          }
          GRAPH ?docNewerGraph {
            ?newerDoc adms:status adms-status:Completed
          }
        }
      }
      FILTER regex( ?graph, "http://catalogus.test.kadaster.nl/id/transactie/" )
      GRAPH ?docGraph {
        ?currentDoc adms:status adms-status:Completed;
          ?docP ?docO
        .
        OPTIONAL {
          ?currentDoc prov:wasRevisionOf ?currentDocRev.
        }
        FILTER (
          ?docP != prov:wasRevisionOf
          && ?docP != prov:wasGeneratedBy
          && ?docP != adms:status
        )
        
        ?docGraph prov:generatedAtTime ?docGraphTime.
        FILTER NOT EXISTS {
          GRAPH ?newerDocGraph {
            ?thisDoc adms:status adms-status:Completed.
            ?newerDocGraph prov:generatedAtTime ?newerDocGraphTime.
            FILTER( ?newerDocGraphTime > ?docGraphTime )
          }
        }
      }
      
      BIND( iri( concat( "http://catalogus.test.kadaster.nl/id/transactie/", replace( now(), " ", "T" ) ) ) AS ?transactie )
      BIND( lcase( replace( replace( str( ?workingType ), ".+/", "" ), ".+#", "" ) ) AS ?typename )
      BIND( IF( BOUND( ?prefLabel ), ?prefLabel,
            IF( BOUND( ?title ), ?title, 
          ) ) AS ?workingLabel )
      BIND( iri ( concat(  "http://catalogus.test.kadaster.nl/id/entity", replace( now(), " ", "T" ), "-", ?typename, "-", ?workingLabel ) ) AS ?doc )
      BIND( now() AS ?now )
    }
    
    CLEAR GRAPH container:generiek
    CLEAR GRAPH container:resource-add-ttl
  '''
. 
#
#
#
# BEHEER WAARDELIJSTEN
#
#
#

#
# PRODUCTIONS
#

# Aanmaken waardelijst
updatestage:createwaardelijst a elmo:Production;
  elmo:contains stage:DSOv2Beheermenu;
	elmo:contains stage:DSOv2Header;
	elmo:contains stage:DSOv2Footer;
	elmo:queryForm stage:CreateWaardelijstForm;
	elmo:contains stage:CreateClassificerendScene;
	elmo:contains stage:CreateCategoriserendScene;
	elmo:contains stage:CreateRefererendScene;
  elmo:contains stage:InformationModelsList;
  elmo:contains stage:TypeWaardelijstenList;
.

stage:CreateWaardelijstForm a elmo:Form;
	rdfs:label "Maak waardelijst aan";
  elmo:index "2";
  elmo:fragment [
      elmo:applies-to "name";
      rdfs:label "Naam van de waardelijst"@nl;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "1";
  ];
  elmo:fragment [
      elmo:applies-to "type";
      rdfs:label "Selecteer het type van de waardelijst"@nl;
      elmo:valuesFrom stage:TypeWaardelijstenList;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "3";
  ];
  elmo:fragment [
      elmo:applies-to "model";
      rdfs:label "Selecteer het informatiemodel horende bij de waardelijst"@nl;
      elmo:valuesFrom stage:InformationModelsList;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "3";
  ];
  elmo:fragment [
      elmo:appearance elmo:SubmitAppearance;
      rdfs:label "Ga verder"@nl;
      elmo:index "4";
  ]
.

stage:InformationModelsList a elmo:Part;
  elmo:appearance elmo:HiddenAppearance;
  elmo:query '''
    prefix owl: 			<http://www.w3.org/2002/07/owl#>
    prefix rdfs: 			<http://www.w3.org/2000/01/rdf-schema#>
    
    CONSTRUCT {
      ?model rdfs:label ?model_label
    }
    WHERE {
      GRAPH ?g {
        ?model rdf:type owl:Ontology;
          rdfs:label ?model_label
        .
      }
    }
  ''';
.

stage:TypeWaardelijstenList a elmo:Part;
  elmo:appearance elmo:HiddenAppearance;
  elmo:query '''
    prefix bp4mc2: <http://bp4mc2.org/elmo/def/>
    
    CONSTRUCT {
      bp4mc2:Classificerend rdfs:label "Classificerend".
      bp4mc2:Categoriserend rdfs:label "Categoriserend".
      bp4mc2:Refererend rdfs:label "Refererend".
    }
    WHERE {}
  ''';
.

#
# SCENES
#

# Scenes voor het creëren van een waardelijst
stage:CreateClassificerendScene a elmo:Scene;
  rdfs:label "Creëren classificerende waardelijst";
  elmo:query '''
    prefix bp4mc2:  <http://bp4mc2.org/elmo/def/>
    prefix def:     <http://catalogus.test.kadaster.nl/def/>
    prefix rdf: 		<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
    prefix rdfs:		<http://www.w3.org/2000/01/rdf-schema#>
    prefix skos:		<http://www.w3.org/2004/02/skos/core#>
    
    prefix sh: 		  <http://www.w3.org/ns/shacl#>
    prefix shxl:    <http://bp4mc2.org/def/sh-xl#>

    INSERT {
      GRAPH def:Waardelijsten {
        ?waardelijst a sh:NodeShape;
          rdfs:label "@NAME@"@nl;
          shxl:stereotype shxl:ValueList;
          sh:property [
            sh:path [ sh:inversePath skos:member ];
            sh:hasValue ?collection
          ]
        .
      }
    }
    WHERE {
      BIND( IRI("@MODEL@/@NAME@ValueList") AS ?waardelijst )
      BIND( IRI("http://catalogus.test.kadaster.nl/id/collection/@NAME@") AS ?collection )  
      FILTER( <@TYPE@> = bp4mc2:Classificerend )
    }
  '''
.

stage:CreateCategoriserendScene a elmo:Scene;
  rdfs:label "Creëren categoriserende waardelijst";
  elmo:query '''
    prefix bp4mc2:  <http://bp4mc2.org/elmo/def/>
    prefix dcat:    <http://www.w3.org/ns/dcat#>
    prefix def:     <http://catalogus.test.kadaster.nl/def/>
    prefix rdf: 		<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
    prefix rdfs:		<http://www.w3.org/2000/01/rdf-schema#>
    prefix skos:		<http://www.w3.org/2004/02/skos/core#>
    
    prefix sh: 		  <http://www.w3.org/ns/shacl#>
    prefix shxl:    <http://bp4mc2.org/def/sh-xl#>

    INSERT {
      GRAPH def:Waardelijsten {
        ?waardelijst a sh:NodeShape;
          rdfs:label "@NAME@"@nl;
          shxl:stereotype shxl:ValueList;
          sh:property [
            sh:path skos:inScheme;
            sh:hasValue ?scheme
          ]
        .
        
        ?scheme a skos:ConceptScheme, dcat:Dataset;
          rdfs:label "@NAME@"
        .
      }
    }
    WHERE {
      BIND( IRI("@MODEL@/@NAME@ValueList") AS ?waardelijst )
      BIND( IRI("http://catalogus.test.kadaster.nl/id/dataset/@NAME@") AS ?scheme )  
      FILTER( <@TYPE@> = bp4mc2:Categoriserend )
    }
  '''
.

stage:CreateRefererendScene a elmo:Scene;
  rdfs:label "Creëren refererende waardelijst";
  elmo:query '''
    prefix bp4mc2:  <http://bp4mc2.org/elmo/def/>
    prefix def:     <http://catalogus.test.kadaster.nl/def/>
    prefix rdf: 		<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
    prefix rdfs:		<http://www.w3.org/2000/01/rdf-schema#>
    prefix skos:		<http://www.w3.org/2004/02/skos/core#>
    
    prefix sh: 		  <http://www.w3.org/ns/shacl#>
    prefix shxl:    <http://bp4mc2.org/def/sh-xl#>

    INSERT {
      GRAPH def:Waardelijsten {
        ?waardelijst a sh:NodeShape;
          rdfs:label "@NAME@"@nl;
          shxl:stereotype shxl:Valuelist;
          sh:property [
            sh:path rdf:type;
            sh:hasValue ?class
          ]
        .
        ?class a rdfs:Class.
      }
    }
    WHERE {
      BIND( IRI("@MODEL@/@NAME@ValueList") AS ?waardelijst )
      BIND( IRI("@MODEL@#@NAME@") AS ?class ) 
      FILTER( <@TYPE@> = bp4mc2:Refererend )
    }
  '''
.
 
#
#
#
# BEHEER WAARDELIJSTEN
#
#
#

#
# CONTAINERS
#

# Uploadcontainer voor waarden in waardelijst
container:waarden-post a elmo:Container;
  rdfs:label "Upload waarden om toe te voegen aan waardelijst";
  elmo:representation elmo:UploadRepresentation;
  elmo:contains stage:DSOv2Beheermenu;
	elmo:contains stage:DSOv2Header;
	elmo:contains stage:DSOv2Footer;
	elmo:replaces container:generiek;
  elmo:assertion [
		rdfs:label "De upload mag geen triples met skos:inScheme als predicate bevatten.";
		elmo:assert-not '''
			prefix container: <http://localhost:8080/catalogus/dsov2/container/>
			prefix dcat: <http://www.w3.org/ns/dcat#>
			ASK {
				GRAPH container:generiek {
					?s skos:inScheme ?scheme.
				}
			}
		''';
	];
.


#
# PRODUCTIONS
#

# Sync van waarden naar waardelijst
updatestage:syncwaarden a elmo:Production;
  elmo:contains stage:DSOv2Beheermenu;
	elmo:contains stage:DSOv2Header;
	elmo:contains stage:DSOv2Footer;
	elmo:queryForm stage:PostWaardenForm;
  elmo:contains stage:SelectOrganization;
  elmo:contains stage:SelectDataset;
	elmo:contains stage:PrepareClassificerendScene;
	elmo:contains stage:PrepareCategoriserendScene;
	elmo:contains stage:PrepareRefererendScene;
  elmo:contains stage:PrepareDatasetDataScene;
  elmo:contains stage:ResourcePostScene;
	elmo:contains stage:GarbageCollectionScene;
  elmo:contains stage:WaardelijstenList;
.

stage:PostWaardenForm a elmo:Form;
	rdfs:label "Sync waarden naar waardelijst";
  elmo:index "2";
  elmo:fragment [
      elmo:applies-to "oin";
      rdfs:label "OIN"@nl;
      elmo:valuesFrom stage:SelectOrganization;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "1";
  ];
  elmo:fragment [
      elmo:applies-to "dataset";
      rdfs:label "Dataset"@nl;
      elmo:valuesFrom stage:SelectDataset;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "2";
  ];
  elmo:fragment [
      elmo:applies-to "waardelijst";
      rdfs:label "Selecteer de waardelijst"@nl;
      elmo:valuesFrom stage:WaardelijstenList;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "3";
  ];
  elmo:fragment [
      elmo:appearance elmo:SubmitAppearance;
      rdfs:label "Ga verder"@nl;
      elmo:index "4";
  ]
.

stage:WaardelijstenList a elmo:Part;
  elmo:appearance elmo:HiddenAppearance;
  elmo:query '''
    prefix def:     <http://catalogus.test.kadaster.nl/def/>
    prefix rdfs: 		<http://www.w3.org/2000/01/rdf-schema#>
    prefix sh: 		  <http://www.w3.org/ns/shacl#>
        
    CONSTRUCT {
      ?waardelijst rdfs:label ?waardelijst_label
    }
    WHERE {
      GRAPH def:Waardelijsten {
        ?waardelijst rdf:type sh:NodeShape;
          rdfs:label ?waardelijst_label
        .
      }
    }
  ''';
.

#
# SCENES
#

stage:PrepareClassificerendScene a elmo:Scene;
  rdfs:label "Klaarzetten data voor classificerende waardelijst";
  elmo:index "01";
  elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix sh: 		          <http://www.w3.org/ns/shacl#>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
    prefix skos-lex-status: <http://bp4mc2.org/skos-lex/status/>
    
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix def:             <http://catalogus.test.kadaster.nl/def/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
    
    INSERT {
      GRAPH container:generiek {
        ?collection rdf:type skos:Collection;
          rdfs:label ?name;
          skos:prefLabel ?name;
          skos:member ?s;
          skos:member ?member
        .
      }
    }
    WHERE {
      GRAPH container:generiek {
        ?s rdf:type skos:Concept.
      }
      GRAPH def:Waardelijsten {
        <@WAARDELIJST@> rdf:type sh:NodeShape;
          rdfs:label ?name;
          sh:property [
            sh:path [ sh:inversePath skos:member ];
            sh:hasValue ?collection
          ]
        .
      }
      OPTIONAL {
        GRAPH ?graph {       
          ?collection skos:member ?member.
          ?graph prov:generatedAtTime ?graphTime.
          FILTER NOT EXISTS {
            GRAPH ?newerGraph {
              ?newerGraph prov:generatedAtTime ?newerTime.
              ?collection rdf:type skos:Collection.
              FILTER( ?newerTime > ?graphTime )
            }
          }
        }
        FILTER regex( ?graph, "http://catalogus.test.kadaster.nl/id/transactie/" )
      }
    }
  '''
.

stage:PrepareCategoriserendScene a elmo:Scene;
  rdfs:label "Klaarzetten data voor categoriserende waardelijst";
  elmo:index "02";
  elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix sh: 		          <http://www.w3.org/ns/shacl#>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
    prefix skos-lex-status: <http://bp4mc2.org/skos-lex/status/>
    
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix def:             <http://catalogus.test.kadaster.nl/def/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
    
    INSERT {
      GRAPH container:generiek {
        ?s skos:inScheme ?scheme.
      }
    }
    WHERE {
      GRAPH container:generiek {
        ?s rdf:type skos:Concept.
      }
      GRAPH def:Waardelijsten {
        <@WAARDELIJST@> rdf:type sh:NodeShape;
          rdfs:label ?name;
          sh:property [
            sh:path skos:inScheme;
            sh:hasValue ?scheme
          ]
        .
      }
    }
  '''
.

stage:PrepareRefererendScene a elmo:Scene;
  rdfs:label "Klaarzetten data voor refererende waardelijst";
  elmo:index "03";
  elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix sh: 		          <http://www.w3.org/ns/shacl#>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
    prefix skos-lex-status: <http://bp4mc2.org/skos-lex/status/>
    
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix def:             <http://catalogus.test.kadaster.nl/def/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
    
    INSERT {
      GRAPH container:generiek {
        ?s rdf:type ?class.
      }
    }
    WHERE {
      GRAPH container:generiek {
        ?s rdf:type ?type.
      }
      GRAPH def:Waardelijsten {
        <@WAARDELIJST@> rdf:type sh:NodeShape;
          rdfs:label ?name;
          sh:property [
            sh:path rdf:type;
            sh:hasValue ?class
          ]
        .
      }
    }
    
    DELETE {
      GRAPH container:generiek {
        ?s rdf:type ?type.
      }
    }
    WHERE {
      GRAPH container:generiek {
        ?s rdf:type ?type.
      }
      GRAPH def:Waardelijsten {
        <@WAARDELIJST@> rdf:type sh:NodeShape;
          rdfs:label ?name;
          sh:property [
            sh:path rdf:type;
            sh:hasValue ?class
          ]
        .
      }
      FILTER ( ?type != ?class )
    }
  '''
.

stage:GarbageCollectionScene a elmo:Scene;
  rdfs:label "Opruimen tijdelijks graphs";
  elmo:index "99";
  elmo:query '''
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    
    CLEAR GRAPH container:generiek
    CLEAR GRAPH container:waarden-post
    CLEAR GRAPH container:waarden-put
  '''
.
 
#
#
#
# BEHEER COLLECTION
#
#
#
#
# PRODUCTIONS
#

# De form laat alle members van alle geldige collecties zien, voor het LDT 2.0 zouden we hier liever een afhankelijkheid van de geselecteerde collectie in willen bouwen.

updatestage:deletevaluescollection a elmo:Production;
  elmo:contains stage:DSOv2Beheermenu;
	elmo:contains stage:DSOv2Header;
	elmo:contains stage:DSOv2Footer;
	elmo:queryForm stage:DeleteWaardenCollectionForm;
  elmo:contains stage:SelectCollection;
  elmo:contains stage:CollectionMemberList;
  elmo:contains stage:ClearSingleMemberScene
.

stage:DeleteWaardenCollectionForm a elmo:Form;
	rdfs:label "Verwijder waarde uit collectie";
  elmo:index "2";
  elmo:fragment [
      elmo:applies-to "collectie";
      rdfs:label "Selecteer de collectielijst"@nl;
      elmo:valuesFrom stage:SelectCollection;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "3";
  ];
  elmo:fragment [
      elmo:applies-to "concept";
      rdfs:label "Selecteer het concept"@nl;
      elmo:valuesFrom stage:CollectionMemberList;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "4";
  ];
  elmo:fragment [
      elmo:appearance elmo:SubmitAppearance;
      rdfs:label "Ga verder"@nl;
      elmo:index "5";
  ]
.

stage:CollectionMemberList a elmo:Part;
  elmo:appearance elmo:HiddenAppearance;
  elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix org:             <http://www.w3.org/TR/vocab-org#>
		prefix prov:            <http://www.w3.org/ns/prov#>
		prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    
		CONSTRUCT {
			?concept rdfs:label ?concept_label
		}
		WHERE {
      GRAPH ?orgGraph {
        ?collection  skos:member ?concept.
        ### We moeten rekening houden met de mogelijkheid dat de (laatste) informatie over een concept,
        ### niet in dezelfde graph staat als de laatste informatie over de collectie.
        ### Wat moet er dus gebeuren? 
        ## Onderstaande? de nieuwste informatie (in dit geval het label) ophalen uit de nieuwste graph die we kunnen vinden waar het concept in staat? 
      }
      FILTER regex( ?orgGraph, "http://catalogus.test.kadaster.nl/id/transactie/" )
      GRAPH ?conceptgraph {
      ?concept rdfs:label ?concept_label. 
      ?conceptgraph prov:generatedAtTime ?ConceptTime.
        FILTER NOT EXISTS {
          GRAPH ?newerConceptGraph {
            ?concept a skos:Concept. 
            ?newerConceptGraph prov:generatedAtTime ?newerConceptTime.
            FILTER( ?newerConceptTime > ?ConceptTime )
          }
        }  
      }
      FILTER regex( ?conceptgraph, "http://catalogus.test.kadaster.nl/id/transactie/" )
      GRAPH ?docGraph {
        ?doc rdf:type prov:Entity;
          adms:status adms-status:Completed;
          dcterms:temporal/dcmiperiod:start ?start
        .
        FILTER( strdt( ?start, xsd:dateTime ) <= now() )
        FILTER NOT EXISTS {
          ?doc dcterms:temporal/dcmiperiod:end ?end.
          FILTER( strdt( ?end, xsd:dateTime ) < now() )
        }
        
        ?docGraph prov:generatedAtTime ?docTime.
        FILTER NOT EXISTS {
          GRAPH ?newerDocGraph {
            ?doc rdf:type prov:Entity.
            ?newerDocGraph prov:generatedAtTime ?newerDocTime.
            FILTER( ?newerDocTime > ?docTime )
          }
        }  
      }    
    }
    
  '''
.  

stage:SelectCollection a elmo:Part;
	elmo:appearance elmo:HiddenAppearance;
	elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix org:             <http://www.w3.org/TR/vocab-org#>
		prefix prov:            <http://www.w3.org/ns/prov#>
		prefix skos:            <http://www.w3.org/2004/02/skos/core#>
		
		CONSTRUCT {
			?collection rdfs:label ?label.
		}
		WHERE {
      GRAPH ?orgGraph {
        ?collection rdf:type skos:Collection;
          rdfs:label ?label;
          foaf:isPrimaryTopicOf ?doc
        .
      }
      FILTER regex( ?orgGraph, "http://catalogus.test.kadaster.nl/id/transactie/" )
      GRAPH ?docGraph {
        ?doc rdf:type prov:Entity;
          adms:status adms-status:Completed;
          dcterms:temporal/dcmiperiod:start ?start
        .
        FILTER( strdt( ?start, xsd:dateTime ) <= now() )
        FILTER NOT EXISTS {
          ?doc dcterms:temporal/dcmiperiod:end ?end.
          FILTER( strdt( ?end, xsd:dateTime ) < now() )
        }
        
       ?docGraph prov:generatedAtTime ?docTime.
        FILTER NOT EXISTS {
          GRAPH ?newerDocGraph {
            ?doc rdf:type prov:Entity.
            ?newerDocGraph prov:generatedAtTime ?newerDocTime.
            FILTER( ?newerDocTime > ?docTime )
          }
        }  
      }
    }
    
	'''
.


# Scene gebruikt voor het verwijderen van alleen de geslecteerde skos:member
stage:ClearSingleMemberScene a elmo:Scene;
	elmo:index "1";
	rdfs:label "Verwijder enkele member uit collectie";
	elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcat: 	  		    <http://www.w3.org/ns/dcat#>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
    prefix skos-lex-status: <http://bp4mc2.org/skos-lex/status/>
    
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
 
    INSERT {
      GRAPH ?transactie {
        ?transactie rdf:type sd:Graph, prov:Entity;
          skos:changeNote "Verwijderen van een concept uit een collectie";
          prov:generatedAtTime ?now;
          prov:wasAttributedTo user:TomcatUser
        .
        <@COLLECTIE@>  ?p ?o;
          skos:member ?concept;
          foaf:isPrimaryTopicOf ?doc
        .

        ?doc rdf:type prov:Entity;
          adms:status adms-status:UnderDevelopment;
          prov:wasRevisionOf ?currentDoc
        .

        ?udDoc ?docP ?docO;
          adms:status adms-status:Withdrawn
        .
      }
    }
    WHERE {
      GRAPH ?graph {
        <@COLLECTIE@> ?p ?o;
          skos:member ?concept;
          rdf:type ?type;
          foaf:primaryTopicOf ?currentDoc
        .
        FILTER( ?p != skos:member )
        FILTER( ?concept != <@CONCEPT@>)
        
        ?graph prov:generatedAtTime ?graphTime.
        FILTER NOT EXISTS {
          GRAPH ?newerGraph {
            ?newerGraph prov:generatedAtTime ?newerTime.
            <@COLLECTIE@> rdf:type skos:Collection.
            FILTER( ?newerTime > ?graphTime )
          }
        }
      }
      FILTER regex( ?graph, "http://catalogus.test.kadaster.nl/id/transactie/" )
      OPTIONAL {
        GRAPH ?udGraph {
          <@COLLECTIE@>  foaf:isPrimaryTopicOf ?udDoc.
          ?udDoc ?docP ?docO;
            adms:status adms-status:UnderDevelopment
          .
          FILTER( ?docP != adms:status )    
          ?udGraph prov:generatedAtTime ?udGraphTime.         
          FILTER NOT EXISTS {
            GRAPH ?newerDocGraph {
              ?udDoc rdf:type prov:Entity.
              ?newerDocGraph prov:generatedAtTime ?newerDocGraphTime.
              FILTER( ?newerDocGraphTime > ?udGraphTime )            
            }
          }
        } 
        FILTER regex( ?udGraph, "http://catalogus.test.kadaster.nl/id/transactie/" )
      }
      
      BIND( iri( concat( "http://catalogus.test.kadaster.nl/id/transactie/", replace( now(), " ", "T" ) ) ) AS ?transactie )
      BIND( lcase( replace( replace( str( ?type ), ".+/", "" ), ".+#", "" ) ) AS ?typename )
      BIND( IF( BOUND( ?title ), replace( ?title, " ", "" ), ?prefLabel ) AS ?label )
      BIND( iri ( concat(  "http://catalogus.test.kadaster.nl/id/entity/", replace( now(), " ", "T" ), "-", ?typename, "-", ?label ) ) AS ?doc )
      BIND( now() AS ?now )
    }
    
	'''
.

 

# Delete waarden van waardelijst
updatestage:deletewaardenvaluelist a elmo:Production;
  elmo:contains stage:DSOv2Beheermenu;
	elmo:contains stage:DSOv2Header;
	elmo:contains stage:DSOv2Footer;
	elmo:queryForm stage:DeleteWaardenForm;
  elmo:contains stage:DeleteWaardenClassificerendScene;
  elmo:contains stage:WaardelijstenList;
  elmo:contains stage:ValuelistMemberList;
.


stage:DeleteWaardenForm a elmo:Form;
	rdfs:label "Verwijder waarden uit waardelijst";
  elmo:index "2";
  elmo:fragment [
      elmo:applies-to "waardelijst";
      rdfs:label "Selecteer de waardelijst"@nl;
      elmo:valuesFrom stage:WaardelijstenList;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "3";
  ];
  elmo:fragment [
      elmo:applies-to "member";
      rdfs:label "Selecteer member"@nl;
      elmo:valuesFrom stage:ValuelistMemberList;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "4";
  ];
  elmo:fragment [
      elmo:appearance elmo:SubmitAppearance;
      rdfs:label "Ga verder"@nl;
      elmo:index "4";
  ]
.
  

#-------------------------- deleten van specifieke waarden uit waardelijst

stage:ValuelistMemberList a elmo:Part;
 elmo:appearance elmo:HiddenAppearance;
  elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix org:             <http://www.w3.org/TR/vocab-org#>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix bp4mc2:          <http://bp4mc2.org/elmo/def/>
    prefix def:             <http://catalogus.test.kadaster.nl/def/>  
    prefix sh: 		          <http://www.w3.org/ns/shacl#>
    prefix shxl:            <http://bp4mc2.org/def/sh-xl#>
    
    
		CONSTRUCT {
			?member rdfs:label ?label
		}
    # Classificerend: aangenomen dat de uris wel staan zoals ze moeten staan moet ik een andere collectie hier ophalen die heet wel hetzelfde maar heeft een andere uri. gewoon het laatste stukje pakken en binden aan een andere uri?
		WHERE {
      {
        GRAPH def:Waardelijsten {
          <@WAARDELIJST@> rdf:type sh:NodeShape;
            sh:property [
              sh:path [ sh:inversePath skos:member ];
              sh:hasValue ?collection
            ]
          .
        }
        GRAPH ?graphClassificerend {
          ?collection rdf:type skos:Collection;
            skos:member ?member.
          ?member rdfs:label ?label.
          ?graphClassificerend prov:generatedAtTime ?graphCollectionTime.
          
          FILTER NOT EXISTS {
            GRAPH ?newerGraph {
              ?newerGraph prov:generatedAtTime ?newerTime.
              ?collection rdf:type skos:Collection.
            FILTER( ?newerTime > ?graphCollectionTime )
            }
          }
        }
        
        FILTER regex( ?graphClassificerend, "http://catalogus.test.kadaster.nl/id/transactie/" )
      }
      # Categoriserend
      UNION {
        GRAPH def:Waardelijsten {
          <@WAARDELIJST@> rdf:type sh:NodeShape;
            sh:property [
              sh:path skos:inScheme;
              sh:hasValue ?scheme
            ]
          .
        }
        GRAPH ?graphCategoriserend {
          ?member rdf:type skos:Concept;
            skos:inscheme ?scheme;
            rdfs:label ?label.
          ?graphCategoriserend prov:generatedAtTime ?graphCategoriserendTime.
        FILTER NOT EXISTS {
          GRAPH ?newerGraph {
            ?newerGraph prov:generatedAtTime ?newerTime.
            ?member rdf:type skos:Concept;
              skos:inscheme ?scheme.
            FILTER( ?newerTime > ?graphCategoriserendTime )
          }
        }
        }
       
        FILTER regex( ?graphCategoriserend, "http://catalogus.test.kadaster.nl/id/transactie/" )
      }
      
     ## Refererend
      UNION {
        GRAPH def:Waardelijsten {
          <@WAARDELIJST@> rdf:type sh:NodeShape;
            sh:property [
              sh:path rdf:type;
              sh:hasValue ?class
            ]
          .
        } 
        GRAPH ?graphRefererend {
          ?member rdf:type ?class;
            rdfs:label ?label.
          ?graphRefererend prov:generatedAtTime ?graphRefererendTime.
          FILTER NOT EXISTS {
          GRAPH ?newerGraph {
            ?newerGraph prov:generatedAtTime ?newerTime.
            ?member rdf:type ?class.
            FILTER( ?newerTime > ?graphRefererendTime )
          }
        }
        }
        
        FILTER regex( ?graphRefererend, "http://catalogus.test.kadaster.nl/id/transactie/" )
      }
    }
    
 '''
.  

#-----------------------------------------------------------------------------------------  
stage:DeleteWaardenClassificerendScene a elmo:Scene;
  rdfs:label "Verwijderen onderdeel van Classificerende waardelijst";
  elmo:index "01"; 
  elmo:query '''
  
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix org:             <http://www.w3.org/TR/vocab-org#>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix bp4mc2:          <http://bp4mc2.org/elmo/def/>
    prefix def:             <http://catalogus.test.kadaster.nl/def/>  
    prefix sh: 		          <http://www.w3.org/ns/shacl#>
    prefix shxl:            <http://bp4mc2.org/def/sh-xl#>
    
      INSERT {
        GRAPH ?transactie {
          ?transactie rdf:type sd:Graph, prov:Entity;
            skos:changeNote "Aanpassen van een waardelijst in de Catalogus";
            prov:generatedAtTime ?now;
            prov:wasAttributedTo user:TomcatUser
          .
          ?collection rdf:type skos:Collection;
            skos:member ?concept;
            foaf:isPrimaryTopicOf ?doc
          .

          ?doc rdf:type prov:Entity;
            adms:status adms-status:UnderDevelopment;
            prov:wasRevisionOf ?currentDoc
          .

          ?udDoc ?docP ?docO;
            adms:status adms-status:Withdrawn
          .
        }
      }
      WHERE {
        GRAPH ?graph {
              ?collection ?p ?o;
                skos:member ?concept.
            }
        GRAPH def:Waardelijsten {
          <@WAARDELIJST@> rdf:type sh:NodeShape;
             rdfs:label ?name;
              sh:property [
                sh:path [ sh:inversePath skos:member ];
                sh:hasValue ?collection
              ]
            .
          FILTER( ?s != <@CONCEPT@>)
          FILTER( ?p != skos:member)
          ?graph prov:generatedAtTime ?graphTime.

          FILTER NOT EXISTS {
            GRAPH ?newerGraph {
              ?newerGraph prov:generatedAtTime ?newerTime.
              ?collection rdf:type skos:Collection.
              FILTER( ?newerTime > ?graphTime )
            }
          }
        }
        FILTER regex( ?graph, "http://catalogus.test.kadaster.nl/id/transactie/" )
        OPTIONAL {
          GRAPH ?udGraph {
            ?collection  foaf:isPrimaryTopicOf ?udDoc.
            ?udDoc ?docP ?docO;
              adms:status adms-status:UnderDevelopment
            .
            FILTER( ?docP != adms:status )    
            ?udGraph prov:generatedAtTime ?udGraphTime.         
            FILTER NOT EXISTS {
              GRAPH ?newerDocGraph {
                ?udDoc rdf:type prov:Entity.
                ?newerDocGraph prov:generatedAtTime ?newerDocGraphTime.
                FILTER ( ?newerDocGraphTime > ?udGraphTime )            
              }
            }
          } 
          FILTER regex( ?udGraph, "http://catalogus.test.kadaster.nl/id/transactie/" )
        }
        
        BIND( iri( concat( "http://catalogus.test.kadaster.nl/id/transactie/", replace( now(), " ", "T" ) ) ) AS ?transactie )
        BIND( lcase( replace( replace( str( ?type ), ".+/", "" ), ".+#", "" ) ) AS ?typename )
        BIND( IF( BOUND( ?title ), replace( ?title, " ", "" ), ?prefLabel ) AS ?label )
        BIND( iri ( concat(  "http://catalogus.test.kadaster.nl/id/entity/", replace( now(), " ", "T" ), "-", ?typename, "-", ?label ) ) AS ?doc )
        BIND( now() AS ?now )
      } 
      
  '''
.


stage:DeleteWaardenRefererendScene a elmo:Scene;
rdfs:label "Verwijder waarden uit refererende waardelijst";
elmo:index "4";
elmo:query '''
  
    
            
  '''
.
#-----------------------------------------------------------------------------------------  
stage:DeleteWaardenCategoriserendScene a elmo:Scene;
  rdfs:label "Verwijder waarden uit refererende waardelijst";
  elmo:index "4";
  elmo:query '''
    
    
            
  '''
.
 
#
#
#
# LIFECYCLE CONCEPTEN
#
#
#

#
# PRODUCTIONS
#

updatestage:resource-geldigmaken a elmo:Production;
  elmo:contains stage:DSOv2Beheermenu;
	elmo:contains stage:search-nietgeldige-resources;
	elmo:queryForm stage:ResourceGeldigMakenForm;
	elmo:contains stage:ResourceGeldigMakenScene
.

updatestage:resource-ongeldigmaken a elmo:Production;
  elmo:contains stage:DSOv2Beheermenu;
	elmo:contains stage:search-geldige-resource;
	elmo:queryForm stage:ResourceOngeldigMakenForm;
	elmo:contains stage:ResourceOngeldigMakenScene
.

updatestage:dataset-geldigmaken a elmo:Production;
  elmo:contains stage:DSOv2Beheermenu;
	elmo:contains stage:DSOv2Header;
	elmo:contains stage:DSOv2Footer;
	elmo:queryForm stage:DatasetGeldigMakenForm;
  elmo:contains stage:DatasetGeldigMakenScene
.

#
# FORMS
#

stage:ResourceGeldigMakenForm a elmo:Form;
	rdfs:label "Selecteer resource";
	elmo:index "1";
	elmo:fragment [
		elmo:applies-to "doc";
		rdfs:label "Selecteer resource"@nl;
		elmo:valuesFrom stage:search-nietgeldige-resources;
		elmo:constraint elmo:MandatoryConstraint;
		elmo:index "1";
	];
	elmo:fragment [
		elmo:applies-to "geldigheid";
		elmo:valueDatatype xsd:Date;
		rdfs:label "Geldigheid:"@nl;
		elmo:constraint elmo:MandatoryConstraint;
		rdf:value elmo:Now;
		elmo:index "3";
	];
	elmo:fragment [
		elmo:appearance elmo:SubmitAppearance;
		rdfs:label "Ga verder"@nl;
		elmo:index "4";
	];
.

stage:DatasetGeldigMakenForm a elmo:Form;
	rdfs:label "Geldig maken gehele dataset";
  elmo:index "2";
  elmo:fragment [
      elmo:applies-to "dataset";
      rdfs:label "Selecteer de dataset"@nl;
      elmo:valuesFrom stage:DatasetNonCompletedList;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "2";
  ];
  elmo:fragment [
		elmo:applies-to "geldigheid";
		elmo:valueDatatype xsd:Date;
		rdfs:label "Geldigheid:"@nl;
		elmo:constraint elmo:MandatoryConstraint;
		rdf:value elmo:Now;
		elmo:index "3";
	];
  elmo:fragment [
      elmo:appearance elmo:SubmitAppearance;
      rdfs:label "Ga verder"@nl;
      elmo:index "4";
  ]
.

stage:ResourceOngeldigMakenForm a elmo:Form;
	rdfs:label "Selecteer resource";
	elmo:index "1";
	elmo:fragment [
		elmo:applies-to "doc";
		rdfs:label "Selecteer resource"@nl;
		elmo:valuesFrom stage:search-geldige-resource;
		elmo:constraint elmo:MandatoryConstraint;
		elmo:index "1";
	];
	elmo:fragment [
		elmo:applies-to "geldigheid";
		elmo:valueDatatype xsd:Date;
		rdfs:label "Geldigheid:"@nl;
		elmo:constraint elmo:MandatoryConstraint;
		rdf:value elmo:Now;
		elmo:index "2";
	];
	elmo:fragment [
		elmo:appearance elmo:SubmitAppearance;
		rdfs:label "Ga verder"@nl;
		elmo:index "3";
	];
.

#
# PARTS
#

stage:search-nietgeldige-resources a elmo:Part;
	elmo:appearance elmo:HiddenAppearance;
	elmo:query '''
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
		prefix adms: <http://www.w3.org/ns/adms#>
		prefix sd: <http://www.w3.org/ns/sparql-service-description>
    prefix adms-status: <http://purl.org/adms/status/>
    prefix slex-status: <http://bp4mc2.org/skos-lex/status/>
    prefix wdrs: <http://www.w3.org/2007/05/powder-s#>
    
		CONSTRUCT {
			?doc rdfs:label ?label
		}
		WHERE {
      GRAPH ?g {
        ?resource foaf:isPrimaryTopicOf ?doc.
      }
      FILTER regex( ?g, "http://catalogus.test.kadaster.nl/id/transactie/" )
      GRAPH ?docGraph {
        ?doc rdf:type prov:Entity;
          adms:status ?status
        .
        
        FILTER(
          ?status != adms-status:Completed
          && ?status != adms-status:Deprecated
          && ?status != adms-status:Withdrawn
        )
        
        ?docGraph prov:generatedAtTime ?docGraphTime.       
        FILTER NOT EXISTS {
          GRAPH ?newerDocGraph {
            ?doc rdf:type prov:Entity.
            ?newerDocGraph prov:generatedAtTime ?newerDocGraphTime.
            FILTER ( ?newerDocGraphTime > ?docGraphTime )            
          }
        }
      }
      BIND( concat( str( ?resource ), " (", ?status, ")" ) AS ?label )
		}
	''';
.

stage:search-geldige-resource a elmo:Part;
	elmo:appearance elmo:HiddenAppearance;
	elmo:query '''
		prefix adms:            <http://www.w3.org/ns/adms#>
		prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix prov:            <http://www.w3.org/ns/prov#>
		prefix sd:              <http://www.w3.org/ns/sparql-service-description>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
		prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
		prefix slex-status:     <http://bp4mc2.org/skos-lex/status/>
    prefix wdrs:            <http://www.w3.org/2007/05/powder-s#>
    
		CONSTRUCT {
			?doc rdfs:label ?label
		}
		WHERE {
      GRAPH ?g {
        ?resource rdfs:label ?label;
          foaf:isPrimaryTopicOf ?doc
        .
      }
      FILTER regex( ?g, "http://catalogus.test.kadaster.nl/id/transactie/" )
      GRAPH ?docGraph {
        ?doc rdf:type prov:Entity;
          adms:status adms-status:Completed
        .
        ?doc dcterms:temporal ?temporal.
          ?temporal dcmiperiod:start ?start
        .
        OPTIONAL {
          ?temporal dcmiperiod:end ?end.
        }
        FILTER(
          strdt( ?start, xsd:dateTime ) <= now()
          && (
            !BOUND( ?end ) ||
            strdt( ?end, xsd:dateTime ) > now()
          )
        )
        
        ?docGraph prov:generatedAtTime ?docGraphTime.       
        FILTER NOT EXISTS {
          GRAPH ?newerDocGraph {
            ?doc rdf:type prov:Entity.
            ?newerDocGraph prov:generatedAtTime ?newerDocGraphTime.
            FILTER ( ?newerDocGraphTime > ?docGraphTime )            
          }
        }
      }
		}
	''';
.

stage:DatasetNonCompletedList a elmo:Part;
  elmo:appearance elmo:HiddenAppearance;
  elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcat: 		        <http://www.w3.org/ns/dcat#>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix def:             <http://catalogus.test.kadaster.nl/def/>
    prefix foaf: 	          <http://xmlns.com/foaf/0.1/>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix rdfs: 		        <http://www.w3.org/2000/01/rdf-schema#>
    prefix sh: 		          <http://www.w3.org/ns/shacl#>
        
    CONSTRUCT {
      ?dataset rdfs:label ?dataset_label
    }
    WHERE {
      GRAPH ?datasetGraph {
        ?dataset rdf:type dcat:Dataset;
          rdfs:label ?dataset_label;
          foaf:isPrimaryTopicOf ?docDataset
        .
        
        ?datasetGraph prov:generatedAtTime ?datasetTime.
        FILTER NOT EXISTS {
          GRAPH ?newerDatasetGraph {
            ?newerDatasetGraph prov:generatedAtTime ?newerDatasetTime.
            ?docDataset rdf:type dcat:Dataset.
            FILTER( ?newerDatasetTime > ?datasetTime )
          }
        }
      }
      GRAPH ?docDatasetGraph {
        ?docDataset adms:status adms-status:Completed.
        FILTER NOT EXISTS {
          ?docDataset dcterms:temporal/dcmiperiod:end ?end.
          FILTER( strdt( ?end, xsd:dateTime ) < now() )
        }
        
        ?docDatasetGraph prov:generatedAtTime ?docDatasetTime.
        FILTER NOT EXISTS {
          GRAPH ?newerDocDatasetGraph {
            ?newerDocDatasetGraph prov:generatedAtTime ?newerDocDatasetTime.
            ?docDataset rdf:type prov:Entity.
            FILTER( ?newerDocDatasetTime > ?docDatasetTime )
          }
        }
      }
      FILTER NOT EXISTS {
        GRAPH def:Waardelijsten {
          ?wl sh:property [ sh:hasValue ?dataset ].
        }
      }
    }
  ''';
.

#
# SCENES
#

stage:ResourceGeldigMakenScene a elmo:Scene;
	elmo:index "3";
	rdfs:label "Laat gekozen versie van resource in werking treden";
	elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
		prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcterms:         <http://purl.org/dc/terms/>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix prov:            <http://www.w3.org/ns/prov#>
		prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix slex-status:     <http://bp4mc2.org/skos-lex/status/>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
		prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
		
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
    
    INSERT {
      GRAPH ?transactie {      
        ?transactie rdf:type sd:Graph, prov:Entity;
          skos:changeNote "In werkingtreding van het begrip";
          prov:generatedAtTime ?now;
          prov:wasAttributedTo user:TomcatUser
        .

        <@DOC@> ?p ?o;
          adms:status adms-status:Completed;
          dcterms:temporal ?temporal
        .
        
        ?temporal dcmiperiod:start "@GELDIGHEID@".
        
        ?prevDoc ?prevP ?prevO;
          dcterms:temporal ?prevTemporal
        .
          
        ?prevTemporal dcmiperiod:start ?prevStart;
          dcmiperiod:end "@GELDIGHEID@"
        .
      }
    }
    WHERE {
      GRAPH ?docGraph {
        <@DOC@> rdf:type prov:Entity;
          adms:status ?status;
          ?p ?o
        .
        FILTER(
          ?p != adms:status
          && ?p != dcterms:issued
        )
        OPTIONAL {
          <@DOC@> dcterms:issued ?currentIssued.
        }
        
        ?docGraph prov:generatedAtTime ?docTime.
          FILTER NOT EXISTS {
            GRAPH ?newerDocGraph {
              ?newerDocGraph prov:generatedAtTime ?newerDocTime.
              <@DOC@> rdf:type prov:Entity.
              FILTER( ?newerDocTime > ?docTime )
            }
          }
      }
      
      GRAPH ?currentTransaction {
        ?resource foaf:isPrimaryTopicOf <@DOC@>.
      }
      OPTIONAL {
        GRAPH ?previousTransaction {
          ?resource foaf:isPrimaryTopicOf ?prevDoc.
        }
        GRAPH ?prevDocGraph {
          ?prevDoc ?prevP ?prevO;
            dcterms:temporal ?prevTemporal
          .
          ?prevTemporal dcmiperiod:start ?prevStart.
          FILTER NOT EXISTS {
            ?prevTemporal dcmiperiod:end ?end.
          }
          FILTER( ?prevP != dcterms:temporal )
          
          ?prevDocGraph prov:generatedAtTime ?prevDocTime.
          FILTER NOT EXISTS {
            GRAPH ?newerPrevDocGraph {
              ?newerPrevDocGraph prov:generatedAtTime ?newerPrevDocTime.
              ?prevDoc rdf:type prov:Entity.
              FILTER( ?newerPrevDocTime > ?prevDocTime )
            }
          }
        }
      }
      
      BIND( iri( concat( "http://catalogus.test.kadaster.nl/id/transactie/", replace( now(), " ", "T" ) ) ) AS ?transactie )
      BIND( iri( replace( "@DOC@", "entity", "temporal" ) ) AS ?temporal )
      BIND( now() AS ?now )
    }
	'''
.

stage:ResourceOngeldigMakenScene a elmo:Scene;
	elmo:index "3";
	rdfs:label "Einddatum geldigheid toevoegen aan resource";
	elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
		prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcterms:         <http://purl.org/dc/terms/>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix prov:            <http://www.w3.org/ns/prov#>
		prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix slex-status:     <http://bp4mc2.org/skos-lex/status/>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
		prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
		
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
    
    INSERT {
      GRAPH ?transactie {      
        ?transactie rdf:type sd:Graph, prov:Entity;
          skos:changeNote "Einddatum geldigheid toevoegen aan resource";
          prov:generatedAtTime ?now;
          prov:wasAttributedTo user:TomcatUser
        .

        <@DOC@> ?p ?o;
          adms:status adms-status:Completed;
          dcterms:temporal ?temporal
        .
        
        ?temporal ?temporalP ?temporalO;
          dcmiperiod:end "@GELDIGHEID@"
        .
      }
    }
    WHERE {
      GRAPH ?docGraph {
        <@DOC@> rdf:type prov:Entity;
          dcterms:temporal ?temporal;
          ?p ?o
        .
        ?temporal ?temporalP ?temporalO.
        FILTER( ?p != dcterms:temporal )
        
        ?docGraph prov:generatedAtTime ?docTime.
          FILTER NOT EXISTS {
            GRAPH ?newerDocGraph {
              ?newerDocGraph prov:generatedAtTime ?newerDocTime.
              <@DOC@> rdf:type prov:Entity.
              FILTER( ?newerDocTime > ?docTime )
            }
          }
      }
      
      BIND( iri( concat( "http://catalogus.test.kadaster.nl/id/transactie/", replace( now(), " ", "T" ) ) ) AS ?transactie )
      BIND( now() AS ?now )
    }
	'''
.

stage:DatasetGeldigMakenScene a elmo:Scene;
  rdfs:label "Geldig maken alle resources in dataset";
  elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix sh: 		          <http://www.w3.org/ns/shacl#>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
    prefix skos-lex-status: <http://bp4mc2.org/skos-lex/status/>
    
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix def:             <http://catalogus.test.kadaster.nl/def/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
    
    INSERT {
      GRAPH ?transactie {      
        ?transactie rdf:type sd:Graph, prov:Entity;
          skos:changeNote "In werkingtreding van de gehele dataset";
          prov:generatedAtTime ?now;
          prov:wasAttributedTo user:TomcatUser
        .

        ?temporal dcmiperiod:start "@GELDIGHEID@".
        
        ?resourceDoc ?resourceP ?resourceO;
          adms:status adms-status:Completed;
          dcterms:temporal ?temporal
        .
        
        ?prevResourceDoc ?prevResourceP ?prevResourceO;
          dcterms:temporal ?prevResourceTemporal
        .
          
        ?prevResourceTemporal dcmiperiod:start ?prevResourceStart;
          dcmiperiod:end "@GELDIGHEID@"
        .
      }
    }
    WHERE {
      GRAPH ?resourceGraph {
        ?resource rdf:type ?resourceType;
          foaf:isPrimaryTopicOf ?resourceDoc;
          skos:inScheme <@DATASET@>
        .
        
        ?resourceGraph prov:generatedAtTime ?resourceGraphTime.
        FILTER NOT EXISTS {
          GRAPH ?newerResourceGraph {
            ?resource rdf:type ?resourceType.
            ?newerResourceGraph prov:generatedAtTime ?newerResourceGraphTime.
            FILTER( ?newerResourceGraphTime > ?resourceGraphTime )
          }
        }
      }
      GRAPH ?resourceDocGraph {
        ?resourceDoc ?resourceP ?resourceO;
          adms:status ?resourceStatus
        .
        FILTER( ?resourceP != adms:status )
        FILTER( 
          ?resourceStatus != adms-status:Deprecated
          && ?resourceStatus != adms-status:Withdrawn
          && ?resourceStatus != adms-status:Completed
        )
        ?resourceDocGraph prov:generatedAtTime ?resourceDocTime.
        FILTER NOT EXISTS {
          GRAPH ?newerResourceDocGraph {
            ?resourceDoc rdf:type prov:Entity.
            ?newerResourceDocGraph prov:generatedAtTime ?newerResourceDocTime.
            FILTER( ?newerResourceDocTime > ?resourceDocTime )
          }
        }
      }
      
      OPTIONAL {
        GRAPH ?previousResourceGraph {
          ?resource foaf:isPrimaryTopicOf ?prevResourceDoc.
        }
        GRAPH ?prevResourceDocGraph {
          ?prevResourceDoc ?prevResourceP ?prevResourceO;
            dcterms:temporal ?prevResourceTemporal
          .
          ?prevResourceTemporal dcmiperiod:start ?prevResourceStart.
          FILTER NOT EXISTS {
            ?prevResourceTemporal dcmiperiod:end ?prevResourceEnd.
          }
          FILTER( ?prevResourceP != dcterms:temporal )
          
          ?prevResourceDocGraph prov:generatedAtTime ?prevResourceDocTime.
          FILTER NOT EXISTS {
            GRAPH ?newerPrevResourceDocGraph {
              ?newerPrevResourceDocGraph prov:generatedAtTime ?newerPrevResourceDocTime.
              ?prevResourceDoc rdf:type prov:Entity.
              FILTER( ?newerPrevResourceDocTime > ?prevResourceDocTime )
            }
          }
        }
      }
      
      BIND( iri( concat( "http://catalogus.test.kadaster.nl/id/transactie/", replace( now(), " ", "T" ) ) ) AS ?transactie )
      BIND( iri( replace( str( ?resourceDoc ), "entity", "temporal" ) ) AS ?temporal )
      BIND( now() AS ?now )
    }  
  '''
. 

#
#
#
# BEHEER WAARDELIJSTEN
#
#
#

#
# PRODUCTIONS
#

# Geldig maken van waardelijst
updatestage:waardelijst-geldigmaken a elmo:Production;
  elmo:contains stage:DSOv2Beheermenu;
	elmo:contains stage:DSOv2Header;
	elmo:contains stage:DSOv2Footer;
	elmo:queryForm stage:WaardelijstGeldigMakenForm;
  elmo:contains stage:ClassificerendeWaardelijstCollectionGeldigMakenScene;
  elmo:contains stage:ClassificerendeWaardelijstConceptsGeldigMakenScene;
  elmo:contains stage:CategoriserendeWaardelijstGeldigMakenScene;
  elmo:contains stage:RefererendeWaardelijstGeldigMakenScene
.

stage:WaardelijstGeldigMakenForm a elmo:Form;
	rdfs:label "Geldig maken waardelijst";
  elmo:index "2";
  elmo:fragment [
      elmo:applies-to "waardelijst";
      rdfs:label "Selecteer de waardelijst"@nl;
      elmo:valuesFrom stage:WaardelijstenNonCompletedList;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "2";
  ];
  elmo:fragment [
		elmo:applies-to "geldigheid";
		elmo:valueDatatype xsd:Date;
		rdfs:label "Geldigheid:"@nl;
		elmo:constraint elmo:MandatoryConstraint;
		rdf:value elmo:Now;
		elmo:index "3";
	];
  elmo:fragment [
      elmo:appearance elmo:SubmitAppearance;
      rdfs:label "Ga verder"@nl;
      elmo:index "4";
  ]
.

# Voor nu kan je alle waardelijsten selecteren
# TODO: enkel waardelijsten selecteren die een UnderDevelopment-status hebben
stage:WaardelijstenNonCompletedList a elmo:Part;
  elmo:appearance elmo:HiddenAppearance;
  elmo:query '''
    prefix def:     <http://catalogus.test.kadaster.nl/def/>
    prefix rdfs: 		<http://www.w3.org/2000/01/rdf-schema#>
    prefix sh: 		  <http://www.w3.org/ns/shacl#>
        
    CONSTRUCT {
      ?waardelijst rdfs:label ?waardelijst_label
    }
    WHERE {
      GRAPH def:Waardelijsten {
        ?waardelijst rdf:type sh:NodeShape;
          rdfs:label ?waardelijst_label
        .
      }
    }
  ''';
.

#
# SCENES
#

stage:ClassificerendeWaardelijstCollectionGeldigMakenScene a elmo:Scene;
  rdfs:label "Classificerende waardelijst - updaten Collection";
  elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix sh: 		          <http://www.w3.org/ns/shacl#>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
    prefix skos-lex-status: <http://bp4mc2.org/skos-lex/status/>
    
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix def:             <http://catalogus.test.kadaster.nl/def/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
    
    INSERT {
      GRAPH ?transactie {      
        ?transactie rdf:type sd:Graph, prov:Entity;
          skos:changeNote "In werkingtreding van de waardelijst";
          prov:generatedAtTime ?now;
          prov:wasAttributedTo user:TomcatUser
        .

        ?temporal dcmiperiod:start "@GELDIGHEID@".
        
        ?collectionDoc ?collectionP ?collectionO;
          adms:status adms-status:Completed;
          dcterms:temporal ?temporal
        .
        
        ?prevCollectionDoc ?prevCollectionP ?prevCollectionO;
          dcterms:temporal ?prevCollectionTemporal
        .
          
        ?prevCollectionTemporal dcmiperiod:start ?prevCollectionStart;
          dcmiperiod:end "@GELDIGHEID@"
        .
      }
    }
    WHERE {
      GRAPH def:Waardelijsten {
        <@WAARDELIJST@> sh:property [ sh:hasValue ?collection ].
      }
      GRAPH ?collectionGraph {
        ?collection foaf:isPrimaryTopicOf ?collectionDoc.
        
        ?collectionGraph prov:generatedAtTime ?collectionGraphTime.
        FILTER NOT EXISTS {
          GRAPH ?newerCollectionGraph {
            ?collection rdf:type skos:Collection.
            ?newerCollectionGraph prov:generatedAtTime ?newerCollectionGraphTime.
            FILTER( ?newerCollectionGraphTime > ?collectionGraphTime )
          }
        }
      }
      GRAPH ?collectionDocGraph {
        ?collectionDoc ?collectionP ?collectionO;
          adms:status ?collectionStatus
        .
        FILTER(
          ?collectionP != adms:status
          && ?collectionP != prov:wasGeneratedBy
        )
        FILTER( 
          ?collectionStatus != adms-status:Deprecated
          && ?collectionStatus != adms-status:Withdrawn
          && ?collectionStatus != adms-status:Completed
        )
        
        ?collectionDocGraph prov:generatedAtTime ?collectionDocTime.
        FILTER NOT EXISTS {
          GRAPH ?newerCollectionDocGraph {
            ?collectionDoc rdf:type prov:Entity.
            ?newerCollectionDocGraph prov:generatedAtTime ?newerCollectionDocTime.
            FILTER( ?newerCollectionDocTime > ?collectionDocTime )
          }
        }
      }
      
      OPTIONAL {
        GRAPH ?previousCollectionGraph {
          ?collection foaf:isPrimaryTopicOf ?prevCollectionDoc.
        }
        GRAPH ?prevCollectionDocGraph {
          ?prevCollectionDoc ?prevCollectionP ?prevCollectionO;
            dcterms:temporal ?prevCollectionTemporal
          .
          ?prevCollectionTemporal dcmiperiod:start ?prevCollectionStart.
          FILTER NOT EXISTS {
            ?prevCollectionTemporal dcmiperiod:end ?prevCollectionEnd.
          }
          FILTER( ?prevCollectionP != dcterms:temporal )
          
          ?prevCollectionDocGraph prov:generatedAtTime ?prevCollectionDocTime.
          FILTER NOT EXISTS {
            GRAPH ?newerPrevCollectionDocGraph {
              ?newerPrevCollectionDocGraph prov:generatedAtTime ?newerPrevCollectionDocTime.
              ?prevCollectionDoc rdf:type prov:Entity.
              FILTER( ?newerPrevCollectionDocTime > ?prevCollectionDocTime )
            }
          }
        }
      }
      
      BIND( iri( concat( "http://catalogus.test.kadaster.nl/id/transactie/", replace( now(), " ", "T" ) ) ) AS ?transactie )
      BIND( iri( replace( str( ?collectionDoc ), "entity", "temporal" ) ) AS ?temporal )
      BIND( now() AS ?now )
    }
  '''
.

stage:ClassificerendeWaardelijstConceptsGeldigMakenScene a elmo:Scene;
  rdfs:label "Classificerende waardelijst - updaten Concepts";
  elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix sh: 		          <http://www.w3.org/ns/shacl#>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
    prefix skos-lex-status: <http://bp4mc2.org/skos-lex/status/>
    
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix def:             <http://catalogus.test.kadaster.nl/def/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
    
    INSERT {
      GRAPH ?transactie {      
        ?transactie rdf:type sd:Graph, prov:Entity;
          skos:changeNote "In werkingtreding van de waardelijst";
          prov:generatedAtTime ?now;
          prov:wasAttributedTo user:TomcatUser
        .

        ?temporal dcmiperiod:start "@GELDIGHEID@".
        
        ?conceptDoc ?conceptP ?conceptO;
          adms:status adms-status:Completed;
          dcterms:temporal ?temporal
        .
        
        ?prevConceptDoc ?prevConceptP ?prevConceptO;
          dcterms:temporal ?prevConceptTemporal
        .
          
        ?prevConceptTemporal dcmiperiod:start ?prevConceptStart;
          dcmiperiod:end "@GELDIGHEID@"
        .
      }
    }
    WHERE {
      GRAPH def:Waardelijsten {
        <@WAARDELIJST@> sh:property [ sh:hasValue ?collection ].
      }
      GRAPH ?collectionGraph {
        ?collection skos:member ?concept.
        
        ?collectionGraph prov:generatedAtTime ?collectionGraphTime.
        FILTER NOT EXISTS {
          GRAPH ?newerCollectionGraph {
            ?collection rdf:type skos:Collection.
            ?newerCollectionGraph prov:generatedAtTime ?newerCollectionGraphTime.
            FILTER( ?newerCollectionGraphTime > ?collectionGraphTime )
          }
        }
      }
      
      GRAPH ?conceptGraph {
        ?concept foaf:isPrimaryTopicOf ?conceptDoc.
        
        ?conceptGraph prov:generatedAtTime ?conceptGraphTime.
        FILTER NOT EXISTS {
          GRAPH ?newerConceptGraph {
            ?concept rdf:type skos:Concept.
            ?newerConceptGraph prov:generatedAtTime ?newerConceptGraphTime.
            FILTER( ?newerConceptGraphTime > ?conceptGraphTime )
          }
        }
      }
      GRAPH ?conceptDocGraph {
        ?conceptDoc ?conceptP ?conceptO;
          adms:status ?conceptStatus
        .
        FILTER(
          ?conceptP != adms:status
          && ?conceptP != prov:wasGeneratedBy
        )
        FILTER( 
          ?conceptStatus != adms-status:Deprecated
          && ?conceptStatus != adms-status:Withdrawn
          && ?conceptStatus != adms-status:Completed
        )
        ?conceptDocGraph prov:generatedAtTime ?conceptDocTime.
        FILTER NOT EXISTS {
          GRAPH ?newerConceptDocGraph {
            ?conceptDoc rdf:type prov:Entity.
            ?newerConceptDocGraph prov:generatedAtTime ?newerConceptDocTime.
            FILTER( ?newerConceptDocTime > ?conceptDocTime )
          }
        }
      }
      
      OPTIONAL {
        GRAPH ?previousConceptGraph {
          ?concept foaf:isPrimaryTopicOf ?prevConceptDoc.
        }
        GRAPH ?prevConceptDocGraph {
          ?prevConceptDoc ?prevConceptP ?prevConceptO;
            dcterms:temporal ?prevConceptTemporal
          .
          ?prevConceptTemporal dcmiperiod:start ?prevConceptStart.
          FILTER NOT EXISTS {
            ?prevConceptTemporal dcmiperiod:end ?prevConceptEnd.
          }
          FILTER( ?prevConceptP != dcterms:temporal )
          
          ?prevConceptDocGraph prov:generatedAtTime ?prevConceptDocTime.
          FILTER NOT EXISTS {
            GRAPH ?newerPrevConceptDocGraph {
              ?newerPrevConceptDocGraph prov:generatedAtTime ?newerPrevConceptDocTime.
              ?prevConceptDoc rdf:type prov:Entity.
              FILTER( ?newerPrevConceptDocTime > ?prevConceptDocTime )
            }
          }
        }
      }
      
      BIND( iri( concat( "http://catalogus.test.kadaster.nl/id/transactie/", replace( now(), " ", "T" ) ) ) AS ?transactie )
      BIND( iri( replace( str( ?conceptDoc ), "entity", "temporal" ) ) AS ?temporal )
      BIND( now() AS ?now )
    }
  '''
.

stage:CategoriserendeWaardelijstGeldigMakenScene a elmo:Scene;
  rdfs:label "Categoriserende waardelijst";
  elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix sh: 		          <http://www.w3.org/ns/shacl#>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
    prefix skos-lex-status: <http://bp4mc2.org/skos-lex/status/>
    
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix def:             <http://catalogus.test.kadaster.nl/def/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
    
    INSERT {
      GRAPH ?transactie {      
        ?transactie rdf:type sd:Graph, prov:Entity;
          skos:changeNote "In werkingtreding van de waardelijst";
          prov:generatedAtTime ?now;
          prov:wasAttributedTo user:TomcatUser
        .

        ?temporal dcmiperiod:start "@GELDIGHEID@".
        
        ?conceptDoc ?conceptP ?conceptO;
          adms:status adms-status:Completed;
          dcterms:temporal ?temporal
        .
        
        ?prevConceptDoc ?prevConceptP ?prevConceptO;
          dcterms:temporal ?prevConceptTemporal
        .
          
        ?prevConceptTemporal dcmiperiod:start ?prevConceptStart;
          dcmiperiod:end "@GELDIGHEID@"
        .
      }
    }
    WHERE {
      GRAPH def:Waardelijsten {
        <@WAARDELIJST@> sh:property [ 
          sh:path skos:inScheme;
          sh:hasValue ?scheme 
        ].
      }
      
      GRAPH ?conceptGraph {
        ?concept foaf:isPrimaryTopicOf ?conceptDoc;
                 skos:inScheme ?scheme
        .
        
        ?conceptGraph prov:generatedAtTime ?conceptGraphTime.
        FILTER NOT EXISTS {
          GRAPH ?newerConceptGraph {
            ?concept rdf:type skos:Concept.
            ?newerConceptGraph prov:generatedAtTime ?newerConceptGraphTime.
            FILTER( ?newerConceptGraphTime > ?conceptGraphTime )
          }
        }
      }
      GRAPH ?conceptDocGraph {
        ?conceptDoc ?conceptP ?conceptO;
          adms:status ?conceptStatus
        .
        FILTER(
          ?conceptP != adms:status
          && ?conceptP != prov:wasGeneratedBy
        )
        FILTER( 
          ?conceptStatus != adms-status:Deprecated
          && ?conceptStatus != adms-status:Withdrawn
          && ?conceptStatus != adms-status:Completed
        )
        ?conceptDocGraph prov:generatedAtTime ?conceptDocTime.
        FILTER NOT EXISTS {
          GRAPH ?newerConceptDocGraph {
            ?conceptDoc rdf:type prov:Entity.
            ?newerConceptDocGraph prov:generatedAtTime ?newerConceptDocTime.
            FILTER( ?newerConceptDocTime > ?conceptDocTime )
          }
        }
      }
      
      OPTIONAL {
        GRAPH ?previousConceptGraph {
          ?concept foaf:isPrimaryTopicOf ?prevConceptDoc.
        }
        GRAPH ?prevConceptDocGraph {
          ?prevConceptDoc ?prevConceptP ?prevConceptO;
            dcterms:temporal ?prevConceptTemporal
          .
          ?prevConceptTemporal dcmiperiod:start ?prevConceptStart.
          FILTER NOT EXISTS {
            ?prevConceptTemporal dcmiperiod:end ?prevConceptEnd.
          }
          FILTER( ?prevConceptP != dcterms:temporal )
          
          ?prevConceptDocGraph prov:generatedAtTime ?prevConceptDocTime.
          FILTER NOT EXISTS {
            GRAPH ?newerPrevConceptDocGraph {
              ?newerPrevConceptDocGraph prov:generatedAtTime ?newerPrevConceptDocTime.
              ?prevConceptDoc rdf:type prov:Entity.
              FILTER( ?newerPrevConceptDocTime > ?prevConceptDocTime )
            }
          }
        }
      }
      
      BIND( iri( concat( "http://catalogus.test.kadaster.nl/id/transactie/", replace( now(), " ", "T" ) ) ) AS ?transactie )
      BIND( iri( replace( str( ?conceptDoc ), "entity", "temporal" ) ) AS ?temporal )
      BIND( now() AS ?now )
    }  
  '''
.

stage:RefererendeWaardelijstGeldigMakenScene a elmo:Scene;
  rdfs:label "Refererende waardelijst";
  elmo:query '''
  
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix sh: 		          <http://www.w3.org/ns/shacl#>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
    prefix skos-lex-status: <http://bp4mc2.org/skos-lex/status/>
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix def:             <http://catalogus.test.kadaster.nl/def/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
    
    INSERT {
      GRAPH ?transactie {      
        ?transactie rdf:type sd:Graph, prov:Entity;
          skos:changeNote "In werkingtreding van de waardelijst";
          prov:generatedAtTime ?now;
          prov:wasAttributedTo user:TomcatUser
        .

        ?temporal dcmiperiod:start "@GELDIGHEID@".
        
        ?resourceDoc ?resourceP ?resourceO;
          adms:status adms-status:Completed;
          dcterms:temporal ?temporal
        .
        
        ?prevResourceDoc ?prevResourceP ?prevResourceO;
          dcterms:temporal ?prevResourceTemporal
        .
          
        ?prevResourceTemporal dcmiperiod:start ?prevResourceStart;
          dcmiperiod:end "@GELDIGHEID@"
        .
      }
    }
    WHERE {
      GRAPH def:Waardelijsten {
        <@WAARDELIJST@> sh:property [ 
          sh:path rdf:type;
          sh:hasValue ?class
        ].
      }
      GRAPH ?resourceGraph {
        ?resource foaf:isPrimaryTopicOf ?resourceDoc;
                  rdf:type ?class
        .
        
        ?resourceGraph prov:generatedAtTime ?resourceGraphTime.
        FILTER NOT EXISTS {
          GRAPH ?newerResourceGraph {
            ?resource rdf:type ?class.
            ?newerResourceGraph prov:generatedAtTime ?newerResourceGraphTime.
            FILTER( ?newerResourceGraphTime > ?resourceGraphTime )
          }
        }
      }
      GRAPH ?resourceDocGraph {
        ?resourceDoc ?resourceP ?resourceO;
                     adms:status ?resourceStatus
        .
        FILTER(
          ?resourceP != adms:status
          && ?resourceP != prov:wasGeneratedBy
        )
        FILTER( 
          ?resourceStatus != adms-status:Deprecated
          && ?resourceStatus != adms-status:Withdrawn
          && ?resourceStatus != adms-status:Completed
        )
        ?resourceDocGraph prov:generatedAtTime ?resourceDocTime.
        FILTER NOT EXISTS {
          GRAPH ?newerResourceDocGraph {
            ?resourceDoc rdf:type prov:Entity.
            ?newerResourceDocGraph prov:generatedAtTime ?newerResourceDocTime.
            FILTER( ?newerResourceDocTime > ?resourceDocTime )
          }
        }
      }
      OPTIONAL {
        GRAPH ?previousResourceGraph {
          ?resource foaf:isPrimaryTopicOf ?prevResourceDoc.
        }
        GRAPH ?prevResourceDocGraph {
          ?prevResourceDoc ?prevResourceP ?prevResourceO;
                           dcterms:temporal ?prevResourceTemporal
          .
          ?prevResourceTemporal dcmiperiod:start ?prevResourceStart.
          FILTER NOT EXISTS {
            ?prevResourceTemporal dcmiperiod:end ?prevResourceEnd.
          }
          FILTER( ?prevResourceP != dcterms:temporal )
          
          ?prevResourceDocGraph prov:generatedAtTime ?prevResourceDocTime.
          FILTER NOT EXISTS {
            GRAPH ?newerPrevResourceDocGraph {
              ?newerPrevResourceDocGraph prov:generatedAtTime ?newerPrevResourceDocTime.
              ?prevResourceDoc rdf:type prov:Entity.
              FILTER( ?newerPrevResourceDocTime > ?prevResourceDocTime )
            }
          }
        }
      }
      
      BIND( iri( concat( "http://catalogus.test.kadaster.nl/id/transactie/", replace( now(), " ", "T" ) ) ) AS ?transactie )
      BIND( iri( replace( str( ?resourceDoc ), "entity", "temporal" ) ) AS ?temporal )
      BIND( now() AS ?now )
    }
  '''
.
   
#
#
#
# CLEAR ALL DATA
#
#
#

#
# PRODUCTIONS
#

# Speciale pagina om alle gegevens te wissen
# Deze backdoor moet zeer waarschijnlijk verwijderd worden uit de definitieve configuratie!
updatestage:clearalldata a elmo:Production;
	elmo:contains stage:DSOv2Beheermenu;
	elmo:queryForm stage:DSOv2DummyForm;
	elmo:contains stage:ClearTransactions;
  elmo:contains stage:ClearContainers
.

updatestage:clearwaardelijsten a elmo:Production;
  elmo:contains stage:DSOv2Beheermenu;
  elmo:queryForm stage:DSOv2DummyForm;
  elmo:contains stage:ClearWaardelijsten
.

updatestage:clearcollection a elmo:Production;
  elmo:contains stage:DSOv2Beheermenu;
  elmo:queryForm stage:DSOv2DummyForm;
  elmo:contains stage:ClearCollectionAndMembers
.

# DummyForm nodig omdat anders de feedback vanuit de scenes niet getoond wordt
stage:DSOv2DummyForm a elmo:Form.


#
# SCENES
#

# Scene gebruikt voor het verwijderen van alle data
stage:ClearTransactions a elmo:Scene;
	elmo:index "1";
	rdfs:label "Verwijderen transacties";
	elmo:query '''
		prefix container: <http://localhost:8080/catalogus/dsov2/container/>
    
		DELETE {
			GRAPH ?g {
				?s ?p ?o
			}
		}
		WHERE {
			GRAPH ?g {
				?s ?p ?o
			}
			FILTER regex( ?g, "http://catalogus.test.kadaster.nl/id/transactie/" )
		}
  '''
.

stage:ClearContainers a elmo:Scene;
  elmo:index "2";
  rdfs:label "Verwijderen containers";
  elmo:query '''
    DELETE {
			GRAPH ?g {
				?s ?p ?o
			}
		}
		WHERE {
			GRAPH ?g {
				?s ?p ?o
			}
			FILTER regex( ?g, "http://localhost:8080/catalogus/dsov2/" )
		}
	'''
.

stage:ClearWaardelijsten a elmo:Scene;
  elmo:index "2";
  rdfs:label "Verwijderen waardelijsten";
  elmo:query '''
    prefix def:     <http://catalogus.test.kadaster.nl/def/>
    CLEAR GRAPH def:Waardelijsten
	'''
.

# Tijdelijke query tbv testen 
stage:ClearCollectionAndMembers a elmo:Scene;
  elmo:index:"3";
  rdfs:lable "Verwijderen collecties";
  elmo:query '''
    DELETE {
      GRAPH ?g {
        ?collection skos:member ?concept
      }
    }
    WHERE {
      GRAPH ?g{
        ?collection skos:member ?concept
      }
    }

    DELETE {
      GRAPH ?g {
        ?collection rdf:type skos:Collection
      }
    }
    WHERE {
      GRAPH ?g{
        ?collection rdf:type skos:Collection
      }
    }   
  '''
.
    
    
     
#
#
#
# LIFECYCLE CONCEPTEN
#
#
#

#
# PRODUCTIONS
#

# Production om concept te selecteren en vervolgens bekend te maken
updatestage:insert-tomcatuser a elmo:Production;
	elmo:contains stage:DSOv2Beheermenu;
	elmo:contains stage:InsertTomcatUserScene;
.

#
# SCENES
#

stage:InsertTomcatUserScene a elmo:Scene;
	elmo:index "1";
	rdfs:label "Maak begrip bekend";
	elmo:query '''
    prefix prov: <http://www.w3.org/ns/prov#>
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
		prefix adms: <http://www.w3.org/ns/adms#>
		prefix sparql: <http://www.w3.org/ns/sparql-service-description/>
    prefix adms-status: <http://purl.org/adms/status/>
    prefix skos-lex-status: <http://bp4mc2.org/skos-lex/status/>
    prefix wdrs: <http://www.w3.org/2007/05/powder-s#>
    prefix dcterms: <http://purl.org/dc/terms/>
    
    prefix catalogus: <http://omgevingswet.overheid.nl/catalogus/>
    prefix user: <http://omgevingswet.overheid.nl/catalogus/users/>
		
    INSERT {
      GRAPH catalogus:users {
        user:TomcatUser rdf:type prov:Agent;
          rdfs:label "Tomcat User";
          foaf:givenName "Tomcat User";
          foaf:mbox "tomcat@user.org";
          prov:actedOnBehalfOf "Apache"
        .
      }
    }
	'''
. 
#
#
#
# CLEAR ALL DATA
#
#
#

#
# PRODUCTIONS
#

# Speciale pagina om alle data over een enkel resource te wissen
# Deze backdoor moet zeer waarschijnlijk verwijderd worden uit de definitieve configuratie!
updatestage:clearsingleresource a elmo:Production;
	elmo:contains stage:DSOv2Beheermenu;
	elmo:contains stage:search_resources;
	elmo:queryForm stage:DSOv2SelectResourceForm;
	elmo:contains stage:ClearSingleResourceScene;
.

stage:DSOv2SelectResourceForm a elmo:Form;
	rdfs:label "Selecteer resource";
	elmo:index "1";
	elmo:fragment [
		elmo:applies-to "resource";
		rdfs:label "Selecteer resource"@nl;
		elmo:valuesFrom stage:search_resources;
		elmo:constraint elmo:MandatoryConstraint;
		elmo:index "1";
	];
	elmo:fragment [
		elmo:appearance elmo:SubmitAppearance;
		rdfs:label "Ga verder"@nl;
		elmo:index "2";
	];
.

#
# PARTS
#

stage:search_resources a elmo:Part;
	elmo:appearance elmo:HiddenAppearance;
	elmo:query '''
		prefix dcat: <http://www.w3.org/ns/dcat#>
		CONSTRUCT {
			?resource rdfs:label ?label
		}
		WHERE {
			GRAPH ?g {
				?resource rdf:type ?type.
    		BIND( str(?resource) AS ?label )
			}
			FILTER regex( ?g, "http://catalogus.test.kadaster.nl/id/transactie/" )
		}
	''';
.


#
# SCENES
#

# Scene gebruikt voor het verwijderen van alle data
stage:ClearSingleResourceScene a elmo:Scene;
	elmo:index "1";
	rdfs:label "Verwijder enkel resource";
	elmo:query '''
		DELETE {
			GRAPH ?g {
				<@RESOURCE@> ?p ?o
			}
		}
		WHERE {
			GRAPH ?g {
				<@RESOURCE@> ?p ?o
			}
      FILTER regex( ?g, "http://omgevingswet.overheid.nl/catalogus/id/transactie/" )
		}
	'''
.
 
#
#
#
# CLEAR ALL DATA
#
#
#

#
# PRODUCTIONS
#

# Speciale pagina om nieuw model toe te voegen
updatestage:addnewmodel a elmo:Production;
	elmo:contains stage:DSOv2Beheermenu;
	elmo:contains stage:DSOv2Header;
	elmo:contains stage:DSOv2Footer;
	elmo:queryForm stage:DSOv2NameForm;
	elmo:contains stage:AddNewModelScene;
.

#
# FORMS
#

stage:DSOv2NameForm a elmo:Form;
	rdfs:label "Voeg model toe";
    elmo:fragment [
        elmo:applies-to "name";
        rdfs:label "Naam model"@nl;
        rdfs:label "Model name"@en;
        elmo:constraint elmo:MandatoryConstraint;
        elmo:index "1";
    ];
    elmo:fragment [
        elmo:applies-to "prefix";
        rdfs:label "Prefix (optioneel)"@nl;
        rdfs:label "Prefix (optional)"@en;
        elmo:index "2";
    ];
    elmo:fragment [
        elmo:appearance elmo:SubmitAppearance;
        rdfs:label "Voeg toe"@nl;
        elmo:index "3";
    ]
.


#
# SCENES
#

# Scene gebruikt voor het verwijderen van alle data
stage:AddNewModelScene a elmo:Scene;
	elmo:index "1";
	rdfs:label "Naam toevoegen";
	elmo:query '''
		INSERT {
			GRAPH ?graph {
				?graph rdf:type owl:Ontology.
				?graph rdfs:label ?label.
			}
		}
		WHERE {
			BIND( REPLACE( "@NAME@", "[^A-Za-z0-9-_]", "" ) AS ?label )
			BIND( IF( substr( "@PREFIX@", 2 ) = "PREFIX@",  "http://catalogus.test.kadaster.nl/def/", "@PREFIX@" ) AS ?prefix )
      BIND( IRI( CONCAT( ?prefix, REPLACE( "@NAME@", "[^A-Za-z0-9-_]", "" ) ) ) AS ?graph )
		}
	'''
.
 
#
# PAGINA'S (REPRESENTATIONS)
#

# Weergavepagina inclusief versies en grafische weergave
stage:WeergavePaginaResource a elmo:Representation;
  # Bereikbaarheid
  elmo:uri-pattern "/id/";
    
  # Onderdelen
  elmo:contains stage:DSOv2Menu;
  
  # Weergave
  elmo:contains stage:WeergavePaginaResourceAppearance
.

stage:WeergavePaginaResourceAppearance a elmo:Part;
  elmo:appearance elmo:ContentAppearance;
  elmo:fragment [
    elmo:applies-to skos:definition;
    rdfs:label "Definitie"@nl;
    elmo:index "01"
  ];
  elmo:fragment [
    elmo:applies-to adms:status;
    rdfs:label "Status"@nl;
    elmo:appearance elmo:GlobalLink;
    elmo:index "02"
  ];
  elmo:fragment [
    elmo:appearance elmo:HiddenAppearance;
    elmo:applies-to dct:issued;
    rdfs:label "Bekendgemaakt op"@nl;
    elmo:index "03"
  ];
  elmo:fragment [
    elmo:applies-to dcmiperiod:start;
    rdfs:label "Startdatum geldigheid"@nl;
    elmo:index "04"
  ];
  elmo:fragment [
    elmo:applies-to dcmiperiod:end;
    rdfs:label "Einddatum geldigheid"@nl;
    elmo:index "05"
  ];
  elmo:fragment [
    elmo:applies-to prov:generatedAtTime;
    rdfs:label "Beschikbaar op"@nl;
    elmo:index "06"
  ];
  elmo:fragment [
    elmo:applies-to rdfs:label;
    elmo:appearance elmo:HiddenAppearance
  ];
  elmo:query stage:DSOv2ResourceQuery
.

# Query voor WeergaveTabel
stage:DSOv2ResourceQuery a elmo:Query;
	elmo:query '''    
    prefix prov: <http://www.w3.org/ns/prov#>
		prefix wdrs: <http://www.w3.org/2007/05/powder-s#>
		prefix adms: <http://www.w3.org/ns/adms#>
		prefix adms-status: <http://purl.org/adms/status/>
		prefix slex-status: <http://bp4mc2.org/skos-lex/status/>
		prefix dct: <http://purl.org/dc/terms/>
		prefix dcmiperiod: <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix foaf: 	  		<http://xmlns.com/foaf/0.1/>
    
		CONSTRUCT {
      <@IDSUBJECT@> ?p ?o;
        adms:status ?status;
        dct:issued ?issued;
        dcmiperiod:start ?start;
        dcmiperiod:end ?end;
        prov:generatedAtTime ?time
      .
      adms-status:Deprecated rdfs:label "Vervallen".
      adms-status:Completed rdfs:label "Te gebruiken".
      adms-status:Withdrawn rdfs:label "Teruggetrokken".
      adms-status:UnderDevelopment rdfs:label "Werkversie".
      slex-status:Issued rdfs:label "Bekendgemaakt".
		}
		WHERE {
      GRAPH ?graph {
        <@IDSUBJECT@> ?p ?o;
          foaf:isPrimaryTopicOf ?doc.
      }
      FILTER regex( ?graph, "http://catalogus.test.kadaster.nl/id/transactie/" )
      GRAPH ?docGraph {
        ?doc adms:status ?status.
        OPTIONAL {
          ?doc dct:issued ?issued.
        }
        OPTIONAL {
          ?doc dct:temporal ?temporal.
          ?temporal dcmiperiod:start ?start.
          OPTIONAL {
            ?temporal dcmiperiod:end ?end.
          }
        }
        ?docGraph prov:generatedAtTime ?time.
      }
      
      BIND(
        IF( substr( "@BESCHIKBAAROP@", 2 ) = "BESCHIKBAAROP@",  now(), 
                                                            strdt( "@BESCHIKBAAROP@", xsd:dateTime )
        ) AS ?requestedGenerated
      )
      BIND( strdt( "@BEKEND@", xsd:date ) AS ?requestedIssued )
      BIND( strdt( "@GELDIGOP@", xsd:dateTime ) AS ?requestedEnacted )
      BIND(
        IF( LCASE( "@STATUS@" ) = "bekendgemaakt",   slex-status:Issued,
        IF( LCASE( "@STATUS@" ) = "werkversie",      adms-status:UnderDevelopment,
        IF( LCASE( "@STATUS@" ) = "teruggetrokken",  adms-status:Withdrawn,
        IF( LCASE( "@STATUS@" ) = "vervallen",       adms-status:Deprecated,
                                            adms-status:Completed
        ) ) ) ) AS ?requestedStatus
      )
      
      FILTER(
        ?time <= ?requestedGenerated
        && ?status = ?requestedStatus
        && (
          substr( "@BEKEND@", 2 ) = "BEKEND@"
          || strdt( ?issued, xsd:date ) <= ?requestedIssued
        )
        && (
          (
            substr( "@GELDIGOP@", 2 ) = "GELDIGOP@"
            && (
              !BOUND( ?start )
              ||
              (
                strdt( ?start, xsd:dateTime ) <= now()
                &&
                (
                  !BOUND( ?end )
                  || strdt( ?end, xsd:dateTime ) > now()
                )
              )
            )
          )
          || 
          (
            strdt( ?start, xsd:date ) <= ?requestedEnacted
            && 
            (
              !BOUND( ?end )
              || strdt( ?end, xsd:date ) > ?requestedEnacted
            )
          )
        )
      )
      
      FILTER NOT EXISTS {
        GRAPH ?newerDocGraph {
          ?doc rdf:type prov:Entity.
          ?newerDocGraph prov:generatedAtTime ?newerTime.
          FILTER( ?newerTime > ?time )
        }
        FILTER(
          ?newerTime <= ?requestedGenerated
        )
      }
      
		}
	'''
.
 
#
# PAGINA'S (REPRESENTATIONS)
#

# Weergavepagina inclusief versies en grafische weergave
stage:WeergavePaginaConceptenMetadata a elmo:Representation;
  # Bereikbaarheid
  elmo:applies-to [
    rdf:type prov:Entity
  ];
  
  # Onderdelen
  elmo:contains stage:DSOv2Menu;
  
  # Data
	elmo:query stage:WeergaveTabelConceptenMetadataQuery;
.

# Query voor WeergaveTabel
stage:WeergaveTabelConceptenMetadataQuery a elmo:Query;
	elmo:query '''
    prefix prov: <http://www.w3.org/ns/prov#>
		prefix wdrs: <http://www.w3.org/2007/05/powder-s#>
		prefix adms: <http://www.w3.org/ns/adms#>
		prefix adms-status: <http://purl.org/adms/status/>
		prefix slex-status: <http://bp4mc2.org/skos-lex/status/>
		prefix dct: <http://purl.org/dc/terms/>
		prefix dcmiperiod: <http://dublincore.org/documents/2006/04/10/dcmi-period/>
		
		construct {
      ?graph prov:generatedAtTime ?time;
        ?p ?o;
        ?tempP ?tempO.
		}
		where {
      GRAPH ?graph {
        ?graph prov:generatedAtTime ?time.
        <@SUBJECT@> ?p ?o.
        OPTIONAL {
          <@SUBJECT@> dct:temporal ?temporal.
          ?temporal ?tempP ?tempO.
        }    
        
        FILTER(
          ?p != dct:temporal
        )
      }
      FILTER regex( ?graph, "http://catalogus.test.kadaster.nl/id/transactie/" )
		}
	'''
. 
#
#
#
# WEERGAVEPAGINA'S
#
#
#

stage:WeergavePaginaActivity a elmo:Representation;
  # Bereikbaarheid
	elmo:applies-to [
		rdf:type prov:Activity;
	];
  
  # Onderdelen
  elmo:contains stage:DSOv2Menu;
  
  # Data
	elmo:query stage:WeergaveTabelActivityQuery;
.

stage:WeergavePaginaAgent a elmo:Representation;
  # Bereikbaarheid
	elmo:applies-to [
		rdf:type prov:Agent;
	];
  
  # Onderdelen
  elmo:contains stage:DSOv2Menu;
  
  # Data
	elmo:query stage:WeergaveTabelAgentQuery;
.

# Query voor WeergaveTabel
stage:WeergaveTabelActivityQuery a elmo:Query;
	elmo:query '''
		CONSTRUCT {
      <@IDSUBJECT@> ?p ?o
		}
		WHERE {
      GRAPH ?graph {
        <@IDSUBJECT@> ?p ?o.
      }
      FILTER regex( ?graph, "http://omgevingswet.overheid.nl/catalogus/id/transactie/" )
		}
	'''
.

# Query voor WeergaveTabel
stage:WeergaveTabelAgentQuery a elmo:Query;
	elmo:query '''
		prefix catalogus: <http://omgevingswet.overheid.nl/catalogus/>
    
		CONSTRUCT {
      <@IDSUBJECT@> ?p ?o
		}
		WHERE {
      GRAPH catalogus:users {
        <@IDSUBJECT@> ?p ?o.
      }
		}
	'''
. 
#
# PAGINA'S (REPRESENTATIONS)
#

# Weergavepagina inclusief versies en grafische weergave
stage:TestWeergave a elmo:Representation;
  # Bereikbaarheid
  elmo:url-pattern "/query/testweergave";
  elmo:layer elmo:TopLayer;
    
  # Onderdelen
  elmo:contains stage:DSOv2Menu;
  
  # Data
	elmo:query stage:TestWeergaveQuery;
.

# Query voor WeergaveTabel
stage:TestWeergaveQuery a elmo:Query;
	elmo:query '''
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix wdrs: <http://www.w3.org/2007/05/powder-s#>
		prefix adms: <http://www.w3.org/ns/adms#>
		prefix adms-status: <http://purl.org/adms/status/>
		prefix slex-status: <http://bp4mc2.org/skos-lex/status/>
		prefix dct: <http://purl.org/dc/terms/>
		
		construct {
      ?graph ?graphP ?graphO;
        ?p ?o
      .
		}
		where {
      GRAPH ?graph {
        ?graph ?graphP ?graphO.
        <@IDSUBJECT@> ?p ?o.
        FILTER( ?p != rdfs:label )
      }
      FILTER regex( ?graph, "http://catalogus.test.kadaster.nl/id/transactie/" )
		}
	'''
. 
#
# PAGINA'S (REPRESENTATIONS)
#

# Weergavepagina inclusief versies en grafische weergave
stage:TestWeergaveMetadata a elmo:Representation;
  # Bereikbaarheid
  elmo:url-pattern "/query/testweergave-metadata";
  elmo:layer elmo:TopLayer;
  
  # Onderdelen
  elmo:contains stage:DSOv2Menu;
  
  # Data
	elmo:query stage:TestWeergaveMetadataQuery;
.

# Query voor WeergaveTabel
stage:TestWeergaveMetadataQuery a elmo:Query;
	elmo:query '''
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix wdrs: <http://www.w3.org/2007/05/powder-s#>
		prefix adms: <http://www.w3.org/ns/adms#>
		prefix adms-status: <http://purl.org/adms/status/>
		prefix slex-status: <http://bp4mc2.org/skos-lex/status/>
		prefix dct: <http://purl.org/dc/terms/>
				
		construct {
      ?graph prov:generatedAtTime ?time.
			?graph ?p ?o.
		}
		where {
      GRAPH ?graph {
        ?graph prov:generatedAtTime ?time.
        <@SUBJECT@> ?p ?o.
      }
      FILTER regex( ?graph, "http://catalogus.test.kadaster.nl/id/transactie/" )
		}
	'''
. 
#
#
#
# OVERZICHTSPAGINA
#
#
#

#
# PAGINA'S (REPRESENTATIONS)
#

# Overzichtspagina concepten
stage:DSOv2Overzichtspagina rdf:type elmo:Representation;
  # Bereikbaarheid
	elmo:url-pattern "/catalogus/dsov2(|/)$";
  
  # Onderdelen
  elmo:contains stage:DSOv2Menu;
  
  # Weergave
  elmo:appearance elmo:TableAppearance;
  
  # Data
  elmo:query stage:DSOv2ConceptenQuery;
.

#
# QUERY'S
#

# Query voor tonen alle concepten
stage:DSOv2ConceptenQuery a elmo:Query;
	elmo:query '''
		prefix prov:            <http://www.w3.org/ns/prov#>
    prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
		
		SELECT ?concept ?concept_label ?type ?uitleg
		WHERE {
      GRAPH ?graph {
        ?concept rdf:type ?type.
        OPTIONAL { ?concept rdfs:label ?concept_label. }
        OPTIONAL { ?concept skos:definition ?uitleg. }
        FILTER( ?type NOT IN ( sd:Graph, prov:Entity, skos:ConceptScheme ) )
        
        ?graph prov:generatedAtTime ?graphTime.
        FILTER NOT EXISTS {
          GRAPH ?newerGraph {
            ?newerGraph prov:generatedAtTime ?newerTime.
            ?concept rdf:type ?type.
            FILTER( ?newerTime > ?graphTime )
          }
        }
      }
      FILTER regex( ?graph, "http://catalogus.test.kadaster.nl/id/transactie/" )
		}
		ORDER BY lcase(?concept_label)
	'''
.
 
