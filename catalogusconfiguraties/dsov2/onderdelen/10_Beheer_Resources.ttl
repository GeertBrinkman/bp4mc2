#
#
#
# BEHEER CONCEPTEN
#
#
#

#
# CONTAINERS
#

# Twee soorten containers:
# POST
# 	- Voegt één of meerdere nieuwe resourcepen toe
# 	- Geeft een foutmelding als één of meerdere van de geuploade resourcepen al bestaan
# PUT
# 	- Update bestaande resourcepen
#	- Geeft een foutmelding als één of meerdere van de geuploade resourcepen nog niet bestaan
# 

#
# CONTAINERS
#

# Container POST Turtle Concepten
container:resource-post-ttl a elmo:Container;
  # Onderdelen
  elmo:contains stage:DSOv2Beheermenu;
  elmo:fragment [
      elmo:applies-to "oin";
      rdfs:label "OIN"@nl;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "1";
  ];
  elmo:fragment [
      elmo:applies-to "dataset";
      rdfs:label "Dataset"@nl;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "2";
  ];
  # Weergave
  elmo:representation elmo:UploadRepresentation;
  rdfs:label "Voeg nieuw resource toe (.ttl)";
  
  # Assertions
  elmo:assertion [
		rdfs:label "De upload mag geen datasets zonder dct:title bevatten.";
		elmo:assert-not '''
			prefix container: <http://localhost:8080/catalogus/dsov2/container/>
			prefix dcterms: <http://purl.org/dc/terms/>
      prefix dcat: <http://www.w3.org/ns/dcat#>
			ASK {
				GRAPH container:generiek {
					?s rdf:type ?type.
          FILTER(  ?type IN ( dcat:Dataset, skos:ConceptScheme ) )
					FILTER NOT EXISTS {
						?s dcterms:title ?title.
					}
				}
			}
		''';
	];
	elmo:assertion [
		rdfs:label "De upload mag geen datasets zonder skos:ConceptScheme bevatten.";
		elmo:assert-not '''
			prefix container: <http://localhost:8080/catalogus/dsov2/container/>
			prefix dcat: <http://www.w3.org/ns/dcat#>
			ASK {
				GRAPH container:generiek {
					?s rdf:type dcat:Dataset.
					FILTER NOT EXISTS {
						?s rdf:type skos:ConceptScheme.
					}
				}
			}
		''';
	];
	elmo:assertion [
		rdfs:label "De upload mag geen conceptschemes zonder dcat:Dataset bevatten.";
		elmo:assert-not '''
			prefix container: <http://localhost:8080/catalogus/dsov2/container/>
			prefix dcat: <http://www.w3.org/ns/dcat#>
			ASK {
				GRAPH container:generiek {
					?s rdf:type skos:ConceptScheme.
					FILTER NOT EXISTS {
						?s rdf:type dcat:Dataset.
					}
				}
			}
		''';
	];
  elmo:assertion [
		rdfs:label "De upload mag geen triples met skos:inScheme als predicate bevatten.";
		elmo:assert-not '''
			prefix container: <http://localhost:8080/catalogus/dsov2/container/>
			prefix dcat: <http://www.w3.org/ns/dcat#>
			ASK {
				GRAPH container:generiek {
					?s skos:inScheme ?scheme.
				}
			}
		''';
	];
  
  # Data
  elmo:replaces container:generiek;
  elmo:query stage:ResourcePostScene
.

# Container PUT Turtle Concepten
container:resource-put-ttl a elmo:Container;
  # Onderdelen
  elmo:contains stage:DSOv2Beheermenu;
  
  # Weergave
  elmo:representation elmo:UploadRepresentation;
  rdfs:label "Update bestaande resource (.ttl)";
  
  # Assertions
  elmo:assertion [
    rdfs:label "De upload bevat resources die nog niet bestaan.";
    elmo:assert-not '''
      prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
      ASK {
        GRAPH container:generiek {
          ?s rdf:type ?type.
        }
        FILTER NOT EXISTS {
          GRAPH ?transactie {
            ?s rdf:type ?type.
          }
          FILTER regex( ?transactie, "http://catalogus.test.kadaster.nl/id/transactie/" )
        }
      }
    '''
  ];
  
  # Data
  elmo:replaces container:generiek;
  elmo:query stage:ResourcePutScene;
.

# Container voor aanvullen resource
container:resource-add-ttl a elmo:Container;
  # Onderdelen
  elmo:contains stage:DSOv2Beheermenu;
  
  # Weergave
  elmo:representation elmo:UploadRepresentation;
  rdfs:label "Vul bestaand resource aan (.ttl)";
  
  # Data
  elmo:replaces container:generiek;
  elmo:query stage:ResourceAddScene;
.

#
# SCENES
#

stage:ResourcePostScene a elmo:Scene;
	rdfs:label "Opslaan van de resources";
  elmo:index "90";
	elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcat: 		        <http://www.w3.org/ns/dcat#>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix def:             <http://catalogus.test.kadaster.nl/def/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix org:             <http://www.w3.org/TR/vocab-org#>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
    prefix skos-lex-status: <http://bp4mc2.org/skos-lex/status/>
    
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
    
    INSERT {
      GRAPH ?transactie {
        ?transactie rdf:type sd:Graph, prov:Entity;
          skos:changeNote "Reserveren van de resource in de Catalogus";
          prov:generatedAtTime ?now;
          prov:wasAttributedTo user:TomcatUser
        .
        
        ?subject ?p ?o;
          rdf:type ?type;
          skos:prefLabel ?prefLabel;
          dcterms:title ?title;
          foaf:isPrimaryTopicOf ?doc;
          skos:inScheme ?dataset
        .
        
        ?doc rdf:type prov:Entity;
          adms:status adms-status:UnderDevelopment
        .
      }
    }
    WHERE {
      {
        GRAPH ?orgGraph {
          ?org rdf:type org:Organization;
            org:identifier "@OIN@"^^xsd:string;
            foaf:isPrimaryTopicOf ?docOrg
          .
          
          ?orgGraph prov:generatedAtTime ?orgTime.
          FILTER NOT EXISTS {
            GRAPH ?newerOrgGraph {
              ?newerOrgGraph prov:generatedAtTime ?newerOrgTime.
              ?org rdf:type org:Organization.
              FILTER( ?newerOrgTime > ?orgTime )
            }
          }
        }
        GRAPH ?docOrgGraph {
          ?docOrg adms:status adms-status:Completed.
          FILTER NOT EXISTS {
            ?docOrg dcterms:temporal/dcmiperiod:end ?end.
            FILTER( strdt( ?end, xsd:dateTime ) < now() )
          }
          
          ?docOrgGraph prov:generatedAtTime ?docOrgTime.
          FILTER NOT EXISTS {
            GRAPH ?newerDocOrgGraph {
              ?newerDocOrgGraph prov:generatedAtTime ?newerDocOrgTime.
              ?docOrg rdf:type prov:Entity.
              FILTER( ?newerDocOrgTime > ?docOrgTime )
            }
          }
        }
        GRAPH ?datasetGraph {
          <@DATASET@> dcterms:publisher ?org;
            foaf:isPrimaryTopicOf ?docDataset
          .
          
          ?datasetGraph prov:generatedAtTime ?datasetTime.
          FILTER NOT EXISTS {
            GRAPH ?newerDatasetGraph {
              ?newerDatasetGraph prov:generatedAtTime ?newerDatasetTime.
              <@DATASET@> rdf:type dcat:Dataset.
              FILTER( ?newerDatasetTime > ?datasetTime )
            }
          }
        }
        GRAPH ?docDatasetGraph {
          ?docDataset adms:status adms-status:Completed.
          FILTER NOT EXISTS {
            ?docDataset dcterms:temporal/dcmiperiod:end ?end.
            FILTER( strdt( ?end, xsd:dateTime ) < now() )
          }
          
          ?docDatasetGraph prov:generatedAtTime ?docDatasetTime.
          FILTER NOT EXISTS {
            GRAPH ?newerDocDatasetGraph {
              ?newerDocDatasetGraph prov:generatedAtTime ?newerDocDatasetTime.
              ?docDataset rdf:type prov:Entity.
              FILTER( ?newerDocDatasetTime > ?docDatasetTime )
            }
          }
        }
        GRAPH container:generiek {
          ?s rdf:type ?type;
            ?p ?o
          .
          FILTER( ?type NOT IN ( dcat:Dataset, skos:ConceptScheme, org:Organization ) )
          FILTER( ?p NOT IN ( skos:prefLabel, skos:inScheme, rdf:type ) )
          OPTIONAL {
            ?s skos:prefLabel ?prefLabel
          }
          OPTIONAL {
            ?s skos:inScheme ?scheme.
          }
        }
        BIND( IF( BOUND( ?scheme ), ?scheme, iri( "@DATASET@" ) ) AS ?dataset )
      } UNION {
        GRAPH container:generiek {
          ?s rdf:type ?type;
            ?p ?o
          .
          FILTER( ?p NOT IN ( skos:inScheme ) )
          OPTIONAL {
            ?s dcterms:title ?title.
          }
          FILTER( ?type IN ( dcat:Dataset, skos:ConceptScheme, org:Organization ) )
        }
      }
      
      BIND( IF( BOUND( ?prefLabel ), ?prefLabel,
            IF( BOUND( ?title ), replace( ?title, " ", "" ),
            replace( str( ?s ), ".+/", "" )
          ) ) AS ?workingLabel )
      BIND( IF( ?type = skos:ConceptScheme, dcat:Dataset, ?type ) AS ?workingType )
      BIND( lcase( replace( replace( str( ?workingType ), ".+/", "" ), ".+#", "" ) ) AS ?typename )
      BIND( iri( concat( "http://catalogus.test.kadaster.nl/id/transactie/", replace( now(), " ", "T" ) ) ) AS ?transactie )
      BIND( strbefore( "@DATASET@", "/id/" ) AS ?prefix )
      BIND( IF( ?workingType = dcat:Dataset, ?s, iri( concat( ?prefix, "/id/", ?typename, "/", ?workingLabel ) ) ) AS ?subject )
      BIND( iri ( concat(  "http://catalogus.test.kadaster.nl/id/entity/", replace( now(), " ", "T" ), "-", ?typename, "-", ?workingLabel ) ) AS ?doc )
      BIND( now() AS ?now )
    }
	''';
.

stage:ResourcePutScene a elmo:Scene;
	rdfs:label "Query voor verwerken PUT";
	elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcat: 	  		    <http://www.w3.org/ns/dcat#>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
    prefix skos-lex-status: <http://bp4mc2.org/skos-lex/status/>
    
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
		
    INSERT {
      GRAPH ?transactie {
        ?transactie rdf:type sd:Graph, prov:Entity;
          skos:changeNote "Aanpassen van een resource in de Catalogus";
          prov:generatedAtTime ?now;
          prov:wasAttributedTo user:TomcatUser
        .
        
        ?s ?p ?o;
          foaf:isPrimaryTopicOf ?doc;
          skos:inScheme ?scheme
        .
        
        ?doc rdf:type prov:Entity;
          adms:status adms-status:UnderDevelopment;
          prov:wasRevisionOf ?currentDoc
        .
        
        ?udDoc ?docP ?docO;
          adms:status adms-status:Withdrawn
        .
      }
    }
    WHERE {
      GRAPH container:generiek {
        ?s ?p ?o;
          rdf:type ?type
        .
        FILTER( ?p != skos:inScheme )
      }
      GRAPH ?graph {       
        ?s foaf:isPrimaryTopicOf ?currentDoc.
        OPTIONAL {
          ?s skos:prefLabel ?prefLabel.
        }
        OPTIONAL {
          ?s dcterms:title ?title.
        }
        OPTIONAL {
          ?s skos:inScheme ?scheme.
        }
        
        ?graph prov:generatedAtTime ?graphTime.
        FILTER NOT EXISTS {
          GRAPH ?newerGraph {
            ?newerGraph prov:generatedAtTime ?newerTime.
            ?s rdf:type ?type.
            FILTER( ?newerTime > ?graphTime )
          }
        }
      }
      FILTER regex( ?graph, "http://catalogus.test.kadaster.nl/id/transactie/" )
      
      OPTIONAL {
        GRAPH ?udGraph {
          ?s foaf:isPrimaryTopicOf ?udDoc.
          ?udDoc ?docP ?docO;
            adms:status adms-status:UnderDevelopment
          .
          FILTER( ?docP != adms:status )
          
          ?udGraph prov:generatedAtTime ?udGraphTime.       
          FILTER NOT EXISTS {
            GRAPH ?newerDocGraph {
              ?udDoc rdf:type prov:Entity.
              ?newerDocGraph prov:generatedAtTime ?newerDocGraphTime.
              FILTER ( ?newerDocGraphTime > ?udGraphTime )            
            }
          }
        }
        FILTER regex( ?udGraph, "http://catalogus.test.kadaster.nl/id/transactie/" )
      }
      
      BIND( iri( concat( "http://catalogus.test.kadaster.nl/id/transactie/", replace( now(), " ", "T" ) ) ) AS ?transactie )
      BIND( IF( ?type = skos:ConceptScheme, dcat:Dataset, ?type ) AS ?workingType )
      BIND( lcase( replace( replace( str( ?workingType ), ".+/", "" ), ".+#", "" ) ) AS ?typename )
      BIND( IF( BOUND( ?title ), replace( ?title, " ", "" ), ?prefLabel ) AS ?label )
      BIND( iri ( concat(  "http://catalogus.test.kadaster.nl/id/entity/", replace( now(), " ", "T" ), "-", ?typename, "-", ?label ) ) AS ?doc )
      BIND( now() AS ?now )
    }
    
    CLEAR GRAPH container:generiek
    CLEAR GRAPH container:resource-put-ttl

  '''
.
    
stage:ResourceAddScene a elmo:Scene;
	rdfs:label "Query voor verwerken aanvullen resource";
	elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcterms:         <http://purl.org/dc/terms/>
    prefix foaf:            <http://xmlns.com/foaf/0.1/>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix sd:              <http://www.w3.org/ns/sparql-service-description/>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix skoslex:         <http://bp4mc2.org/def/skos-lex/>
    prefix skos-lex-status: <http://bp4mc2.org/skos-lex/status/>
    
    prefix container:       <http://localhost:8080/catalogus/dsov2/container/>
    prefix user:            <http://catalogus.test.kadaster.nl/users/>
		
    INSERT {
      GRAPH ?transactie {
        ?transactie rdf:type sd:Graph, prov:Entity;
          skos:changeNote "Aanvullen van een in werking zijnde resource met buiten-besluit elementen";
          prov:generatedAtTime ?now;
          prov:wasAttributedTo user:TomcatUser
        .
        
        ?s ?p ?o;
          foaf:isPrimaryTopicOf ?doc;
          ?pred ?obj
        .
        
        ?doc adms:status adms-status:Completed;
          prov:wasRevisionOf ?currentDoc;
          ?docP ?docO
        .
        
        ?currentDoc adms:status adms-status:Deprecated;
          prov:wasRevisionOf ?currentDocRev;
          prov:wasGeneratedBy ?activity;
          ?docP ?docO
        .
      }
    }
    WHERE {
      GRAPH container:generiek {
        ?s ?p ?o.
        
        FILTER(
          ?p != rdf:type
          && ?p != rdfs:label
          && ?p != skos:prefLabel
          && ?p != skos:definition
        )
      }
      GRAPH ?graph {
        ?s rdf:type ?type;
          foaf:isPrimaryTopicOf ?currentDoc;
          ?pred ?obj
        .
        OPTIONAL {
          ?s skos:prefLabel ?prefLabel.
        }
        OPTIONAL {
          ?s dcterms:title ?title.
        }
        FILTER(
          ?pred != foaf:isPrimaryTopicOf
        )
          
        ?graph prov:generatedAtTime ?graphTime.
        FILTER NOT EXISTS {
          GRAPH ?newerGraph {
            ?newerGraph prov:generatedAtTime ?newerTime.
            ?s rdf:type skos:Concept;
              foaf:isPrimaryTopicOf ?newerDoc.
            FILTER( ?newerTime > ?graphTime )
          }
          GRAPH ?docNewerGraph {
            ?newerDoc adms:status adms-status:Completed
          }
        }
      }
      FILTER regex( ?graph, "http://catalogus.test.kadaster.nl/id/transactie/" )
      GRAPH ?docGraph {
        ?currentDoc adms:status adms-status:Completed;
          ?docP ?docO
        .
        OPTIONAL {
          ?currentDoc prov:wasRevisionOf ?currentDocRev.
        }
        FILTER (
          ?docP != prov:wasRevisionOf
          && ?docP != prov:wasGeneratedBy
          && ?docP != adms:status
        )
        
        ?docGraph prov:generatedAtTime ?docGraphTime.
        FILTER NOT EXISTS {
          GRAPH ?newerDocGraph {
            ?thisDoc adms:status adms-status:Completed.
            ?newerDocGraph prov:generatedAtTime ?newerDocGraphTime.
            FILTER( ?newerDocGraphTime > ?docGraphTime )
          }
        }
      }
      
      BIND( iri( concat( "http://catalogus.test.kadaster.nl/id/transactie/", replace( now(), " ", "T" ) ) ) AS ?transactie )
      BIND( lcase( replace( replace( str( ?workingType ), ".+/", "" ), ".+#", "" ) ) AS ?typename )
      BIND( IF( BOUND( ?prefLabel ), ?prefLabel,
            IF( BOUND( ?title ), ?title, 
          ) ) AS ?workingLabel )
      BIND( iri ( concat(  "http://catalogus.test.kadaster.nl/id/entity", replace( now(), " ", "T" ), "-", ?typename, "-", ?workingLabel ) ) AS ?doc )
      BIND( now() AS ?now )
    }
    
    CLEAR GRAPH container:generiek
    CLEAR GRAPH container:resource-add-ttl
  '''
.