
# Delete waarden van waardelijst
updatestage:deletewaardenvaluelist a elmo:Production;
  elmo:contains stage:DSOv2Beheermenu;
	elmo:contains stage:DSOv2Header;
	elmo:contains stage:DSOv2Footer;
	elmo:queryForm stage:DeleteWaardenForm;
  elmo:contains stage:DeleteWaardenClassificerendScene;
  elmo:contains stage:WaardelijstenList;
  elmo:contains stage:ValuelistMemberList;
.


stage:DeleteWaardenForm a elmo:Form;
	rdfs:label "Verwijder waarden uit waardelijst";
  elmo:index "2";
  elmo:fragment [
      elmo:applies-to "waardelijst";
      rdfs:label "Selecteer de waardelijst"@nl;
      elmo:valuesFrom stage:WaardelijstenList;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "3";
  ];
  elmo:fragment [
      elmo:applies-to "member";
      rdfs:label "Selecteer member"@nl;
      elmo:valuesFrom stage:ValuelistMemberList;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "4";
  ];
  elmo:fragment [
      elmo:appearance elmo:SubmitAppearance;
      rdfs:label "Ga verder"@nl;
      elmo:index "4";
  ]
.
  

#-------------------------- deleten van specifieke waarden uit waardelijst

stage:ValuelistMemberList a elmo:Part;
 elmo:appearance elmo:HiddenAppearance;
  elmo:query '''
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix org:             <http://www.w3.org/TR/vocab-org#>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix bp4mc2:          <http://bp4mc2.org/elmo/def/>
    prefix def:             <http://catalogus.test.kadaster.nl/def/>  
    prefix sh: 		          <http://www.w3.org/ns/shacl#>
    prefix shxl:            <http://bp4mc2.org/def/sh-xl#>
    
    
		CONSTRUCT {
			?member rdfs:label ?label
		}
    # Classificerend: aangenomen dat de uris wel staan zoals ze moeten staan moet ik een andere collectie hier ophalen die heet wel hetzelfde maar heeft een andere uri. gewoon het laatste stukje pakken en binden aan een andere uri?
		WHERE {
      {
        GRAPH def:Waardelijsten {
          <@WAARDELIJST@> rdf:type sh:NodeShape;
            sh:property [
              sh:path [ sh:inversePath skos:member ];
              sh:hasValue ?collection
            ]
          .
        }
        GRAPH ?graphClassificerend {
          ?collection rdf:type skos:Collection;
            skos:member ?member.
          ?member rdfs:label ?label.
          ?graphClassificerend prov:generatedAtTime ?graphCollectionTime.
          
          FILTER NOT EXISTS {
            GRAPH ?newerGraph {
              ?newerGraph prov:generatedAtTime ?newerTime.
              ?collection rdf:type skos:Collection.
            FILTER( ?newerTime > ?graphCollectionTime )
            }
          }
        }
        
        FILTER regex( ?graphClassificerend, "http://catalogus.test.kadaster.nl/id/transactie/" )
      }
      # Categoriserend
      UNION {
        GRAPH def:Waardelijsten {
          <@WAARDELIJST@> rdf:type sh:NodeShape;
            sh:property [
              sh:path skos:inScheme;
              sh:hasValue ?scheme
            ]
          .
        }
        GRAPH ?graphCategoriserend {
          ?member rdf:type skos:Concept;
            skos:inscheme ?scheme;
            rdfs:label ?label.
          ?graphCategoriserend prov:generatedAtTime ?graphCategoriserendTime.
        FILTER NOT EXISTS {
          GRAPH ?newerGraph {
            ?newerGraph prov:generatedAtTime ?newerTime.
            ?member rdf:type skos:Concept;
              skos:inscheme ?scheme.
            FILTER( ?newerTime > ?graphCategoriserendTime )
          }
        }
        }
       
        FILTER regex( ?graphCategoriserend, "http://catalogus.test.kadaster.nl/id/transactie/" )
      }
      
     ## Refererend
      UNION {
        GRAPH def:Waardelijsten {
          <@WAARDELIJST@> rdf:type sh:NodeShape;
            sh:property [
              sh:path rdf:type;
              sh:hasValue ?class
            ]
          .
        } 
        GRAPH ?graphRefererend {
          ?member rdf:type ?class;
            rdfs:label ?label.
          ?graphRefererend prov:generatedAtTime ?graphRefererendTime.
          FILTER NOT EXISTS {
          GRAPH ?newerGraph {
            ?newerGraph prov:generatedAtTime ?newerTime.
            ?member rdf:type ?class.
            FILTER( ?newerTime > ?graphRefererendTime )
          }
        }
        }
        
        FILTER regex( ?graphRefererend, "http://catalogus.test.kadaster.nl/id/transactie/" )
      }
    }
    
 '''
.  

#-----------------------------------------------------------------------------------------  
stage:DeleteWaardenClassificerendScene a elmo:Scene;
  rdfs:label "Verwijderen onderdeel van Classificerende waardelijst";
  elmo:index "01"; 
  elmo:query '''
  
    prefix adms:            <http://www.w3.org/ns/adms#>
    prefix adms-status:     <http://purl.org/adms/status/>
    prefix dcmiperiod:      <http://dublincore.org/documents/2006/04/10/dcmi-period/>
    prefix dcterms:    		  <http://purl.org/dc/terms/>
    prefix foaf: 	  		    <http://xmlns.com/foaf/0.1/>
    prefix org:             <http://www.w3.org/TR/vocab-org#>
    prefix prov:            <http://www.w3.org/ns/prov#>
    prefix skos:            <http://www.w3.org/2004/02/skos/core#>
    prefix bp4mc2:          <http://bp4mc2.org/elmo/def/>
    prefix def:             <http://catalogus.test.kadaster.nl/def/>  
    prefix sh: 		          <http://www.w3.org/ns/shacl#>
    prefix shxl:            <http://bp4mc2.org/def/sh-xl#>
    
      INSERT {
        GRAPH ?transactie {
          ?transactie rdf:type sd:Graph, prov:Entity;
            skos:changeNote "Aanpassen van een waardelijst in de Catalogus";
            prov:generatedAtTime ?now;
            prov:wasAttributedTo user:TomcatUser
          .
          ?collection rdf:type skos:Collection;
            skos:member ?concept;
            foaf:isPrimaryTopicOf ?doc
          .

          ?doc rdf:type prov:Entity;
            adms:status adms-status:UnderDevelopment;
            prov:wasRevisionOf ?currentDoc
          .

          ?udDoc ?docP ?docO;
            adms:status adms-status:Withdrawn
          .
        }
      }
      WHERE {
        GRAPH ?graph {
              ?collection ?p ?o;
                skos:member ?concept.
            }
        GRAPH def:Waardelijsten {
          <@WAARDELIJST@> rdf:type sh:NodeShape;
             rdfs:label ?name;
              sh:property [
                sh:path [ sh:inversePath skos:member ];
                sh:hasValue ?collection
              ]
            .
          FILTER( ?s != <@CONCEPT@>)
          FILTER( ?p != skos:member)
          ?graph prov:generatedAtTime ?graphTime.

          FILTER NOT EXISTS {
            GRAPH ?newerGraph {
              ?newerGraph prov:generatedAtTime ?newerTime.
              ?collection rdf:type skos:Collection.
              FILTER( ?newerTime > ?graphTime )
            }
          }
        }
        FILTER regex( ?graph, "http://catalogus.test.kadaster.nl/id/transactie/" )
        OPTIONAL {
          GRAPH ?udGraph {
            ?collection  foaf:isPrimaryTopicOf ?udDoc.
            ?udDoc ?docP ?docO;
              adms:status adms-status:UnderDevelopment
            .
            FILTER( ?docP != adms:status )    
            ?udGraph prov:generatedAtTime ?udGraphTime.         
            FILTER NOT EXISTS {
              GRAPH ?newerDocGraph {
                ?udDoc rdf:type prov:Entity.
                ?newerDocGraph prov:generatedAtTime ?newerDocGraphTime.
                FILTER ( ?newerDocGraphTime > ?udGraphTime )            
              }
            }
          } 
          FILTER regex( ?udGraph, "http://catalogus.test.kadaster.nl/id/transactie/" )
        }
        
        BIND( iri( concat( "http://catalogus.test.kadaster.nl/id/transactie/", replace( now(), " ", "T" ) ) ) AS ?transactie )
        BIND( lcase( replace( replace( str( ?type ), ".+/", "" ), ".+#", "" ) ) AS ?typename )
        BIND( IF( BOUND( ?title ), replace( ?title, " ", "" ), ?prefLabel ) AS ?label )
        BIND( iri ( concat(  "http://catalogus.test.kadaster.nl/id/entity/", replace( now(), " ", "T" ), "-", ?typename, "-", ?label ) ) AS ?doc )
        BIND( now() AS ?now )
      } 
      
  '''
.


stage:DeleteWaardenRefererendScene a elmo:Scene;
rdfs:label "Verwijder waarden uit refererende waardelijst";
elmo:index "4";
elmo:query '''
  
    
            
  '''
.
#-----------------------------------------------------------------------------------------  
stage:DeleteWaardenCategoriserendScene a elmo:Scene;
  rdfs:label "Verwijder waarden uit refererende waardelijst";
  elmo:index "4";
  elmo:query '''
    
    
            
  '''
.
