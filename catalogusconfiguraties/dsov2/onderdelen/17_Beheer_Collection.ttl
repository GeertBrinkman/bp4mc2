#
#
#
# BEHEER COLLECTION
#
#
#
#
# PRODUCTIONS
#

# Aanmaken collectie
container:collection-post-ttl a elmo:Container;
  elmo:contains stage:DSOv2Beheermenu;
  elmo:fragment [
      elmo:applies-to "oin";
      rdfs:label "OIN"@nl;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "1";
  ];
  elmo:fragment [
      elmo:applies-to "dataset";
      rdfs:label "Dataset"@nl;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "2";
  ];
  elmo:representation elmo:UploadRepresentation;
	rdfs:label "Upload Collectie";
  
    # Data
  elmo:replaces container:generiek;
  elmo:query stage:DSOv2UploadPost;
  #elmo:contains stage:DSOv2CollectiesConceptenPost;
  .

stage:CollectieList a elmo:Part;
  elmo:appearance elmo:HiddenAppearance;
  elmo:query '''
    prefix owl: 			<http://www.w3.org/2002/07/owl#>
    prefix rdfs: 			<http://www.w3.org/2000/01/rdf-schema#>
    
    CONSTRUCT {
      ?collectie rdfs:label ?collectie_label
    }
    WHERE {
      GRAPH ?g {
        ?collectie rdf:type skos:Collection;
          rdfs:label ?collectie_label
        .
      }
      
    }
  ''';
.

stage:CollectionMemberList a elmo:Part;
  elmo:appearance elmo:HiddenAppearance;
  elmo:query '''
    prefix owl: 			<http://www.w3.org/2002/07/owl#>
    prefix rdfs: 			<http://www.w3.org/2000/01/rdf-schema#>
    CONSTRUCT {
      ?concept rdfs:label ?concept_label
    }
    WHERE {
      GRAPH ?g {
        ?collectie  skos:member ?concept.
        ?concept rdfs:label ?concept_label
        .
      }
    }
    
  ''';
.

updatestage:deletewaardencollectie a elmo:Production;
  elmo:contains stage:DSOv2Beheermenu;
	elmo:contains stage:DSOv2Header;
	elmo:contains stage:DSOv2Footer;
	elmo:queryForm stage:DeleteWaardenCollectieForm;
  elmo:contains stage:CollectieList;
  elmo:contains stage:CollectionMemberList;
  elmo:contains stage:ClearSingleMemberScene
.

stage:DeleteWaardenCollectieForm a elmo:Form;
	rdfs:label "Verwijder waarde uit collectie";
  elmo:index "2";
  elmo:fragment [
      elmo:applies-to "collectie";
      rdfs:label "Selecteer de collectielijst"@nl;
      elmo:valuesFrom stage:CollectieList;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "3";
  ];
  elmo:fragment [
      elmo:applies-to "concept";
      rdfs:label "Selecteer het concept"@nl;
      elmo:valuesFrom stage:CollectionMemberList;
      elmo:constraint elmo:MandatoryConstraint;
      elmo:index "4";
  ];
  elmo:fragment [
      elmo:appearance elmo:SubmitAppearance;
      rdfs:label "Ga verder"@nl;
      elmo:index "5";
  ]
.

# Scene gebruikt voor het verwijderen alle de geslecteerde skos:member
stage:ClearSingleMemberScene a elmo:Scene;
	elmo:index "1";
	rdfs:label "Verwijder enkele member uit collectie";
	elmo:query '''
		#DELETE {
		#	GRAPH ?g {
		#		<@COLLECTIE@> skos:member <@CONCEPT@>.
		#	}
		#}
		#WHERE {
		#	GRAPH ?g {
		#		<@COLLECTIE@> ?p ?o;
    #                skos:member <@CONCEPT@>.
		#	}
		#}
    
    INSERT {
      GRAPH ?transactie {
        # Metadata over de transactie
        ...
        
        # De triples van de nieuwe versie van de collectie
        ...
        
        # De triples van de prov:Entity horende bij de nieuwe versie van de collectie
        ...
        
        # Eventuele update van vorige werkversie van de collectie
        ...
      }
    }
    WHERE {
      # Ophalen triples van de laatste versie van de collectie
      # Met uitzondering van de skos:member-triple van het concept dat je wilt verwijderen
      ...
      
      # Ophalen van de prov:Entity horende bij de laatste versie van de collectie, MITS die de status werkversie heeft
      ...
      
      # Bindings
      ...
    }
	'''
.
