#
#
#
#
#	PREFIXES
#
#
#
#
#	Alle gebruikte prefixes binnen de verschillende tax onderdelen.


@prefix stage: <http://pdok-ld-gck.in.kadaster.nl/stage#>.
@prefix updatestage: <http://pdok-ld-gck.in.kadaster.nl/update/>.
@prefix elmo: <http://bp4mc2.org/elmo/def#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xhtml: <http://www.w3.org/1999/xhtml/vocab#>.
@prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix skosax: <http://bp4mc2.org/skosax#>.
@prefix skoslex: <http://bp4mc2.org/def/skos-lex/>.
@prefix thes: <http://purl.org/iso25964/skos-thes#>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix dct: <http://purl.org/dc/terms/>.
@prefix dctype: <http://purl.org/dc/dcmitype/>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix prov: <http://www.w3.org/ns/prov#>.
@prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>.
@prefix vcard: <http://www.w3.org/2006/vcard/ns#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix iso: <http://id.loc.gov/vocabulary/iso639-1/>.
@prefix dcat: <http://www.w3.org/ns/dcat#>.
@prefix kdstat: <http://kadaster.basisregistraties.overheid.nl/id/status/>.
@prefix kddef: <http://kadaster.basisregistraties.overheid.nl/som/def#>.
@prefix adms: <http://www.w3.org/ns/adms#>.
@prefix wdrs: <http://www.w3.org/2007/05/powder-s#>.







 
#
#
#
# FRAMEWORK
#
#
#
#
#
#
# PAGINA'S (REPRESENTATIONS)
#
#
#


# Hoofdpagina beheer
stage:TaxBeheerpagina rdf:type elmo:Representation;
	elmo:url-pattern "/admin(|/)$";
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxFooter;
	elmo:appearance elmo:HtmlAppearance;
	elmo:data [
		rdfs:label "Tax";
		elmo:index "1";
		elmo:html "<div><p>U bent succesvol ingelogd op de beheerpagina.</p></div>";
	];
.


#
#
#
# HERBRUIKBARE PAGINA-ONDERDELEN (PARTS)
#
#
#

#
# Indexloos: Appearance bepaalt plaats op de pagina
#

# Menubalk hoofdmenu
stage:TaxMenu a elmo:Part;
	elmo:appearance elmo:NavbarSearchAppearance;
	elmo:data [ 
		elmo:data [	
			rdfs:label "Concepten";
			elmo:index "1";
			elmo:data [
				rdfs:label "Alle concepten";
				elmo:index "1";
				xhtml:link "/query/overzichtspagina?term=";
			];
			elmo:data [
				rdfs:label "BRT";
				elmo:index "5";
				xhtml:link "/query/overzichtspagina?term=&dataset=brt-begrippen";
			];
			elmo:data [
				rdfs:label "BRK intern (juridisch)";
				elmo:index "3";
				xhtml:link "/query/overzichtspagina?term=&dataset=brk-intern-juridisch-begrippen";
			];
			elmo:data [
				rdfs:label "BRK intern (niet-juridisch)";
				elmo:index "4";
				xhtml:link "/query/overzichtspagina?term=&dataset=brk-intern-begrippen";
			];
			elmo:data [
				rdfs:label "BRK";
				elmo:index "2";
				xhtml:link "/query/overzichtspagina?term=&dataset=brk-begrippen";
			];
			elmo:data [
				rdfs:label "BAG";
				elmo:index "6";
				xhtml:link "/query/overzichtspagina?term=&dataset=bag-begrippen";
			];
			elmo:data [
				rdfs:label "TAX";
				elmo:index "7";
				xhtml:link "/query/overzichtspagina?term=&dataset=tax-begrippen";
			];
		];
		elmo:data [
			rdfs:label "Informatiemodellen";
			elmo:index "2";
			elmo:data [
				rdfs:label "BAG";
				elmo:index "1";
				xhtml:link "/query/vocabulary?model=http://pdok-ld-gck.in.kadaster.nl/def/BAG";
			];
		];
	];
.

# Menubalk Beheermenu
stage:TaxBeheermenu a elmo:Part;
	elmo:appearance elmo:NavbarSearchAppearance;
	elmo:data [
		elmo:data [
			rdfs:label "BEHEER";
			xhtml:link "/admin";
			elmo:index: "0";
		];
		elmo:data [ 
			rdfs:label "Hoofdpagina";
			elmo:index "1";
			xhtml:link "";
		];
		elmo:data [
			rdfs:label "Overzicht datasets";
			elmo:index "2";
			xhtml:link "/query/overzichtdatasets";
		];
		elmo:data [
			rdfs:label "Upload";											#Voor het vervangen van de gehele concepten-dataset. 
			elmo:index "3";
			elmo:data [
				rdfs:label "Upload dataset-metadata (RDF of Turtle)";
				elmo:index "1";
				xhtml:link "/container/datasetupload";
			];
			elmo:data [
				rdfs:label "Upload status (RDF of Turtle)";					#Voor het updaten van de status-graph, deze bevat geen concepten en kan dus niet via 'Upload concepten'.
				elmo:index "2";
				xhtml:link "/container/statusupload";
			];
		];
		elmo:data [
			rdfs:label "Update";											#Voor het updaten van specifieke concepten. Al bestaande concepten die niet worden aangepast, blijven aanwezig.
			elmo:index "4";
			elmo:data [
				rdfs:label "Upload een enkel Concept (Excel)";
				elmo:index "3";
				xhtml:link "/container/excelupdate";
			];
			elmo:data [
				rdfs:label "Upload een enkel Concept (RDF of Turtle)";
				elmo:index "4";
				xhtml:link "/container/ttlupdate";
			];
			elmo:data [
				rdfs:label "Sync geuploade concepten naar dataset (RDF of Turtle)";
				elmo:index "5";
				xhtml:link "/update/syncttlupdate";
			];
		];
		elmo:data[
			rdfs:label "Upload modellen";
			elmo:index "5";
			elmo:data [
				rdfs:label "Upload UML-model (Turtle)";
				elmo:index "3";
				xhtml:link "container/ttlmodelupload";
			];
		];
		elmo:data [
			rdfs:label "Rapportages";										#Koppeling naar alle rapportages
			elmo:index "6";
			elmo:data [
				rdfs:label "Relatiecontrole";								#triples waar <A skos:SemanticRelation B> wel bestaat, maar de omgekeerde relatie ontbreekt
				elmo:index "2";
				xhtml:link "/query/relatiecontrole";
			];
			elmo:data [
				rdfs:label "Missing Links";									#triples waar <B rdf:type type> geen geldige triple is
				elmo:index "3";
				xhtml:link "/query/missinglinks";
			];
			elmo:data [
				rdfs:label "Homoniemen";									#begrippen die in meerdere begripskaders voorkomen
				elmo:index "4";
				xhtml:link "/query/homoniemen1";
			];
			elmo:data [
				rdfs:label "Synoniemen";									#begrippen die meerdere keren voorkomen, inclusief synoniemen
				elmo:index "5";
				xhtml:link "/query/synoniemen";
			];
			elmo:data [
				rdfs:label "Statuscontrole";								#alle begrippen en hun status. Hoofdpagina bevat alleen gevalideerde/geverifieerde begrippen
				elmo:index "1";
				xhtml:link "/query/statuscontrole";
			];
			elmo:data [
				rdfs:label "Looping";										#triples waar zowel <A skos:SemanticRelation B> als <B skos:SemanticRelation A> bestaat, waardoor er een loop ontstaat
				elmo:index "7";
				xhtml:link "/query/loopingcontrole";
			];
			elmo:data [
				rdfs:label "Where used";									#triples waar geldt <B ?relatie A>, dus alle subjecten gerelateerd aan een object
				elmo:index "8";
				xhtml:link "/query/whereused?term=";
			];
			elmo:data [
				rdfs:label "Niet Gevalideerde Links";						#triples waarbij een gevalideerd concept gelinkt is aan een niet-gevalideerd object
				elmo:index "6";
				xhtml:link "/query/nietgevalideerdelinks";
			];
		];
		elmo:data [
			rdfs:label "Hulpmiddelen";										#alle hulpmiddelen die geen rapportages zijn
			elmo:index "7";
			elmo:data [
				rdfs:label "Verwijder alle data";
				elmo:index "1";
				xhtml:link "/update/clearalldata";
			];
			elmo:data [
				rdfs:label "Verwijder enkel concept";
				elmo:index "2";
				xhtml:link "/update/clearsingleconcept";
			];
			elmo:data [
				rdfs:label "Verwijder alle concepten";
				elmo:index "3";
				xhtml:link "/update/clearalleconcepten";
			];
			elmo:data [
				rdfs:label "Exporteren van specifieke dataset";
				elmo:index "4";
				xhtml:link "/query/exportsubsetbegrippen";
			];
		#	elmo:data [
		#		rdfs:label "Exporteren van alle data";
		#		elmo:index "3";
		#		xhtml:link "/query/exporteren";
		#	];
		];
	]
.

# Footer
stage:TaxFooter a elmo:Part;
	elmo:appearance elmo:FooterAppearance;
	elmo:data [
		elmo:html '''
			<div>Waar hierboven sprake is van definities, toelichtingen en uitleg, zijn de daarbij behorende teksten bedoeld om te helpen de basisregistratie Kadaster en communicatie-uitingen van het Kadaster te begrijpen. Het gaat dus niet om echte juridische definities. Voor de juridische betekenis prevaleert altijd de tekst in de formele juridische bron.</div>
		'''^^rdf:html;
	];
.
 
#
#
#
# BEHEER UMLMODEL
#
#
#

#
# CONTAINERS
#

# Uploadcontainer UML-model Turtle
container:ttlmodelupload a elmo:Container;
elmo:representation elmo:UploadRepresentation;
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxBeheermenu;
	rdfs:label "Upload UML-model via Turtle";
	elmo:query stage:TaxTTLUploadScene;
	elmo:fragment [
        elmo:applies-to "model";
        rdfs:label "Selecteer model"@nl;
        elmo:constraint elmo:MandatoryConstraint;
        elmo:index "1";
    ];
.

#
# SCENES
#


# Uploadquery TTL-model
stage:TaxTTLUploadScene a elmo:Scene;
	rdfs:label "Postquery TTL-upload";
	elmo:index "1";
	elmo:query '''
		prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix owl: <http://www.w3.org/2002/07/owl#>

		INSERT {
			GRAPH <http://pdok-ld-gck.in.kadaster.nl/def/@MODEL@> {
				?s ?p ?o.
			}
		}
		WHERE {
			GRAPH container:ttlmodelupload {
				?s ?p ?o.
				FILTER NOT EXISTS {
					?s rdf:type owl:Ontology.
				}
			}
		}

		CLEAR GRAPH container:ttlmodelupload
	''';
. 
# CONTAINERS

# Updatecontainer Turtle
container:ttlupdate a elmo:Container;
    elmo:representation elmo:UploadRepresentation;
    elmo:contains stage:TaxBeheermenu;
    elmo:contains stage:TaxFooter;
    elmo:replaces container:generiek;
    rdfs:label "Upload een enkel Concept via RDF (.xml) of Turtle (.ttl)";
	elmo:assertion [
		rdfs:label "De upload bevat geen concepten.";
		elmo:assert '''
			prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
			prefix skos: <http://www.w3.org/2004/02/skos/core#>
			prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
			ASK {
				GRAPH container:ttlupdate {
					?s rdf:type skos:Concept.
				}
			}
		''';
	];
	elmo:assertion [
		rdfs:label "De upload mag geen concepten met skos:inScheme bevatten.";
		elmo:assert-not '''
			prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
			prefix skos: <http://www.w3.org/2004/02/skos/core#>
			ASK {
				GRAPH container:ttlupdate {
					?s rdf:type skos:Concept.
					?s skos:inScheme ?dataset.
				}
			}
		''';
	];
	elmo:assertion [
		rdfs:label "De upload mag geen concepten zonder kddef:status bevatten.";
		elmo:assert-not '''
			prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
			prefix skos: <http://www.w3.org/2004/02/skos/core#>
			prefix kddef: <http://kadaster.basisregistraties.overheid.nl/som/def#>
			ASK {
				GRAPH container:ttlupdate {
					?s rdf:type skos:Concept.
					FILTER NOT EXISTS {
						?s kddef:status ?status.
					}
				}
			}
		''';
	];
	elmo:assertion [
		rdfs:label "De upload mag geen concepten of collecties zonder of met leeg rdfs:label bevatten.";
		elmo:assert-not '''
			prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
			prefix skos: <http://www.w3.org/2004/02/skos/core#>
			ASK {
				GRAPH container:ttlupdate {
					{
						?s rdf:type skos:Concept.
						FILTER NOT EXISTS {
							?s rdfs:label ?label.
						}
					}
					UNION
					{
						?s rdf:type skos:Collection.
						FILTER NOT EXISTS {
							?s rdfs:label ?label.
						}
					}
					UNION
					{
						?s rdf:type skos:Concept.
						?s rdfs:label ""^^xsd:string.
					}
					UNION
					{
						?s rdf:type skos:Collection.
						?s rdfs:label ""^^xsd:string.
					}
				}
			}
		''';
	];
	elmo:assertion [
		rdfs:label "De upload mag geen concepten of collecties zonder of met leeg skos:prefLabel bevatten.";
		elmo:assert-not '''
			prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
			prefix skos: <http://www.w3.org/2004/02/skos/core#>
			ASK {
				GRAPH container:ttlupdate {
					{
						?s rdf:type skos:Concept.
						FILTER NOT EXISTS {
							?s skos:prefLabel ?label.
						}
					}
					UNION
					{
						?s rdf:type skos:Collection.
						FILTER NOT EXISTS {
							?s skos:prefLabel ?label.
						}
					}
					UNION
					{
						?s rdf:type skos:Concept.
						?s skos:prefLabel ""^^xsd:string.
					}
					UNION
					{
						?s rdf:type skos:Collection.
						?s skos:prefLabel ""^^xsd:string.
					}
				}
			}
		''';
	];	
.

# Updatecontainer Excel
container:excelupdate a elmo:Container;
    elmo:contains stage:TaxBeheermenu;
    elmo:contains stage:TaxHeader;
    elmo:contains stage:TaxFooter;
    elmo:representation elmo:UploadRepresentation;
    elmo:translator elmo:TableExcelTranslator;
    rdfs:label "Upload een enkel Concept via Excel (.xls)";
    elmo:replaces container:generiek;
    elmo:query stage:TaxSpecifiekeUploadQuery;
	elmo:assertion [
		rdfs:label "De upload mag geen concepten met skos:inScheme bevatten.";
		elmo:assert '''
			prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
			prefix skos: <http://www.w3.org/2004/02/skos/core#>
			ASK {
				GRAPH container:excelupdate {
					?s rdf:type skos:Concept.
					FILTER NOT EXISTS {
						?s skos:inScheme ?dataset.
					}
				}
			}
		''';
	];
	elmo:assertion [
		rdfs:label "De upload mag geen concepten zonder kddef:status bevatten.";
		elmo:assert-not '''
			prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
			prefix skos: <http://www.w3.org/2004/02/skos/core#>
			prefix kddef: <http://kadaster.basisregistraties.overheid.nl/som/def#>
			ASK {
				GRAPH container:excelupdate {
					?s rdf:type skos:Concept.
					FILTER NOT EXISTS {
						?s kddef:status ?status.
					}
				}
			}
		''';
	];
	elmo:assertion [
		rdfs:label "De upload mag geen concepten of collecties zonder rdfs:label bevatten.";
		elmo:assert-not '''
			prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
			prefix skos: <http://www.w3.org/2004/02/skos/core#>
			ASK {
				GRAPH container:excelupdate {
					{
						?s rdf:type skos:Concept.
						FILTER NOT EXISTS {
							?s rdfs:label ?label.
						}
						FILTER(
							REGEX( str(?s), "/id/concept/[0-9a-zA-Z].*" )
						)
					}
					UNION
					{
						?s rdf:type skos:Collection.
						FILTER NOT EXISTS {
							?s rdfs:label ?label.
						}
						FILTER(
							REGEX( str(?s), "/id/collection/[0-9a-zA-Z].*" )
						)
					}
					UNION
					{
						?s rdf:type skos:Concept.
						?s rdfs:label ""^^xsd:string.
						FILTER(
							REGEX( str(?s), "/id/concept/[0-9a-zA-Z].*" )
						)
					}
					UNION
					{
						?s rdf:type skos:Collection.
						?s rdfs:label ""^^xsd:string.
						FILTER(
							REGEX( str(?s), "/id/collection/[0-9a-zA-Z].*" )
						)
					}
				}
			}
		''';
	];
	elmo:assertion [
		rdfs:label "De upload mag geen concepten of collecties zonder skos:prefLabel bevatten.";
		elmo:assert-not '''
			prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
			prefix skos: <http://www.w3.org/2004/02/skos/core#>
			ASK {
				GRAPH container:excelupdate {
					{
						?s rdf:type skos:Concept.
						FILTER NOT EXISTS {
							?s skos:prefLabel ?label.
						}
						FILTER(
							REGEX( str(?s), "/id/concept/[0-9a-zA-Z].*" )
						)
					}
					UNION
					{
						?s rdf:type skos:Collection.
						FILTER NOT EXISTS {
							?s skos:prefLabel ?label.
						}
						FILTER(
							REGEX( str(?s), "/id/collection/[0-9a-zA-Z].*" )
						)
					}
					UNION
					{
						?s rdf:type skos:Concept.
						?s skos:prefLabel ""^^xsd:string.
						FILTER(
							REGEX( str(?s), "/id/concept/[0-9a-zA-Z].*" )
						)
					}
					UNION
					{
						?s rdf:type skos:Collection.
						?s skos:prefLabel ""^^xsd:string.
						FILTER(
							REGEX( str(?s), "/id/collection/[0-9a-zA-Z].*" )
						)
					}
				}
			}
		''';
	];	
.

# PRODUCTIONS

# Production ttlupdate, label dataset en trap uploadquery af
updatestage:syncttlupdate a elmo:Production;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxFooter;
	elmo:queryForm stage:TaxSelectDataset;
	elmo:contains stage:TaxSpecifiekeUploadScene;
.

#FORMS

# Selecteer dataset 
stage:TaxSelectDataset a elmo:Form;
	rdfs:label "Selecteer dataset";
	elmo:index "1";
	elmo:fragment [
		elmo:applies-to "dataset";
		rdfs:label "Selecteer dataset"@nl;
		elmo:valuesFrom stage:search_datasets;
		elmo:constraint elmo:MandatoryConstraint;
		elmo:index "1";
	];
	elmo:fragment [
		elmo:applies-to "format";
		elmo:appearance elmo:HiddenAppearance;
		rdf:value "ttl";
	];
	elmo:fragment [
		elmo:appearance elmo:SubmitAppearance;
		rdfs:label "Ga verder"@nl;
		elmo:index "2";
	];
.

#PARTS

#Zoeken van datasets
stage:search_datasets a elmo:Part;
	elmo:appearance elmo:HiddenAppearance;
	elmo:query '''
		prefix dcat: <http://www.w3.org/ns/dcat#>
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dct: <http://purl.org/dc/terms/>
		
		CONSTRUCT {
			?dataset rdfs:label ?dataset_label
		}
		WHERE {
			GRAPH ?g {
				?dataset rdf:type skos:ConceptScheme.
				?dataset rdfs:label ?dataset_label.
				FILTER NOT EXISTS {
					?dataset prov:invalidatedAtTime ?time.
				}
			}
			GRAPH doc:mastergraph {
				?g dct:isVersionOf doc:mastergraph.
			}
		}
		ORDER BY DESC(?dataset_label)
	''';
.


# SCENES

# Standaardquery voor specifieke uploadcontainers
# Algoritme:
#
# - Verwijder voor de zekerheid de @CURRENTMOMENT@ GRAPH
# - Vul mastergraph aan met nieuwe versie
# - Voeg metadata toe aan nieuwe conceptengraph, activiteitengraph en actorengraph
# - Hash genereren, zodat we kunnen vergelijken of er iets gewijzigd is aan een concept
# - Update de aanpasdatum van de Catalogus, CatalogRecord en Dataset
# - Voeg in de nieuwe GRAPH de concepten toe die een andere hash dan de hash in de mastergraph hebben (d.w.z., die gewijzigd zijn)
# - Voeg voor de gewijzigde concepten in de oude GRAPH wat metadata toe (prov:invalidatedAtTime)
# - Verwijder de concepten uit de mastergraph die voorkomen in de nieuwe GRAPH (d.w.z. gewijzigd zijn)
# - Voeg een verwijzing toe in de mastergraph naar de nieuwe GRAPH voor de concepten die in de nieuwe GRAPH staan
# - Verwijder de (tijdelijke) graphs die gebruikt zijn door de uploadcontainers

#Specifieke uploadquery
stage:TaxSpecifiekeUploadScene a elmo:Scene;
	rdfs:label "Postquery inladen gegevens";
	elmo:index "2";
	elmo:query '''
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix skosxl: <http://www.w3.org/2008/05/skos-xl#>
		prefix dct: <http://purl.org/dc/terms/>
		prefix dctype: <http://purl.org/dc/dcmitype/>
		prefix bp4mc2: <http://bp4mc2.org/elmo/def/>
		prefix foaf: <http://xmlns.com/foaf/0.1/>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex#>
		prefix owl: <http://www.w3.org/2002/07/owl#>
		prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix loc: <http://pdok-ld-gck.in.kadaster.nl/id/>
		prefix versiongraph: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/@CURRENTMOMENT@>
		prefix usergraph: <http://pdok-ld-gck.in.kadaster.nl/>
		prefix dataset: <http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: <http://pdok-ld-gck.in.kadaster.nl/id/concept/>
		prefix activity: <http://pdok-ld-gck.in.kadaster.nl/id/concept/@CURRENTMOMENT@>
			
	
		DELETE {
			GRAPH versiongraph:version {
				?s?p?o
			}
		}
		WHERE {
            GRAPH versiongraph:version {
                ?s?p?o
            }
		}
		
		INSERT {
			GRAPH container:generiek {
				?s rdfs:label ?spreflabel.
			}
		}
		WHERE {
			GRAPH container:generiek {
				?s skos:prefLabel ?spreflabel. 
				FILTER NOT EXISTS {
					?s rdfs:label ?slabel.
				}
			}
		}
		
		INSERT {
			GRAPH doc:mastergraph {
				doc:mastergraph rdf:type void:Dataset.
				doc:mastergraph rdfs:label "Concepten".
				versiongraph:version dct:isVersionOf doc:mastergraph.
			}
		}
		
		INSERT {
			GRAPH versiongraph:version {
				dataset:concepten rdfs:isDefinedBy versiongraph:version.
				versiongraph:version rdfs:label "Concepten - tax-programma (publicatiedatum @CURRENTMOMENT@)".
				versiongraph:version prov:wasGeneratedBy activity:Upload.
				versiongraph:version rdf:type prov:Entity.
				versiongraph:version prov:generatedAtTime "@CURRENTMOMENT@".
				activity:Upload rdf:type prov:Activity.
				activity:Upload rdfs:label "Upload dataset @CURRENTMOMENT@".
				activity:Upload prov:startedAtTime "@CURRENTMOMENT@".
				activity:Upload prov:wasAssociatedWith concept:tomcatUser.
			}
		}
		
		INSERT {
			GRAPH usergraph:agents {
				concept:tomcatUser rdf:type prov:Agent.
				concept:tomcatUser rdfs:label "Tomcat User".
				concept:tomcatUser foaf:givenName "Tomcat User".
				concept:tomcatUser foaf:mbox "tomcat@user.org".
				concept:tomcatUser prov:actedOnBehalfOf "Apache".
			}
		}
		
		
		INSERT {
			GRAPH container:generiek {
				?s skos:inScheme <@DATASET@>.
			}
		}
		WHERE {
			GRAPH container:generiek {
				?s rdf:type ?type.
				FILTER (
					?type = skos:Concept
					|| ?type = skos:Collection
				)
			}
		}
		
		INSERT {
			GRAPH container:generiek {
				?s bp4mc2:signature ?sig.
			}
		}
		WHERE {
			SELECT DISTINCT ?s bif:md5(sql:group_concat(concat(?p,'=',?o),';')) as ?sig
			WHERE {
				GRAPH container:generiek {
					SELECT ?s ?p ?o
					WHERE {
						?s ?p ?o.
						?s rdf:type ?type.
						FILTER (
							?type = skos:Concept
							|| ?type = skos:Collection
							|| ?type = skoslex:Act
							|| ?type = skoslex:Norm
							|| ?type = skoslex:Object
							|| ?type = skoslex:Actor
							|| ?type = owl:Class
							|| ?type = dctype:Text
						)
					}
					ORDER BY ?s ?p ?o
				}
            }
		}
						
		INSERT {
			GRAPH versiongraph:version {
				?s ?p ?o
			}
		}
		WHERE {
			GRAPH container:generiek {
				?s rdf:type ?type.
			    ?s ?p ?o.
			    ?s bp4mc2:signature ?sig
				FILTER (
					?type = skos:Concept
					|| ?type = skos:Collection
					|| ?type = skoslex:Act
					|| ?type = skoslex:Norm
					|| ?type = skoslex:Object
					|| ?type = skoslex:Actor
					|| ?type = owl:Class
					|| ?type = dctype:Text
				)
			}
			FILTER NOT EXISTS {
				GRAPH doc:mastergraph {
					?s bp4mc2:signature ?sig
				}
			}
			FILTER NOT EXISTS {
				?s skos:inScheme ?o.
			}
		}
		
		INSERT {
			GRAPH ?g {
				?s prov:invalidatedAtTime "@CURRENTMOMENT@"
			}
		}
		WHERE {
			GRAPH doc:mastergraph {
				?s rdfs:isDefinedBy ?g
			}
			GRAPH versiongraph:version {
				?s rdf:type ?type.
				FILTER (
					?type = skos:Concept
					|| ?type = skos:Collection
					|| ?type = skoslex:Act
					|| ?type = skoslex:Norm
					|| ?type = skoslex:Object
					|| ?type = skoslex:Actor
					|| ?type = owl:Class
					|| ?type = dctype:Text
				)
			}
			FILTER NOT EXISTS {
				GRAPH ?g {
					?s prov:invalidatedAtTime ?time.
				}
			}
		}
		
		DELETE {
			GRAPH doc:mastergraph {
				?s rdfs:isDefinedBy ?versiongraph.
				?s bp4mc2:signature ?sig.
			}
		}
		WHERE {
			GRAPH doc:mastergraph {
				?s rdfs:isDefinedBy ?versiongraph.
				?s bp4mc2:signature ?sig.
			}
			GRAPH versiongraph:version {
				?s rdf:type ?type.
				FILTER (
					?type = skos:Concept
					|| ?type = skos:Collection
					|| ?type = skoslex:Act
					|| ?type = skoslex:Norm
					|| ?type = skoslex:Object
					|| ?type = skoslex:Actor
					|| ?type = owl:Class
					|| ?type = dctype:Text
				)
			}
		}

		INSERT {
			GRAPH doc:mastergraph {
				?s rdf:type ?type.
				?s rdfs:isDefinedBy versiongraph:version.
				?s bp4mc2:signature ?sig .
				?s skos:inScheme <@DATASET@>.
			}
		}
		WHERE {
			GRAPH versiongraph:version {
			    ?s rdf:type ?type.
			    ?s bp4mc2:signature ?sig.
				FILTER (
					?type = skos:Concept
					|| ?type = skos:Collection
					|| ?type = skoslex:Act
					|| ?type = skoslex:Norm
					|| ?type = skoslex:Object
					|| ?type = skoslex:Actor
					|| ?type = owl:Class
					|| ?type = dctype:Text
				)
            }
		}
		
		CLEAR GRAPH container:generiek		
		CLEAR GRAPH container:excelupdate		
		CLEAR GRAPH container:ttlupdate
	''';
. 
#
#
#
# BEHEER DATASETS
#
#
#



#
# CONTAINERS
#

# Uploadcontainer datasets
container:datasetupload a elmo:Container;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxFooter;
	elmo:representation elmo:UploadRepresentation;
	rdfs:label "Upload dataset-metadata via Turtle (.ttl)";
	elmo:query stage:TaxDatasetUploadScene;
	elmo:fragment [
		elmo:applies-to "model";
		rdfs:label "Selecteer model"@nl;
		elmo:constraint elmo:MandatoryConstraint;
		elmo:index "1";
	];
	elmo:assertion [
		rdfs:label "De upload mag geen datasets zonder dct:title bevatten.";
		elmo:assert-not '''
			prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
			prefix dct: <http://purl.org/dc/terms/>
			ASK {
				GRAPH container:datasetupload {
					?s rdf:type ?type.
					FILTER NOT EXISTS {
						?s dct:title ?title.
					}
				}
			}
		''';
	];
	elmo:assertion [
		rdfs:label "De upload mag geen datasets zonder skos:ConceptScheme bevatten.";
		elmo:assert-not '''
			prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
			prefix dcat: <http://www.w3.org/ns/dcat#>
			ASK {
				GRAPH container:datasetupload {
					?s rdf:type ?type.
					FILTER NOT EXISTS {
						?s rdf:type skos:ConceptScheme.
					}
				}
			}
		''';
	];
	elmo:assertion [
		rdfs:label "De upload mag geen datasets zonder dcat:Dataset bevatten.";
		elmo:assert-not '''
			prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
			prefix dcat: <http://www.w3.org/ns/dcat#>
			ASK {
				GRAPH container:datasetupload {
					?s rdf:type ?type.
					FILTER NOT EXISTS {
						?s rdf:type dcat:Dataset.
					}
				}
			}
		''';
	];
.

#
# SCENES
#

# Algoritme:
#
# - Verwijder voor de zekerheid de @CURRENTMOMENT@ GRAPH
# - Vul mastergraph aan met nieuwe versie
# - Voeg metadata toe aan nieuwe conceptengraph, activiteitengraph en actorengraph
# - Hash genereren, zodat we kunnen vergelijken of er iets gewijzigd is aan een concept
# - Voeg voor de verwijderde concepten in de oude GRAPH wat metadata toe (prov:invalidatedAtTime)
# - Verwijder de signature van de verwijderde concepten uit de mastergraph
# - Update de aanpasdatum van de Catalogus, CatalogRecord en Dataset
# - Voeg in de nieuwe GRAPH de concepten toe die een andere hash dan de hash in de mastergraph hebben (d.w.z., die gewijzigd zijn)
# - Voeg voor de gewijzigde concepten in de oude GRAPH wat metadata toe (prov:invalidatedAtTime)
# - Verwijder de concepten uit de mastergraph die voorkomen in de nieuwe GRAPH (d.w.z. gewijzigd zijn)
# - Voeg een verwijzing toe in de mastergraph naar de nieuwe GRAPH voor de concepten die in de nieuwe GRAPH staan
# - Verwijder de (tijdelijke) graphs die gebruikt zijn door de uploadcontainers

# Uploadquery datasets
stage:TaxDatasetUploadScene a elmo:Scene;
	rdfs:label "Postquery inladen dataset-metadata";
	elmo:index "1";
	elmo:query '''
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix skosxl: <http://www.w3.org/2008/05/skos-xl#>
		prefix dct: <http://purl.org/dc/terms/>
		prefix dctype: <http://purl.org/dc/dcmitype/>
		prefix bp4mc2: <http://bp4mc2.org/elmo/def/>
		prefix foaf: <http://xmlns.com/foaf/0.1/>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
		prefix owl: <http://www.w3.org/2002/07/owl#>
		prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix loc: <http://pdok-ld-gck.in.kadaster.nl/id/>
		prefix versiongraph: <http://pdok-ld-gck.in.kadaster.nl/datasets/doc/@CURRENTMOMENT@>
		prefix usergraph: <http://pdok-ld-gck.in.kadaster.nl/>
		prefix dataset: <http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix catalogus: <http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix activity: <http://pdok-ld-gck.in.kadaster.nl/id/dataset/@CURRENTMOMENT@>
		prefix xsd: <http://www.w3.org/2001/XMLSchema#>
		prefix iso: <http://id.loc.gov/vocabulary/iso639-1/>
		prefix dcat: <http://www.w3.org/ns/dcat#>
		prefix wdrs: <http://www.w3.org/2007/05/powder-s#>
			
		
		DELETE {
			GRAPH versiongraph:version {
				?s?p?o
			}
		}
		WHERE {
            GRAPH versiongraph:version {
                ?s?p?o
            }
		}
		
		INSERT {
			GRAPH container:datasetupload {
				?s rdfs:label ?slabel.
			} 
		}
		WHERE {
			GRAPH container:datasetupload {
				?s dct:title ?slabel.
				FILTER NOT EXISTS {
					?s rdfs:label ?slabel.
				}
			}
		}
		
		INSERT {
			GRAPH doc:mastergraph {
				doc:mastergraph rdf:type void:Dataset.
				doc:mastergraph rdfs:label "Concepten".
				versiongraph:version dct:isVersionOf doc:mastergraph.
			}
		}
		
		INSERT {
			GRAPH versiongraph:version {
				dataset:concepten rdfs:isDefinedBy versiongraph:version.
				versiongraph:version rdfs:label "Datasets en distributies - Tax-programma (publicatiedatum @CURRENTMOMENT@)".
				versiongraph:version prov:wasGeneratedBy activity:Upload.
				versiongraph:version rdf:type prov:Entity.
				versiongraph:version prov:generatedAtTime "@CURRENTMOMENT@".
				activity:Upload rdf:type prov:Activity.
				activity:Upload rdfs:label "Upload catalogus @CURRENTMOMENT@".
				activity:Upload prov:startedAtTime "@CURRENTMOMENT@".
				activity:Upload prov:wasAssociatedWith catalogus:tomcatUser.
			}
		}
		
		INSERT {
			GRAPH usergraph:agents {
				catalogus:tomcatUser rdf:type prov:Agent.
				catalogus:tomcatUser rdfs:label "Tomcat User".
				catalogus:tomcatUser foaf:givenName "Tomcat User".
				catalogus:tomcatUser foaf:mbox "tomcat@user.org".
				catalogus:tomcatUser prov:actedOnBehalfOf "Apache".
			}
		}
		
		INSERT {
			GRAPH container:datasetupload {
				?s wdrs:describedby <@MODEL@>
			}
		}
		WHERE {
			GRAPH container:datasetupload {
				?s rdf:type ?type.
				FILTER (
					?type = dcat:Dataset
					|| ?type = dcat:Distribution
				)
			}
		}
		
		INSERT {
			GRAPH container:datasetupload {
				?s bp4mc2:signature ?sig.
			}
		}
		WHERE {
			SELECT DISTINCT ?s bif:md5(sql:group_concat(concat(?p,'=',?o),';')) as ?sig
			WHERE {
				GRAPH container:datasetupload {
					SELECT ?s ?p ?o
					WHERE {
						?s ?p ?o.
						?s rdf:type ?type.
						FILTER (
							?type = dcat:Dataset
							|| ?type = dcat:Distribution
						)
					}
					ORDER BY ?s ?p ?o
				}
            }
		}
					
		INSERT {
			GRAPH versiongraph:version {
				?s ?p ?o
			}
		}
		WHERE {
			GRAPH container:datasetupload {
				?s rdf:type ?type.
			    ?s ?p ?o.
			    ?s bp4mc2:signature ?sig
				FILTER (
					?type = dcat:Dataset
					|| ?type = dcat:Distribution
				)
			}
			FILTER NOT EXISTS {
				GRAPH doc:mastergraph {
					?s bp4mc2:signature ?sig
				}
			}
		}
		
		INSERT {
			GRAPH ?g {
				?s prov:invalidatedAtTime "@CURRENTMOMENT@"
			}
		}
		WHERE {
			GRAPH doc:mastergraph {
				?s rdfs:isDefinedBy ?g
			}
			GRAPH versiongraph:version {
				?s rdf:type ?type.
				FILTER (
					?type = dcat:Dataset
					|| ?type = dcat:Distribution
				)
			}
			FILTER NOT EXISTS {
				GRAPH ?g {
					?s prov:invalidatedAtTime ?time.
				}
			}
		}
		
		DELETE {
			GRAPH doc:mastergraph {
				?s ?p ?o
			}
		}
		WHERE {
			GRAPH doc:mastergraph {
				?s ?p ?o
			}
			GRAPH versiongraph:version {
				?s rdf:type ?type.
				FILTER (
					?type = dcat:Dataset
					|| ?type = dcat:Distribution
				)
			}
		}

		INSERT {
			GRAPH doc:mastergraph {
				?s rdf:type ?type.
				?s rdfs:isDefinedBy versiongraph:version.
				?s bp4mc2:signature ?sig
			}
		}
		WHERE {
			GRAPH versiongraph:version {
			    ?s rdf:type ?type.
			    ?s bp4mc2:signature ?sig.
				FILTER (
					?type = dcat:Dataset
					|| ?type = dcat:Distribution
				)
            }
		}
		
		CLEAR GRAPH container:datasetupload
	''';
.
 
#
#
#
# BEHEER RELATIECONTROLE
#
#
#


#Hoofdpagina Relatiecontrole Rapportage
stage:TaxRelatiecontrole a elmo:Representation;
	elmo:url-pattern "/query/relatiecontrole$";
	elmo:contains stage:TaxHeader;
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxRelatieControleTabel;
	elmo:contains stage:TaxRelatiecontroleUitleg;
.

stage:TaxRelatiecontroleUitleg a elmo:Part;
	elmo:appearance elmo:HtmlAppearance;
	elmo:index "1";
	elmo:without-parameter "term";
	elmo:data [
		rdfs:label "Relatie controle";
		elmo:html '''
			<p>De lijst bevat alle subjecten die gerelateerd zijn aan een object, waar de omgekeerde relatie ontbreekt in de weergavetabel. De relatie kan wel voorkomen in de gerelateerde concepten.</p>
		''';
	]
.

# Weergave van gerelateerde (inkomende) concepten
stage:TaxRelatieControleTabel a elmo:Part;
	elmo:index "2";
	elmo:appearance elmo:TableAppearance;
	elmo:query stage:TaxRelatiecontroleQuery
.

#query toont alle triples <A skos:semanticRelation B>, waarvan de omgekeerde relatie niet bestaat
stage:TaxRelatiecontroleQuery a elmo:query;
	elmo:query '''
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix dct: <http://purl.org/dc/terms/>
		prefix thes: <http://purl.org/iso25964/skos-thes#>
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix dc: <http://purl.org/dc/terms/>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
		prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dataset: <http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: <http://pdok-ld-gck.in.kadaster.nl/id/concept/>
		prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>
		prefix bp4mc2: <http://bp4mc2.org/elmo/def/>
		prefix dcat: <http://www.w3.org/ns/dcat#>
		prefix owl: <http://www.w3.org/2002/07/owl#>
		
		SELECT DISTINCT ?Subject ?Subject_label ?Relatie ?Object ?Object_label
		WHERE {
  			{
                SELECT ?Subject ?Subject_label ?Object ?Object_label
                WHERE {
                    GRAPH ?sg {
                        ?Subject rdf:type skos:Concept.
                        ?Subject skos:semanticRelation ?Object.
                        OPTIONAL {
                            ?Subject rdfs:label ?Subject_label.
                            FILTER( LANG( ?Subject_label ) = "" || LANGMATCHES( LANG( ?Subject_label ), "nl" ) )
                        }
                        FILTER NOT EXISTS {
                            ?Subject prov:invalidatedAtTime ?time.
                        }
						FILTER NOT EXISTS {
							GRAPH ?og {
								?Object rdf:type skos:Concept.
								?Object skos:semanticRelation ?Subject.
								FILTER NOT EXISTS {
									?Object prov:invalidatedAtTime ?otime.
								}
							}
							GRAPH doc:mastergraph {
								?Object rdfs:isDefinedBy ?og.
							}
						}
                    }
					GRAPH ?og {
						?Object rdf:type skos:Concept.
						OPTIONAL {
							?Object rdfs:label ?Object_label.
							FILTER( LANG( ?Object_label ) = "" || LANGMATCHES( LANG( ?Object_label ), "nl" ) )
						}
						FILTER NOT EXISTS {
							?Object prov:invalidatedAtTime ?otime.
						}
					}
                    GRAPH doc:mastergraph {
                        ?Subject rdfs:isDefinedBy ?sg.
						?Object rdfs:isDefinedBy ?og.
                    }
                }
  			}
  			BIND( "Gerelateerd aan" AS ?Relatie )
		}
		ORDER BY ?Subject_label
	'''
. 
#
#
#
# CLEAR SINGLE CONCEPT
#
#
#

#
# PRODUCTIONS
#

# Speciale pagina om alle data over een enkel concept te wissen
# Deze backdoor moet zeer waarschijnlijk verwijderd worden uit de definitieve configuratie!
updatestage:clearsingleconcept a elmo:Production;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxFooter;
	elmo:contains stage:search_concepts;
	elmo:queryForm stage:TaxSelectConceptForm;
	elmo:contains stage:ClearSingleConceptScene;
.

# DummyForm nodig omdat anders de feedback vanuit de scenes niet getoond wordt
stage:TaxSelectConceptForm a elmo:Form;
	rdfs:label "Selecteer concept";
	elmo:index "1";
	elmo:fragment [
		elmo:applies-to "concept";
		rdfs:label "Selecteer concept"@nl;
		elmo:valuesFrom stage:search_concepts;
		elmo:constraint elmo:MandatoryConstraint;
		elmo:index "1";
	];
	elmo:fragment [
		elmo:appearance elmo:SubmitAppearance;
		rdfs:label "Ga verder"@nl;
		elmo:index "2";
	];
.

#
# PARTS
#

stage:search_concepts a elmo:Part;
	elmo:appearance elmo:HiddenAppearance;
	elmo:query '''
		prefix dcat: <http://www.w3.org/ns/dcat#>
		CONSTRUCT {
			?concept rdfs:label ?label
		}
		WHERE {
			GRAPH ?g {
				?concept rdf:type skos:Concept.
    			BIND( str(?concept) AS ?label )
			}
			FILTER regex(?g, "^http://pdok-ld-gck.in.kadaster.nl/(?!stage)")
		}
	''';
.


#
# SCENES
#

# Scene gebruikt voor het verwijderen van enkel concept
stage:ClearSingleConceptScene a elmo:Scene;
	elmo:index "1";
	rdfs:label "Verwijder enkel concept";
	elmo:query '''
		DELETE {
			GRAPH ?g {
				<@CONCEPT@> ?p ?o
			}
		}
		WHERE {
			GRAPH ?g {
				<@CONCEPT@> ?p ?o
			}
			FILTER regex(?g, "^http://pdok-ld-gck.in.kadaster.nl/(?!stage)")
		}
	'''
.
 
#
#
#
# CLEAR ALL DATA
#
#
#



#
# PRODUCTIONS
#

# Speciale pagina om alle gegevens te wissen
# Deze backdoor moet zeer waarschijnlijk verwijderd worden uit de definitieve configuratie!
updatestage:clearalldata a elmo:Production;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxFooter;
	elmo:queryForm stage:TaxDummyForm;
	elmo:contains stage:ClearAllDataScene;
.

# DummyForm nodig omdat anders de feedback vanuit de scenes niet getoond wordt
stage:TaxDummyForm a elmo:Form.


#
# SCENES
#

# Scene gebruikt voor het verwijderen van alle data
stage:ClearAllDataScene a elmo:Scene;
	elmo:index "1";
	rdfs:label "Verwijder alle data";
	elmo:query '''
		DELETE {
			GRAPH ?g {
				?s ?p ?o
			}
		}
		WHERE {
			GRAPH ?g {
				?s ?p ?o
			}
			FILTER regex(?g, "^http://pdok-ld-gck.in.kadaster.nl/(?!stage)")
		}
	'''
.

#
#
#
# CLEAR ALLE CONCEPTEN
#
#
#



#
# PRODUCTIONS
#

# Speciale pagina om alle concepten te wissen
# Deze backdoor moet zeer waarschijnlijk verwijderd worden uit de definitieve configuratie!
updatestage:clearalleconcepten a elmo:Production;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxFooter;
	elmo:queryForm stage:TaxDummyForm;
	elmo:contains stage:ClearAllConceptsScene;
.

# DummyForm nodig omdat anders de feedback vanuit de scenes niet getoond wordt
stage:TaxDummyForm a elmo:Form.


#
# SCENES
#

# Scene gebruikt voor het verwijderen van alle data
stage:ClearAllConceptsScene a elmo:Scene;
	elmo:index "1";
	rdfs:label "Verwijder alle concepten";
	elmo:query '''
		prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		DELETE {
			GRAPH ?g {
				?s ?p ?o
			}
		}
		WHERE {
			GRAPH ?g {
				?s ?p ?o ; rdf:type skos:Concept
			}
			FILTER regex(?g, "^http://pdok-ld-gck.in.kadaster.nl/(?!stage)")
		}
	'''
.
 
#
#
#
# BEHEER MISSING LINKS
#
#
#


#Hoofdpagina Missing Links Rapportage
stage:TaxMissingLinks a elmo:Representation;
	elmo:url-pattern "/query/missinglinks$";
	elmo:contains stage:TaxHeader;
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxMissingLinksUitleg;
	elmo:contains stage:TaxMissingLinksTabel;
.

stage:TaxMissingLinksUitleg a elmo:Part;
	elmo:appearance elmo:HtmlAppearance;
	elmo:index "1";
	elmo:without-parameter "term";
	elmo:data [
		rdfs:label "Missing Links";
		elmo:html '''
			<p>De lijst bestaat uit alle objecten waarvoor geldt dat een frame (meestal een begrip) een ontbrekende referentie bevat.</p>
		''';
	]
.

# Weergave van Missing Links
stage:TaxMissingLinksTabel a elmo:Part;
	elmo:appearance elmo:TableAppearance;
	elmo:index "2";
#	elmo:fragment [
#		rdfs:label "Populatie";					#Graph waarin het subject zit dat de fout veroorzaakt. Praktisch gezien is dit het begrippenkader van het begrip met de fout
#		elmo:applies-to "graph";
#	];
	elmo:fragment [
		rdfs:label "Type";						#het type van het subject â€“ vrijwel altijd zal dit 'begrip' zijn
		elmo:applies-to "klasse";
		elmo:appearance elmo:GlobalLink;
	];
	elmo:fragment [
		rdfs:label "Status Frame";				#de status van het subject met de fout
		elmo:applies-to "status";
		elmo:appearance elmo:GlobalLink;
	];
	elmo:fragment [
		rdfs:label "Foutieve frame";			#een link naar het foute subject â€“ vrijwel altijd dus een link naar het begrip met de fout 
		elmo:applies-to "Frame";
	];
	elmo:fragment [
		rdfs:label "Referentie";				#de relatie naar het foute object â€“ dwz "predicate" in <subject â€“ predicate â€“object>
		elmo:applies-to "link";
		elmo:appearance elmo:GlobalLink;
	];
	elmo:fragment [
		rdfs:label "Ontbrekende referentie";	#de referentie die ontbreekt, dwz "object" in <subject â€“ predicate â€“ object>
		elmo:applies-to "FrameRef";
	];
	elmo:fragment [
		rdfs:label "Reden ontbreken";			#de einddatum van een ontbrekende referentie, alleen gevuld als een object een prov:invalidatedAtTime label heeft
		elmo:applies-to "ActueelTot";
	];
	elmo:query stage:TaxMissingLinksQuery
.

#query om lijst op te halen met alle subjecten waarvoor geldt:
#	alle triples waarbij het object NIET bestaat, dwz <object - rdf:type - type> is geen geldige triple 
stage:TaxMissingLinksQuery a elmo:query;
	elmo:query '''
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix kddef: <http://kadaster.basisregistraties.overheid.nl/som/def#>
		prefix kdstat: <http://kadaster.basisregistraties.overheid.nl/id/status/>
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix owl: <http://www.w3.org/2002/07/owl#>
		prefix thes: <http://purl.org/iso25964/skos-thes#>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
		prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix dct: <http://purl.org/dc/terms/>
		
		SELECT 	#?graph ?graph_label
				?klasse
				?status ?status_label
				?Frame ?Frame_label
				?link ?link_label
				?FrameRef ?FrameRef_label
				?ActueelTot
		WHERE {
			{
				GRAPH ?mg		{
					?Frame rdf:type ?klasse.
					?Frame ?link ?FrameRef.
					?Frame kddef:status ?status.
					OPTIONAL {
						?FrameRef prov:invalidatedAtTime ?FrameRefInvalidated.
					}
					FILTER(
						?link =  thes:broaderGeneric
						|| ?link = thes:narrowerGeneric
						|| ?link = thes:broaderPartitive
						|| ?link = thes:narrowerPartitive
						|| ?link = skos:semanticRelation
						|| ?link = skos:closeMatch
						|| ?link = skos:exactMatch
						|| ?link = skos:relatedMatch
						|| ?link = skos:broadMatch
						|| ?link = skos:narrowMatch
						|| ?link = skoslex:actor
						|| ?link = skoslex:agent
						|| ?link = skoslex:object
						|| ?link = skos:member 
					)
					OPTIONAL {
						?Frame rdfs:label ?Frame_label.
						FILTER (lang(?Frame_label)="" || lang(?Frame_label)="nl")
					}
				#	OPTIONAL {
				#		?graph rdfs:label ?graph_label.
				#		FILTER (lang(?graph_label)="" || lang(?graph_label)="@LANG@")
				#	}
					FILTER NOT EXISTS {
                        ?Frame prov:invalidatedAtTime ?time.
					}
				}
				FILTER NOT EXISTS {																#filtert alle triples uit de selectie waar het object een rdf:type heeft 
					GRAPH ?frameRefGraph {
						?FrameRef rdf:type ?type .
						FILTER NOT EXISTS {
							?FrameRef prov:invalidatedAtTime ?frtime.
						}
					}
					GRAPH doc:mastergraph {
						?FrameRef rdfs:isDefinedBy ?frameRefGraph.
					}
				}
				OPTIONAL {
					GRAPH container:statusupload {
						?status rdfs:label ?status_label.
						FILTER (lang(?status_label)="" || lang(?status_label)="nl")
					}
				}
				GRAPH doc:mastergraph {
					?Frame rdfs:isDefinedBy ?mg.
				}
			}
			BIND( 
				IF (
					bound( ?FrameRefInvalidated ), 
					'beÃ«indigd', 
					'niet gedefinieerd') 
				AS ?ActueelTot
			)																							#als begrip beÃ«indigd is, label kolom 'beÃ«indigd', anders als 'niet gedefinieerd'
			BIND (
				IF(?link = skos:member,  "Lid van",
					IF(?link =	skos:semanticRelation,  "Heeft betrekking op",
						IF(?link =	thes:broaderGeneric,  "Is specialisatie van",
							IF(?link =	thes:narrowerGeneric,  "Is generalisatie van",
								IF(?link =	thes:broaderPartitive,  "Is onderdeel van",
									IF(?link =	thes:narrowerPartitive,  "Bestaat uit",
										IF(?link =	dct:source,  "Bronnen",
											IF(?link =	skoslex:actor,  "Heeft als actor",
												IF(?link =	skoslex:object,  "Heeft als object",
													IF(?link =	skoslex:agent,  "Heeft als agent",
														IF(?link =	skos:closeMatch,  "Is ongeveer hetzelfde als",
															IF(?link =	skos:exactMatch,  "Is hetzelfde als",
																IF(?link =	skos:relatedMatch,  "Zie ook ",
																	IF(?link =	skos:broadMatch,  "Breder dan",
																		IF(?link = skos:member, "Lid van",
																			IF(?link =	skos:narrowMatch,  "Enger dan", " "
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				) AS ?link_label
			) 
		}
		ORDER BY str(lcase(?Frame_label))
	'''
. 
#
#
#
# BEHEER STATUSCONTROLE
#
#
#


#Hoofdpagina Statuscontrole Rapportage
stage:TaxStatusControle a elmo:Representation;
	elmo:url-pattern "/query/statuscontrole$";
	elmo:contains stage:TaxHeader;
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxStatusControleTabel;
	elmo:contains stage:TaxStatusControleUitleg
.

stage:TaxStatusControleUitleg a elmo:Part;
	elmo:appearance elmo:HtmlAppearance;
	elmo:index "1";
	elmo:without-parameter "term";
	elmo:data [
		rdfs:label "Status controle";
		elmo:html '''
			<p>De lijst bevat alle concepten en hun huidige status.</p>
		''';
	]
.

# Weergave van statuscontrole
stage:TaxStatusControleTabel a elmo:Part;
	elmo:appearance elmo:TableAppearance;
	elmo:index "2";
	elmo:fragment [
		rdfs:label "Concept";
		elmo:applies-to "concept";
	];
	elmo:fragment [
		rdfs:label "Status";
		elmo:applies-to "status";
		elmo:appearance elmo:GlobalLink;
	];
	elmo:query stage:TaxStatusControleQuery
.

#query voor het ophalen van alle geldige subjecten en de bijbehorende actuele status 
stage:TaxStatusControleQuery a elmo:query;
	elmo:query '''
		prefix prov: 		<http://www.w3.org/ns/prov#>
		prefix skoslex: 	<http://bp4mc2.org/def/skos-lex/>
		prefix container: 	<http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: 		<http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dataset: 	<http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: 	<http://pdok-ld-gck.in.kadaster.nl/id/concept/>
		prefix kddef:		<http://kadaster.basisregistraties.overheid.nl/som/def#>
		prefix kdstat:		<http://kadaster.basisregistraties.overheid.nl/id/status/>
		
		SELECT ?concept ?concept_label ?status ?status_label
		WHERE {
			GRAPH ?g {
				{
					?concept rdf:type skos:Concept.
					?concept rdfs:label ?concept_label.
					?concept kddef:status ?status.
				#	?status rdfs:label ?status_label.
				}
				UNION
				{
					?concept rdf:type skos:Concept.
					?concept skos:altLabel ?concept_label.
					?concept kddef:status ?status.
				#	?status rdfs:label ?status_label.
				}
				FILTER NOT EXISTS {
					?concept prov:invalidatedAtTime ?time.
				}
				FILTER( LANG( ?concept_label ) = "" || LANGMATCHES( LANG( ?concept_label ), "nl" ) )
			
			}
			OPTIONAL {
				GRAPH container:statusupload {
					?status rdfs:label ?status_label.
					FILTER (lang(?status_label)="" || lang(?status_label)="nl")
				}
			}
			GRAPH doc:mastergraph {
				?concept rdfs:isDefinedBy ?g
			}
		}
		ORDER BY ?status_label
	'''
. 
#
#
#
# BEHEER STATUS
#
#
#
# CONTAINER
#

#Upload statuscontainer 
container:statusupload a elmo:Container;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxFooter;
	elmo:representation elmo:UploadRepresentation;
	rdfs:label "Upload status via RDF (.xml) of Turtle (.ttl)";
.

 
#
#
#
# ADD NEW MODEL
#
#
#

#
# PRODUCTIONS
#

# Speciale pagina om nieuw model toe te voegen
updatestage:addnewmodel a elmo:Production;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxFooter;
	elmo:queryForm stage:TaxNameForm;
	elmo:contains stage:AddNewModelScene;
.

#
# FORMS
#

stage:TaxNameForm a elmo:Form;
	rdfs:label "Voeg model toe";
    elmo:fragment [
        elmo:applies-to "name";
        rdfs:label "Naam model"@nl;
        rdfs:label "Model name"@en;
        elmo:constraint elmo:MandatoryConstraint;
        elmo:index "1";
    ];
    elmo:fragment [
        elmo:appearance elmo:SubmitAppearance;
        rdfs:label "Voeg toe"@nl;
        elmo:index "2";
    ]
.


#
# SCENES
#

# Scene gebruikt voor het verwijderen van alle data
stage:AddNewModelScene a elmo:Scene;
	elmo:index "1";
	rdfs:label "Naam toevoegen";
	elmo:query '''
		INSERT {
			GRAPH ?graph {
				?graph rdf:type owl:Ontology.
				?graph rdfs:label ?label.
			}
		}
		WHERE {
			BIND( REPLACE( "@NAME@", "[^A-Za-z0-9-_]", "" ) AS ?label )
			BIND( IRI( CONCAT( "http://pdok-ld-gck.in.kadaster.nl/def/", REPLACE( "@NAME@", "[^A-Za-z0-9-_]", "" ) ) ) AS ?graph )
		}
	'''
.
 

#
# PAGINA'S (REPRESENTATIONS)
#

# Weergavepagina inclusief versies en grafische weergave
stage:WeergavePaginaConcepten a elmo:Representation;
	elmo:contains stage:TaxMenu;
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxIndexConcepten;
	elmo:contains stage:WeergaveTabelConcepten;
	elmo:contains stage:WeergaveTabelGerelateerdeConcepten;
	elmo:contains stage:GlossaryConcepten;
	elmo:applies-to [ rdf:type skos:Concept ];
	elmo:uri-pattern "/id/concept/";
.

#
# HERBRUIKBARE PAGINA-ONDERDELEN (PARTS)
#

# Algemene tabelweergave
stage:WeergaveTabelConcepten a elmo:Part;
	elmo:appearance elmo:ContentAppearance;
	elmo:index "01";
	elmo:fragment [
		elmo:applies-to rdfs:label;
		elmo:appearance elmo:HiddenAppearance
	];
	elmo:fragment [
		rdfs:label "Naam"@nl;
		elmo:applies-to skos:prefLabel;
		elmo:index "00";
	];
	elmo:fragment [
		rdfs:label "Uitleg"@nl;
		elmo:applies-to rdfs:comment;
		elmo:index "02";
	];
	elmo:fragment [
		rdfs:label "Formele definitie"@nl;
		elmo:applies-to skos:definition;
		elmo:index "03";
		xhtml:glossary stage:GlossaryConcepten;
	];
	elmo:fragment [
		rdfs:label "Toelichting"@nl;
		elmo:applies-to skos:scopeNote;
		elmo:index "04";
	];
	elmo:fragment [ 
		rdfs:label "Bronnen"@nl;
		elmo:applies-to dc:source;
		elmo:appearance elmo:GlobalLink;
		elmo:index "05";
	];
	elmo:fragment [
		rdfs:label "Commentaar"@nl;
		elmo:applies-to skos:comment;
		elmo:index "07";
	];
	elmo:fragment [
		rdfs:label "Actor"@nl;
		elmo:applies-to skoslex:actor;
		elmo:index "08";
	];
	elmo:fragment [
		rdfs:label "Agent"@nl;
		elmo:applies-to skoslex:agent;
		elmo:index "09";
	];
	elmo:fragment [
		rdfs:label "Object"@nl;
		elmo:applies-to skoslex:object;
		elmo:index "10";
	];
	elmo:fragment [
		rdfs:label "Lid van"@nl;
		elmo:applies-to skos:member;
		elmo:index "11";
	];
	elmo:fragment [ 
		rdfs:label "Specialisatie van"@nl;
		elmo:applies-to thes:broaderGeneric;
		elmo:index "12";
	];
	elmo:fragment [
		rdfs:label "Generalisatie van"@nl;
		elmo:applies-to thes:narrowerGeneric;
		elmo:index "13";
	];
	elmo:fragment [ 
		rdfs:label "Onderdeel van"@nl;
		elmo:applies-to thes:broaderPartitive;
		elmo:index "14";
	];
	elmo:fragment [
		rdfs:label "Bestaat uit"@nl;
		elmo:applies-to thes:narrowerPartitive;
		elmo:index "15";
	];
	elmo:fragment [
		rdfs:label "Gerelateerd aan"@nl;
		elmo:applies-to skos:semanticRelation;
		elmo:index "16";
	];
	
	elmo:fragment [
		rdfs:label "Ongeveer hetzelfde als"@nl;
		elmo:applies-to skos:closeMatch;
		elmo:index "21";
	];
	elmo:fragment [
		rdfs:label "Hetzelfde als"@nl;
		elmo:applies-to skos:exactMatch;
		elmo:index "22";
	];		
	elmo:fragment [
		rdfs:label "Zie ook"@nl;
		elmo:applies-to skos:relatedMatch;
		elmo:index "23";
	];
	elmo:fragment [
		rdfs:label "Breder dan"@nl;
		elmo:applies-to skos:broadMatch;
		elmo:index "24";
	];
	elmo:fragment [
		rdfs:label "Enger dan"@nl;
		elmo:applies-to skos:narrowMatch;
		elmo:index "25";
	];
	elmo:fragment [
		rdfs:label "Synoniemen"@nl;
		elmo:applies-to skos:altLabel;
		elmo:index "29";
	];
	elmo:fragment [
		rdfs:label "Domein"@nl;
		elmo:applies-to skos:inScheme;
		elmo:index "30";
	];
		elmo:fragment [
		rdfs:label "Bronnen"@nl;
		elmo:applies-to rdfs:literal;
		elmo:index "06";
	];
	elmo:query stage:WeergaveTabelConceptenQuery;
.

# Weergave van gerelateerde (inkomende) concepten
stage:WeergaveTabelGerelateerdeConcepten a elmo:Part;
	elmo:appearance elmo:ContentAppearance;
	elmo:fragment [
		elmo:applies-to rdfs:label;
		elmo:appearance elmo:HiddenAppearance
	];
	elmo:fragment [ 
		rdfs:label "Heeft als specialisatie"@nl;
		elmo:applies-to thes:broaderGeneric;
		elmo:index "07";
	];
	elmo:fragment [
		rdfs:label "Heeft als generalisatie"@nl;
		elmo:applies-to thes:narrowerGeneric;
		elmo:index "08";
	];
	elmo:fragment [ 
		rdfs:label "Heeft als onderdeel"@nl;
		elmo:applies-to thes:broaderPartitive;
		elmo:index "09";
	];
	elmo:fragment [
		rdfs:label "Is onderdeel van"@nl;
		elmo:applies-to thes:narrowerPartitive;
		elmo:index "10";
	];
	elmo:fragment [
		rdfs:label "Is gerelateerd aan"@nl;
		elmo:applies-to skos:semanticRelation;
		elmo:index "11";
	];
	elmo:fragment [
		rdfs:label "Is ongeveer hetzelfde als"@nl;
		elmo:applies-to skos:closeMatch;
		elmo:index "21";
	];
	elmo:fragment [
		rdfs:label "Is hetzelfde als"@nl;
		elmo:applies-to skos:exactMatch;
		elmo:index "22";
	];		
	elmo:fragment [
		rdfs:label "Zie ook"@nl;
		elmo:applies-to skos:relatedMatch;
		elmo:index "23";
	];
	elmo:fragment [
		rdfs:label "Is breder dan"@nl;
		elmo:applies-to skos:broadMatch;
		elmo:index "24";
	];
	elmo:fragment [
		rdfs:label "Is enger dan"@nl;
		elmo:applies-to skos:narrowMatch;
		elmo:index "25";
	];
	elmo:fragment [
		rdfs:label "Is actor van"@nl;
		elmo:applies-to skoslex:actor;
		elmo:index "26";
	];
	elmo:fragment [
		rdfs:label "Is agent van"@nl;
		elmo:applies-to skoslex:agent;
		elmo:index "27";
	];
	elmo:fragment [
		rdfs:label "Is object van"@nl;
		elmo:applies-to skoslex:object;
		elmo:index "28";
	];
	elmo:query stage:WeergaveTabelGerelateerdeConceptenQuery;
.

#
# QUERY'S VOOR PAGINA'S/PARTS
#

# Query voor WeergaveTabel
stage:WeergaveTabelConceptenQuery a elmo:Query;
	elmo:query '''
		PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
		PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
		PREFIX skoslex: <http://bp4mc2.org/def/skos-lex/>
		PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		PREFIX doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		PREFIX dct: <http://purl.org/dc/terms/>
		PREFIX prov: <http://www.w3.org/ns/prov#>
		PREFIX kddef: <http://kadaster.basisregistraties.overheid.nl/som/def#>
		PREFIX kdstat: <http://kadaster.basisregistraties.overheid.nl/id/status/>
		PREFIX thes: <http://purl.org/iso25964/skos-thes#>
		prefix dc: <http://purl.org/dc/elements/1.1/>

		CONSTRUCT {
			<@SUBJECT@> ?p ?o.
			<@SUBJECT@> rdfs:label ?slabel.
			<@SUBJECT@> skos:prefLabel ?spreflabel.
			<@SUBJECT@> dc:source ?source.
			?source rdfs:label ?bronLabel.
			?o rdfs:label ?olabel.
			<@SUBJECT@> skos:member ?col.
			?col rdfs:label ?col_label.
			<@SUBJECT@> skos:inScheme ?dataset.
			?dataset rdfs:label ?datasetlabel.
		}
		WHERE {
			{
				GRAPH ?g {
					<@SUBJECT@> ?p ?o.
					<@SUBJECT@> rdf:type skos:Concept.
					OPTIONAL {
						<@SUBJECT@> dc:source ?bronURI.
						GRAPH ?bronGraph {
							?bronURI dct:source ?linksource;
								rdfs:label ?bronLabel.
						}
						GRAPH doc:mastergraph {
							?bronURI rdfs:isDefinedBy ?bronGraph.
						}
					}
					OPTIONAL {
						<@SUBJECT@> dc:source ?textsource;
							rdfs:label ?bronLabel.
					}
					BIND(
						IF( BOUND( ?linksource ), ?linksource, ?textsource ) AS ?source						
					)
					OPTIONAL {
						<@SUBJECT@> rdfs:label ?slabel.
						FILTER( LANG( ?slabel ) = "" || LANGMATCHES( LANG( ?slabel ), "nl" ) )
					}
					OPTIONAL {
						<@SUBJECT@> skos:prefLabel ?spreflabel.
						FILTER( LANG( ?spreflabel ) = "" || LANGMATCHES( LANG( ?spreflabel ), "nl" ) )
					}
					FILTER NOT EXISTS {
						<@SUBJECT@> prov:invalidatedAtTime ?stime.
					}
					FILTER( ?p != dc:source )
				}
				GRAPH doc:mastergraph {
					<@SUBJECT@> rdfs:isDefinedBy ?g.
					<@SUBJECT@> skos:inScheme ?dataset.
				}
				GRAPH ?dsg {
					?dataset rdfs:label ?datasetlabel. 
				}
				GRAPH doc:mastergraph {
					?dataset rdfs:isDefinedBy ?dsg.
				}
				FILTER (
					?p = rdfs:comment
					|| ?p = skos:definition
					|| ?p = skos:scopeNote
					|| ?p = dc:source
					|| ?p = skos:comment
					|| ?p = skos:member
					|| ?p = skoslex:actor
					|| ?p = skoslex:agent
					|| ?p = skoslex:object
					|| ?p = thes:broaderGeneric
					|| ?p = thes:narrowerGeneric
					|| ?p = thes:broaderPartitive
					|| ?p = thes:narrowerPartitive
					|| ?p = skos:semanticRelation
					|| ?p = skos:closeMatch
					|| ?p = skos:exactMatch
					|| ?p = skos:relatedMatch
					|| ?p = skos:broadMatch
					|| ?p = skos:narrowMatch
					|| ?p = skos:altLabel
					|| ?p = skos:inScheme
					|| ?p = rdfs:literal
				)
				FILTER( substr("@GRAPH@",2) = "GRAPH@")
			}
			UNION
			{
				GRAPH <@GRAPH@> {
					<@SUBJECT@> ?p ?o.
					<@SUBJECT@> rdf:type skos:Concept.
					OPTIONAL {
						<@SUBJECT@> rdfs:label ?slabel.
						FILTER( LANG( ?slabel ) = "" || LANGMATCHES( LANG( ?slabel ), "nl" ) )
					}
					OPTIONAL {
						<@SUBJECT@> skos:prefLabel ?spreflabel.
						FILTER( LANG( ?spreflabel ) = "" || LANGMATCHES( LANG( ?spreflabel ), "nl" ) )
					}
					FILTER NOT EXISTS {
						<@SUBJECT@> prov:invalidatedAtTime ?stime.
					}
				}
				FILTER (
					?p = rdfs:comment
					|| ?p = skos:definition
					|| ?p = skos:scopeNote
					|| ?p = dc:source
					|| ?p = skos:comment
					|| ?p = skos:member
					|| ?p = skoslex:actor
					|| ?p = skoslex:agent
					|| ?p = skoslex:object
					|| ?p = thes:broaderGeneric
					|| ?p = thes:narrowerGeneric
					|| ?p = thes:broaderPartitive
					|| ?p = thes:narrowerPartitive
					|| ?p = skos:semanticRelation
					|| ?p = skos:closeMatch
					|| ?p = skos:exactMatch
					|| ?p = skos:relatedMatch
					|| ?p = skos:broadMatch
					|| ?p = skos:narrowMatch
					|| ?p = skos:altLabel	
					|| ?p = skos:inScheme
					|| ?p = rdfs:literal
				)
				FILTER ( substr("@GRAPH@",2) != "GRAPH@" )
			}
			OPTIONAL {
				?o rdfs:label ?olabel. 
				FILTER( LANG( ?olabel ) = "" || LANGMATCHES( LANG( ?olabel ), "nl" ) )
			}
			OPTIONAL {
				GRAPH ?cg {
					?col skos:member <@SUBJECT@>.
					?col rdfs:label ?col_label.
					FILTER NOT EXISTS {
						?col prov:invalidatedAtTime ?ctime.
					}
				}
				GRAPH doc:mastergraph {
					?col rdfs:isDefinedBy ?cg.
				}
			}
			OPTIONAL {
				GRAPH ?og {
					?o rdf:type ?otype.
					OPTIONAL {
						?o kddef:status ?ostatus.
					}
					FILTER NOT EXISTS {
						?o prov:invalidatedAtTime ?otime.
					}
				}
				GRAPH doc:mastergraph {
					?o rdfs:isDefinedBy ?og.
				}
			}
			FILTER(
				!isIRI( ?o )
				||
				(
					BOUND( ?otype )
					&&
					(
						?otype != skos:Concept
						||
						(
							BOUND( ?ostatus )
							&& (
								?ostatus = kdstat:Gevalideerd
								|| ?ostatus = kdstat:Geverifieerd
							)
						)
					)
				)
			)
		}
	'''
.

# Query voor Gerelateerde Concepten WeergaveTabel
stage:WeergaveTabelGerelateerdeConceptenQuery a elmo:Query;
	elmo:query '''
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix dct: <http://purl.org/dc/terms/>
		prefix thes: <http://purl.org/iso25964/skos-thes#>
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix dc: <http://purl.org/dc/terms/>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
		prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dataset: <http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: <http://pdok-ld-gck.in.kadaster.nl/id/concept/>
		prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>
		prefix bp4mc2: <http://bp4mc2.org/elmo/def/>
		prefix dcat: <http://www.w3.org/ns/dcat#>
		prefix kddef: <http://kadaster.basisregistraties.overheid.nl/som/def#>
		prefix kdstat: <http://kadaster.basisregistraties.overheid.nl/id/status/>
		
		CONSTRUCT {
			<@SUBJECT@> ?p ?s.
			<@SUBJECT@> rdfs:label "Gerelateerde concepten".
			?s rdfs:label ?s_label.
		}
		WHERE {
			GRAPH ?g {
				?s ?p <@SUBJECT@>.
				?s kddef:status ?status.
				OPTIONAL {
					?s rdfs:label ?s_label.
					FILTER( LANG( ?s_label ) = "" || LANGMATCHES( LANG( ?s_label ), "nl" ) )
				}
				FILTER NOT EXISTS {
					?s prov:invalidatedAtTime ?time.
				}
				FILTER (
					?status = kdstat:Gevalideerd ||
					?status = kdstat:Geverifieerd
				)
			}
			GRAPH doc:mastergraph {
				?s rdfs:isDefinedBy ?g.
			}
		}
	'''
.

# Glossary
stage:GlossaryConcepten elmo:appearance elmo:HiddenAppearance;
	elmo:query '''
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix dct: <http://purl.org/dc/terms/>
		prefix thes: <http://purl.org/iso25964/skos-thes#>
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix dc: <http://purl.org/dc/terms/>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
		prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dataset: <http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: <http://pdok-ld-gck.in.kadaster.nl/id/concept/>
		prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>
		prefix bp4mc2: <http://bp4mc2.org/elmo/def/>
		prefix dcat: <http://www.w3.org/ns/dcat#>
		prefix elmo: <http://bp4mc2.org/elmo/def#>
				
		CONSTRUCT {
			?concept elmo:name ?concept_label
		}
		WHERE {
			SELECT * 
				WHERE {
					{
					GRAPH ?g {
						?concept rdf:type skos:Concept.
						?concept skos:prefLabel ?concept_label.
						?concept skos:inScheme ?scheme.
						FILTER NOT EXISTS {
							?concept prov:invalidatedAtTime ?time.
						}
						FILTER( ?concept != <@SUBJECT@> )
					}
					GRAPH ?sg {
						<@SUBJECT@> skos:inScheme ?scheme.
						<@SUBJECT@> ?p ?concept.
					}
					GRAPH doc:mastergraph {
						?concept rdfs:isDefinedBy ?g.
						<@SUBJECT@> rdfs:isDefinedBy ?sg.
					}
					FILTER( substr("@GRAPH@",2) = "GRAPH@" )
				}
				UNION {
					GRAPH <@GRAPH@> {
						?concept rdf:type skos:Concept.
						?concept skos:prefLabel ?concept_label.
						?concept skos:inScheme ?scheme.
						FILTER( ?concept != <@SUBJECT@> )
					}
					GRAPH ?sg {
						<@SUBJECT@> skos:inScheme ?scheme.
						<@SUBJECT@> ?p ?concept.
					}
					GRAPH doc:mastergraph {
						<@SUBJECT@> rdfs:isDefinedBy ?sg.
					}
					FILTER( substr("@GRAPH@",2) != "GRAPH@" )
				}
				FILTER( LANG( ?concept_label ) = "" || LANGMATCHES( LANG( ?concept_label ), "nl" ) )
			} 
		}
	''';
. 


#
# PAGINA'S (REPRESENTATIONS)
#

# Weergavepagina inclusief versies en grafische weergave
stage:WeergavePaginaMetadataConcepten a elmo:Representation;
	elmo:layer elmo:TopLayer;
	elmo:contains stage:TaxMenu;
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxIndexConcepten;
	elmo:contains stage:WeergaveTabelMetadata;
	elmo:contains stage:WeergaveVersiesConcepten;
	elmo:url-pattern "query/metadata";
.

#
# HERBRUIKBARE PAGINA-ONDERDELEN (PARTS)
#

# Algemene tabelweergave
stage:WeergaveTabelMetadata a elmo:Part;
	elmo:index "02";
	elmo:fragment [
		elmo:applies-to rdfs:label;
		elmo:appearance elmo:HiddenAppearance
	];
	elmo:fragment [
		rdfs:label "Gedefinieerd in"@nl;
		elmo:applies-to rdfs:isDefinedBy;
		elmo:index "01";
	];
	elmo:fragment [
		rdfs:label "Domein"@nl;
		elmo:applies-to skos:inScheme;
		elmo:index "02";
	];
	elmo:fragment [
		rdfs:label "Startdatum versie"@nl;
		elmo:applies-to prov:generatedAtTime;
		elmo:index "13";
	];
	elmo:fragment [
		rdfs:label "Einddatum versie"@nl;
		elmo:applies-to prov:invalidatedAtTime;
		elmo:index "14";
	];
	elmo:fragment [
		rdfs:label "Laatste activiteit"@nl;
		elmo:applies-to prov:wasGeneratedBy;
		elmo:index "15";
	];
	elmo:fragment [
		rdfs:label "Periode geldigheid"@nl;
		elmo:applies-to dct:valid;
		elmo:index "17";
	];
	elmo:fragment [
		rdfs:label "Is gerealiseerd in"@nl;
		elmo:applies-to foaf:focus;
		elmo:index "18";
	];
	elmo:fragment [
		rdfs:label "Heeft als actor"@nl;
		elmo:applies-to skoslex:Actor;
		elmo:index "19";
	];
	elmo:fragment [
		rdfs:label "Heeft als object"@nl;
		elmo:applies-to skoslex:Object;
		elmo:index "20";
	];
	elmo:fragment [
		rdfs:label "Startdatum"@nl;
		elmo:applies-to prov:startedAtTime;
		elmo:index "27";
	];
	elmo:fragment [
		rdfs:label "Einddatum"@nl;
		elmo:applies-to prov:endedAtTime;
		elmo:index "28";
	];
	elmo:fragment [
		rdfs:label "Uitgevoerd door"@nl;
		elmo:applies-to prov:wasAssociatedWith;
		elmo:index "29";
	];
	elmo:fragment [
		rdfs:label "Namens organisatie"@nl;
		elmo:applies-to prov:actedOnBehalfOf;
		elmo:index "32";
	];
	elmo:query stage:WeergaveTabelMetadataQuery;
.

# Tabel met vorige versies
stage:WeergaveVersiesConcepten a elmo:Part;
	elmo:appearance elmo:ShortTableAppearance;
	elmo:index "90";
	elmo:fragment [
		elmo:applies-to "graph";
		elmo:name "graph";
		elmo:appearance elmo:HiddenAppearance;
	];
	elmo:fragment [
		elmo:applies-to "concept";
		rdfs:label "Andere versies";
		xhtml:link "/query/versie"
	];
	elmo:fragment [
		elmo:applies-to "actueeltot";
		rdfs:label "Actueel tot";
	];
	elmo:fragment [
		elmo:applies-to "slabel";
		elmo:appearance elmo:HiddenAppearance
	];
	elmo:fragment [
		elmo:applies-to "graphlabel";
		rdfs:label "Datum versie"@nl;
	];
	
	elmo:query stage:WeergaveVersiesConceptenQuery;
.

#
# QUERY'S VOOR PAGINA'S/PARTS
#

# Query voor WeergaveTabel
stage:WeergaveTabelMetadataQuery a elmo:Query;
	elmo:query '''
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix dct: <http://purl.org/dc/terms/>
		prefix thes: <http://purl.org/iso25964/skos-thes#>
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix dc: <http://purl.org/dc/terms/>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
		prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dataset: <http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: <http://pdok-ld-gck.in.kadaster.nl/id/concept/>
		prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>
		prefix bp4mc2: <http://bp4mc2.org/elmo/def/>
		prefix dcat: <http://www.w3.org/ns/dcat#>
		
		construct {
			<@SUBJECT@> ?p ?o.
			?o rdfs:label ?olabel.
			?col rdfs:label ?col_label.
			<@SUBJECT@> prov:wasGeneratedBy ?a.
			<@SUBJECT@> prov:generatedAtTime ?t.
			?a rdfs:label ?alabel.
			?s rdfs:label ?slabel.
		}
		WHERE {
			{
				GRAPH ?g {
					<@SUBJECT@> ?p ?o.
					<@SUBJECT@> rdf:type skos:Concept.
					?g prov:wasGeneratedBy ?a.
					?g prov:generatedAtTime ?t.
				}
				GRAPH doc:mastergraph {
					<@SUBJECT@> rdfs:isDefinedBy ?g
				}
				FILTER (
					?p = prov:generatedAtTime
					|| ?p = prov:invalidatedAtTime
					|| ?p = prov:wasGeneratedBy
					|| ?p = dct:valid
					|| ?p = foaf:focus
					|| ?p = skoslex:Actor
					|| ?p = skoslex:Object
					|| ?p = prov:startedAtTime
					|| ?p = prov:endedAtTime
					|| ?p = prov:wasAssociatedWith
					|| ?p = prov:actedOnBehalfOf
					|| ?p = rdfs:label
					|| ?p = skos:inScheme
					|| ?p = rdfs:isDefinedBy
				)
				FILTER( substr("@GRAPH@",2) = "GRAPH@")
			}
			UNION
			{
				GRAPH <@GRAPH@> {
					<@SUBJECT@> ?p ?o.
					<@SUBJECT@> rdf:type skos:Concept.
					<@GRAPH@> prov:wasGeneratedBy ?a.
					<@GRAPH@> prov:generatedAtTime ?t.
				}
				FILTER (
					?p = prov:generatedAtTime
					|| ?p = prov:invalidatedAtTime
					|| ?p = prov:wasGeneratedBy
					|| ?p = dct:valid
					|| ?p = foaf:focus
					|| ?p = skoslex:Actor
					|| ?p = skoslex:Object
					|| ?p = prov:startedAtTime
					|| ?p = prov:endedAtTime
					|| ?p = prov:wasAssociatedWith
					|| ?p = prov:actedOnBehalfOf
					|| ?p = rdfs:label
					|| ?p = skos:inScheme
					|| ?p = rdfs:isDefinedBy
				)
				FILTER ( substr("@GRAPH@",2) != "GRAPH@" )
			}
			OPTIONAL {
				?o rdfs:label ?olabel.
			}
			OPTIONAL {
				?a rdfs:label ?alabel.
			}
		}
	'''
.

# Query voor weergave versies
stage:WeergaveVersiesConceptenQuery a elmo:Query;
	elmo:query '''
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix dc: <http://purl.org/dc/terms/>
		prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dataset: <http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: <http://pdok-ld-gck.in.kadaster.nl/id/concept/>
		prefix skos: <http://www.w3.org/2004/02/skos/core#>

		SELECT DISTINCT (<@SUBJECT@> as ?concept) ?concept_label ?graph ?actueeltot
		WHERE {
			{
				GRAPH ?graph {
					<@SUBJECT@> rdf:type skos:Concept.
					?graph prov:generatedAtTime ?concept_label.
					OPTIONAL {
						<@SUBJECT@> prov:invalidatedAtTime ?actueeltot.
					}
				}
				GRAPH doc:mastergraph {
					<@SUBJECT@> rdfs:isDefinedBy ?actualGraph.
					?graph dc:isVersionOf doc:mastergraph
				}	
				FILTER( ?graph != ?actualGraph )
				FILTER( substr("@GRAPH@",2) = "GRAPH@" )
			}
			UNION {
				GRAPH ?graph {
					<@SUBJECT@> rdf:type skos:Concept.
					?graph prov:generatedAtTime ?concept_label.
					OPTIONAL {
						<@SUBJECT@> prov:invalidatedAtTime ?actueeltot.
					}
				}
				GRAPH doc:mastergraph {
					?graph dc:isVersionOf doc:mastergraph
				}	
				FILTER( ?graph != <@GRAPH@> )
				FILTER ( substr("@GRAPH@",2) != "GRAPH@" )
			}
		}
		ORDER BY DESC(lcase(?concept_label))
	'''
. 
#
#
#
# BEHEER HOMONIEMEN -1
#
#
#


#Hoofdpagina Homoniemen -1 Rapportage
stage:TaxHomoniemen a elmo:Representation;
	elmo:url-pattern "/query/homoniemen1$";
	elmo:contains stage:TaxHeader;
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxHomoniemenTabel;
	elmo:contains stage:TaxHomoniemenUitleg;
.

stage:TaxHomoniemenUitleg a elmo:Part;
	elmo:appearance elmo:HtmlAppearance;
	elmo:index "1";
	elmo:without-parameter "term";
	elmo:data [
		rdfs:label "Homoniemen";
	]
.

# Weergave van homoniemen
stage:TaxHomoniemenTabel a elmo:Part;
	elmo:appearance elmo:TableAppearance;
	elmo:index "2";
	elmo:query stage:TaxHomoniemenQuery;
	elmo:fragment [
		rdfs:label "Concept";		
		elmo:applies-to "concept";
		elmo:index "1";
	];
	elmo:fragment [
		rdfs:label "prefLabel";		
		elmo:applies-to "preflabel";
		elmo:index "2";
	];
	elmo:fragment [
		rdfs:label "Populatie";		
		elmo:applies-to "dataset1";
		elmo:index "3";
	];
	elmo:fragment [
		rdfs:label "Met status";		
		elmo:applies-to "status1";
		elmo:index "4";
		elmo:appearance elmo:GlobalLink;
	];
	elmo:fragment [
		rdfs:label "Komt ook voor in";		
		elmo:applies-to "dataset2";
		elmo:index "5";
	];
	elmo:fragment [
		rdfs:label "Met status";		
		elmo:applies-to "status2";
		elmo:index "6";
		elmo:appearance elmo:GlobalLink;
	];
.

#query geeft aan of een begrip in meerdere domeinen voorkomt
stage:TaxHomoniemenQuery a elmo:query;
	elmo:query '''
		PREFIX doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
		PREFIX prov: <http://www.w3.org/ns/prov#>
		PREFIX kddef: <http://kadaster.basisregistraties.overheid.nl/som/def#>
		PREFIX container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		SELECT DISTINCT ?concept ?concept_label ?preflabel ?dataset1 ?dataset1_label ?status1 ?status1_label ?dataset2 ?dataset2_label ?status2 ?status2_label
		WHERE {
			GRAPH ?g {
				?concept rdf:type skos:Concept.
				?concept rdfs:label ?concept_label.
				?concept skos:prefLabel ?preflabel.
				?concept kddef:status ?status1.
				FILTER NOT EXISTS {
					?concept prov:invalidatedAtTime ?c1time.
				}
				FILTER( LANG( ?concept_label ) = "" || LANGMATCHES( LANG( ?concept_label ), "nl" ) )
			}
			GRAPH ?g2 {
				?concept2 rdf:type skos:Concept.
				?concept2 skos:prefLabel ?preflabel.
				?concept2 kddef:status ?status2.
				FILTER NOT EXISTS {
					?concept2 prov:invalidatedAtTime ?c2time.
				}
			}
			GRAPH ?dsg {
				?dataset1 rdfs:label ?dataset1_label. 
				FILTER NOT EXISTS {
					?dataset1 prov:invalidatedAtTime ?d1time.
				}
				?dataset2 rdfs:label ?dataset2_label. 
				FILTER NOT EXISTS {
					?dataset2 prov:invalidatedAtTime ?d2time.
				}
			}
			OPTIONAL {
				GRAPH container:statusupload {
					?status1 rdfs:label ?status1_label.
					?status2 rdfs:label ?status2_label.
					FILTER (lang(?status1_label)="" || lang(?status1_label)="nl")
					FILTER (lang(?status2_label)="" || lang(?status2_label)="nl")
				}
			}
			GRAPH doc:mastergraph {
				?concept rdfs:isDefinedBy ?g.
				?concept2 rdfs:isDefinedBy ?g2. 
				?dataset1 rdfs:isDefinedBy ?dsg.
				?dataset2 rdfs:isDefinedBy ?dsg.
				?concept skos:inScheme ?dataset1.
				?concept2 skos:inScheme ?dataset2.
			}
			FILTER (?concept != ?concept2)
		}
	'''
. 
#
#
#
# BEHEER Synoniemen
#
#
#


#Hoofdpagina Synoniemen Rapportage
stage:TaxHomoniemen2 a elmo:Representation;
	elmo:url-pattern "/query/synoniemen$";
	elmo:contains stage:TaxHeader;
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxSynoniemenTabel;
	elmo:contains stage:TaxSynoniemenUitleg;
.

stage:TaxSynoniemenUitleg a elmo:Part;
	elmo:appearance elmo:HtmlAppearance;
	elmo:index "1";
	elmo:without-parameter "term";
	elmo:data [
		rdfs:label "Synoniemen";
	]
.

# Weergave van Synoniemen
stage:TaxSynoniemenTabel a elmo:Part;
	elmo:appearance elmo:TableAppearance;
	elmo:index "2";
	elmo:query stage:TaxSynoniemenQuery;
	elmo:fragment [
		rdfs:label "Concept";			
		elmo:applies-to "concept1";
	];
	elmo:fragment [
		rdfs:label "met synoniem";			
		elmo:applies-to "altlabel1";
	];
	elmo:fragment [
		rdfs:label "in dataset";			
		elmo:applies-to "dataset1";
	];
	elmo:fragment [
		rdfs:label "met de status";			
		elmo:applies-to "status1";
		elmo:appearance elmo:GlobalLink;
	];
	elmo:fragment [
		rdfs:label "komt voor als concept";			
		elmo:applies-to "concept2";
	];
	elmo:fragment [
		rdfs:label "met synoniem";			
		elmo:applies-to "altlabel2";
	];
	elmo:fragment [
		rdfs:label "in dataset";			
		elmo:applies-to "dataset2";
	];
	elmo:fragment [
		rdfs:label "met de status";			
		elmo:applies-to "status2";
		elmo:appearance elmo:GlobalLink;
	];
	
.

stage:TaxSynoniemenQuery a elmo:query;
	elmo:query '''
	PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
	PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
	PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
	PREFIX doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
	PREFIX prov: <http://www.w3.org/ns/prov#>
	PREFIX kddef: <http://kadaster.basisregistraties.overheid.nl/som/def#>
	PREFIX container: <http://pdok-ld-gck.in.kadaster.nl/container/>
	SELECT DISTINCT ?concept1 ?concept1_label  ?altlabel1 ?dataset1 ?dataset1_label ?status1 ?status1_label ?concept2 ?concept2_label ?altlabel2 ?dataset2 ?dataset2_label ?status2 ?status2_label
	WHERE {
		GRAPH ?g1 {
			?concept1 rdf:type skos:Concept.
			?concept1 rdfs:label ?concept1_label.
			?concept1 skos:prefLabel ?preflabel1.
			?concept1 kddef:status ?status1.
			OPTIONAL {
				?concept1 skos:altLabel ?altlabel1.
				FILTER( LANG( ?altlabel1 ) = "" || LANGMATCHES( LANG( ?altlabel1 ), "nl" ) )
			}
			FILTER( LANG( ?concept1_label ) = "" || LANGMATCHES( LANG( ?concept1_label ), "nl" ) )
			FILTER NOT EXISTS {
				?concept1 prov:invalidatedAtTime ?c1time.
			}
		}
		GRAPH ?g2 {
			?concept2 rdf:type skos:Concept.
			?concept2 rdfs:label ?concept2_label.
			?concept2 skos:prefLabel ?preflabel2.
			?concept2 kddef:status ?status2.
			OPTIONAL {
				?concept2 skos:altLabel ?altlabel2.
				FILTER( LANG( ?altlabel2 ) = "" || LANGMATCHES( LANG( ?altlabel2 ), "nl" ) )
			}
			FILTER( LANG( ?concept2_label ) = "" || LANGMATCHES( LANG( ?concept2_label ), "nl" ) )
			FILTER NOT EXISTS {
				?concept2 prov:invalidatedAtTime ?c2time.
			}
		}
		GRAPH ?dsg {
			?dataset1 rdfs:label ?dataset1_label. 
			FILTER NOT EXISTS {
				?dataset1 prov:invalidatedAtTime ?d1time.
			}
			?dataset2 rdfs:label ?dataset2_label. 
			FILTER NOT EXISTS {
				?dataset2 prov:invalidatedAtTime ?d2time.
			}
		}
		OPTIONAL {
			GRAPH container:statusupload {
				?status1 rdfs:label ?status1_label.
				?status2 rdfs:label ?status2_label.
				FILTER (lang(?status1_label)="" || lang(?status1_label)="nl")
				FILTER (lang(?status2_label)="" || lang(?status2_label)="nl")
			}
		}
		GRAPH doc:mastergraph {
			?concept1 rdfs:isDefinedBy ?g1.
			?concept2 rdfs:isDefinedBy ?g2.
			?dataset1 rdfs:isDefinedBy ?dsg.
			?dataset2 rdfs:isDefinedBy ?dsg.
			?concept1 skos:inScheme ?dataset1.
			?concept2 skos:inScheme ?dataset2.
		}
		FILTER (
			?preflabel1 = ?preflabel2
			|| ?preflabel1 = ?altlabel2
			|| ?altlabel1 = ?preflabel2
			|| ?altlabel1 = ?altlabel2
		)
		FILTER (?concept1 != ?concept2)
	}	
	ORDER BY ?concept1_label
	'''
. 
#
#
#
# BEHEER LOOPING
#
#
#


#Hoofdpagina Looping Rapportage
stage:TaxLoopingcontrole a elmo:Representation;
	elmo:url-pattern "/query/loopingcontrole$";
	elmo:contains stage:TaxHeader;
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxLoopingTabel;
	elmo:contains stage:TaxLoopingUitleg;
.

stage:TaxLoopingUitleg a elmo:Part;
	elmo:appearance elmo:HtmlAppearance;
	elmo:index "1";
	elmo:without-parameter "term";
	elmo:data [
		rdfs:label "Looping";
		elmo:html '''
			<p>De lijst bevat alle subjecten die gerelateerd zijn aan een object, waar het object de omgekeerde relatie ook heeft naar het subject.</p>
		''';
	]
.

# Weergave van gerelateerde concepten (looping)
stage:TaxLoopingTabel a elmo:Part;
	elmo:index "2";
	elmo:fragment [
		elmo:applies-to "link";
		elmo:appearance elmo:GlobalLink;
	];
	elmo:appearance elmo:TableAppearance;
	elmo:query stage:TaxLoopingQuery
.

#query toont alle triples, waarvan de omgekeerde relatie ook een geldige triple is, en er een loop ontstaat
stage:TaxLoopingQuery a elmo:query;
	elmo:query '''
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix dct: <http://purl.org/dc/terms/>
		prefix thes: <http://purl.org/iso25964/skos-thes#>
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix dc: <http://purl.org/dc/terms/>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
		prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dataset: <http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: <http://pdok-ld-gck.in.kadaster.nl/id/concept/>
		prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>
		prefix bp4mc2: <http://bp4mc2.org/elmo/def/>
		prefix dcat: <http://www.w3.org/ns/dcat#>
		prefix owl: <http://www.w3.org/2002/07/owl#>
		
		SELECT 	DISTINCT ?Subject ?Subject_label 
				?link ?link_label 
				?Object ?Object_label
		WHERE {
  			{
                SELECT ?Subject ?Subject_label ?link ?Object ?Object_label ?AltObject
                WHERE {
                    GRAPH ?sg {
                        ?Subject rdf:type skos:Concept.
                        ?Subject ?link ?Object.
                        OPTIONAL {
                            ?Subject rdfs:label ?Subject_label.
                            FILTER( LANG( ?Subject_label ) = "" || LANGMATCHES( LANG( ?Subject_label ), "nl" ) )
                        }
                        FILTER NOT EXISTS {
                            ?Subject prov:invalidatedAtTime ?time.
                        }
						FILTER(
							?link =  thes:broaderGeneric
							|| ?link = thes:narrowerGeneric
							|| ?link = thes:broaderPartitive
							|| ?link = thes:narrowerPartitive
							|| ?link = skos:semanticRelation
							|| ?link = skos:closeMatch
							|| ?link = skos:exactMatch
							|| ?link = skos:relatedMatch
							|| ?link = skos:broadMatch
							|| ?link = skos:narrowMatch
							|| ?link = skoslex:actor
							|| ?link = skoslex:agent
							|| ?link = skoslex:object
							|| ?link = skos:member
						)
                    }
                    GRAPH ?og {
                        ?Object rdf:type skos:Concept.
                        OPTIONAL {
                            ?Object ?link ?AltObject.
						}
                        OPTIONAL {
                            ?Object rdfs:label ?Object_label.
                            FILTER( LANG( ?Object_label ) = "" || LANGMATCHES( LANG( ?Object_label ), "nl" ) )
                        }
                        FILTER NOT EXISTS {
                            ?Object prov:invalidatedAtTime ?otime.
                        }
						FILTER(
							?link =  thes:broaderGeneric
							|| ?link = thes:narrowerGeneric
							|| ?link = thes:broaderPartitive
							|| ?link = thes:narrowerPartitive
							|| ?link = skos:semanticRelation
							|| ?link = skos:closeMatch
							|| ?link = skos:exactMatch
							|| ?link = skos:relatedMatch
							|| ?link = skos:broadMatch
							|| ?link = skos:narrowMatch
							|| ?link = skoslex:actor
							|| ?link = skoslex:agent
							|| ?link = skoslex:object
							|| ?link = skos:member
						)
                    }
                    GRAPH doc:mastergraph {
                        ?Subject rdfs:isDefinedBy ?sg.
                        ?Object rdfs:isDefinedBy ?og.
                    }
                }
  			}
  			FILTER (												
				?Subject = ?AltObject
			)
			BIND (
				IF(?link = skos:member,  "Lid van",
					IF(?link =	skos:semanticRelation,  "Heeft betrekking op",
						IF(?link =	thes:broaderGeneric,  "Is specialisatie van",
							IF(?link =	thes:narrowerGeneric,  "Is generalisatie van",
								IF(?link =	thes:broaderPartitive,  "Is onderdeel van",
									IF(?link =	thes:narrowerPartitive,  "Bestaat uit",
										IF(?link =	dct:source,  "Bronnen",
											IF(?link =	skoslex:actor,  "Heeft als actor",
												IF(?link =	skoslex:object,  "Heeft als object",
													IF(?link =	skoslex:agent,  "Heeft als agent",
														IF(?link =	skos:closeMatch,  "Is ongeveer hetzelfde als",
															IF(?link =	skos:exactMatch,  "Is hetzelfde als",
																IF(?link =	skos:relatedMatch,  "Zie ook ",
																	IF(?link =	skos:broadMatch,  "Breder dan",
																		IF(?link = skos:member, "Lid van",
																			IF(?link =	skos:narrowMatch,  "Enger dan", " "
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				) AS ?link_label
			) 
		}
		ORDER BY ?Subject_label
	'''
. 
#
#
#
# WEERGAVEPAGINA'S
#
#
#



# Weergavepagina inclusief boomweergave
stage:WeergavePaginaActivity a elmo:Representation;
	elmo:contains stage:TaxMenu;
	
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxIndexConcepten;
	elmo:contains stage:WeergaveTabelActivity;
	elmo:applies-to [
		rdf:type prov:Activity;
	];
.

stage:WeergavePaginaAgent a elmo:Representation;
	elmo:contains stage:TaxMenu;
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxIndexConcepten;
	elmo:contains stage:WeergaveTabelAgent;
	elmo:applies-to [
		rdf:type prov:Agent;
	];
.

# Tabel met vorige versies
stage:WeergaveVersiesActivity a elmo:Part;
	elmo:appearance elmo:TableAppearance;
	elmo:index "90";
	elmo:fragment [
		elmo:applies-to "graph";
		elmo:name "graph";
		elmo:appearance elmo:HiddenAppearance;
	];
	elmo:fragment [
		elmo:applies-to "concept";
		rdfs:label "Andere versies";
		xhtml:link "/query/versie"
	];
	elmo:fragment [
		elmo:applies-to "actueeltot";
		rdfs:label "Actueel tot";
	];
	elmo:fragment [
		elmo:applies-to "slabel";
		elmo:appearance elmo:HiddenAppearance
	];
	elmo:fragment [
		elmo:applies-to "graphlabel";
		rdfs:label "Datum versie"@nl;
	];
	
	elmo:query stage:WeergaveVersiesActivityQuery;
.

stage:WeergaveVersiesAgent a elmo:Part;
	elmo:appearance elmo:TableAppearance;
	elmo:index "90";
	elmo:fragment [
		elmo:applies-to "graph";
		elmo:name "graph";
		elmo:appearance elmo:HiddenAppearance;
	];
	elmo:fragment [
		elmo:applies-to "concept";
		rdfs:label "Andere versies";
		xhtml:link "/query/versie"
	];
	elmo:fragment [
		elmo:applies-to "actueeltot";
		rdfs:label "Actueel tot";
	];
	elmo:fragment [
		elmo:applies-to "slabel";
		elmo:appearance elmo:HiddenAppearance
	];
	elmo:fragment [
		elmo:applies-to "graphlabel";
		rdfs:label "Datum versie"@nl;
	];
	
	elmo:query stage:WeergaveVersiesAgentQuery;
.


# Algemene tabelweergave
stage:WeergaveTabelActivity a elmo:Part;
	elmo:index "01";
	elmo:fragment [
		elmo:applies-to rdfs:label;
		elmo:appearance elmo:HiddenAppearance
	];
	elmo:fragment [
		rdfs:label "Startdatum versie"@nl;
		elmo:applies-to prov:generatedAtTime;
		elmo:index "13";
	];
	elmo:fragment [
		rdfs:label "Einddatum versie"@nl;
		elmo:applies-to prov:invalidatedAtTime;
		elmo:index "14";
	];
	elmo:fragment [
		rdfs:label "Laatste activiteit"@nl;
		elmo:applies-to prov:wasGeneratedBy;
		elmo:index "15";
	];
	elmo:fragment [
		rdfs:label "Periode geldigheid"@nl;
		elmo:applies-to dct:valid;
		elmo:index "17";
	];
	elmo:fragment [
		rdfs:label "Startdatum"@nl;
		elmo:applies-to prov:startedAtTime;
		elmo:index "27";
	];
	elmo:fragment [
		rdfs:label "Einddatum"@nl;
		elmo:applies-to prov:endedAtTime;
		elmo:index "28";
	];
	elmo:fragment [
		rdfs:label "Uitgevoerd door"@nl;
		elmo:applies-to prov:wasAssociatedWith;
		elmo:index "29";
	];
	elmo:query stage:WeergaveTabelActivityQuery;
.

stage:WeergaveTabelAgent a elmo:Part;
	elmo:index "01";
	elmo:fragment [
		elmo:applies-to rdfs:label;
		elmo:appearance elmo:HiddenAppearance
	];
	elmo:fragment [
		rdfs:label "Startdatum versie"@nl;
		elmo:applies-to prov:generatedAtTime;
		elmo:index "13";
	];
	elmo:fragment [
		rdfs:label "Einddatum versie"@nl;
		elmo:applies-to prov:invalidatedAtTime;
		elmo:index "14";
	];
	elmo:fragment [
		rdfs:label "Laatste activiteit"@nl;
		elmo:applies-to prov:wasGeneratedBy;
		elmo:index "15";
	];
	elmo:fragment [
		rdfs:label "Periode geldigheid"@nl;
		elmo:applies-to dct:valid;
		elmo:index "17";
	];
	elmo:fragment [
		rdfs:label "Uitgevoerd door"@nl;
		elmo:applies-to prov:wasAssociatedWith;
		elmo:index "29";
	];
	elmo:fragment [
		rdfs:label "Naam"@nl;
		elmo:applies-to foaf:givenName;
		elmo:index "30";
	];
	elmo:fragment [
		rdfs:label "Emailadres"@nl;
		elmo:applies-to foaf:mbox;
		elmo:index "31";
	];
	elmo:fragment [
		rdfs:label "Namens organisatie"@nl;
		elmo:applies-to prov:actedOnBehalfOf;
		elmo:index "32";
	];
	elmo:query stage:WeergaveTabelAgentQuery;
.


# Query voor WeergaveTabel
stage:WeergaveTabelActivityQuery a elmo:Query;
	elmo:query '''
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix dct: <http://purl.org/dc/terms/>
		prefix thes: <http://purl.org/iso25964/skos-thes#>
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix dc: <http://purl.org/dc/terms/>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
		prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dataset: <http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: <http://pdok-ld-gck.in.kadaster.nl/id/concept/>
		prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>
		prefix bp4mc2: <http://bp4mc2.org/elmo/def/>
		prefix dcat: <http://www.w3.org/ns/dcat#>
		
		construct {
			<@SUBJECT@> ?p ?o.
			?o rdfs:label ?olabel.
			?o rdfs:label ?oelabel.
		}
		WHERE {
			<@SUBJECT@> rdf:type prov:Activity.
			<@SUBJECT@> ?p ?o.
			FILTER (
				?p != rdf:type
				&& ?p != skos:prefLabel
				&& ?p != skos:notation
				&& ?p != bp4mc2:signature
				&& ?p != dct:type
				&& ?p != skos:member
				&& ?p != dct:title
			)
			OPTIONAL {
				?o rdfs:label ?olabel.
			}
		}
	'''
.


# Query voor WeergaveTabel
stage:WeergaveTabelAgentQuery a elmo:Query;
	elmo:query '''
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix dct: <http://purl.org/dc/terms/>
		prefix thes: <http://purl.org/iso25964/skos-thes#>
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix dc: <http://purl.org/dc/terms/>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
		prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dataset: <http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: <http://pdok-ld-gck.in.kadaster.nl/id/concept/>
		prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>
		prefix bp4mc2: <http://bp4mc2.org/elmo/def/>
		prefix dcat: <http://www.w3.org/ns/dcat#>
		
		construct {
			<@SUBJECT@> ?p ?o.
			?o rdfs:label ?olabel.
			?o rdfs:label ?oelabel.
		}
		WHERE {
			<@SUBJECT@> rdf:type prov:Agent.
			<@SUBJECT@> ?p ?o.
			FILTER (
				?p != rdf:type
				&& ?p != skos:prefLabel
				&& ?p != skos:notation
				&& ?p != bp4mc2:signature
				&& ?p != dct:type
				&& ?p != skos:member
				&& ?p != dct:title
			)
			OPTIONAL {
				?o rdfs:label ?olabel.
			}
		}
	'''
.


# Query voor weergave versies
stage:WeergaveVersiesActivityQuery a elmo:Query;
	elmo:query '''
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix dc: <http://purl.org/dc/terms/>
		prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dataset: <http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: <http://pdok-ld-gck.in.kadaster.nl/id/concept/>

		SELECT DISTINCT (<@SUBJECT@> as ?concept) ?concept_label ?graph ?actueeltot
		WHERE {
			{
				GRAPH ?graph {
					<@SUBJECT@> rdf:type prov:Activity.
					?graph prov:generatedAtTime ?concept_label.
					OPTIONAL {
						<@SUBJECT@> prov:invalidatedAtTime ?actueeltot.
					}
				}
				GRAPH doc:mastergraph {
					<@SUBJECT@> rdfs:isDefinedBy ?actualGraph.
					?graph dc:isVersionOf doc:mastergraph
				}	
				FILTER( ?graph != ?actualGraph )
				FILTER( substr("@GRAPH@",2) = "GRAPH@" )
			}
			UNION {
				GRAPH ?graph {
					<@SUBJECT@> rdf:type prov:Activity.
					?graph prov:generatedAtTime ?concept_label.
					OPTIONAL {
						<@SUBJECT@> prov:invalidatedAtTime ?actueeltot.
					}
				}
				GRAPH doc:mastergraph {
					?graph dc:isVersionOf doc:mastergraph
				}	
				FILTER( ?graph != <@GRAPH@> )
				FILTER ( substr("@GRAPH@",2) != "GRAPH@" )
			}
		}
		ORDER BY DESC(lcase(?concept_label))
	'''
.

# Query voor weergave versies
stage:WeergaveVersiesAgentQuery a elmo:Query;
	elmo:query '''
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix dc: <http://purl.org/dc/terms/>
		prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dataset: <http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: <http://pdok-ld-gck.in.kadaster.nl/id/concept/>

		SELECT DISTINCT (<@SUBJECT@> as ?concept) ?concept_label ?graph ?actueeltot
		WHERE {
			{
				GRAPH ?graph {
					<@SUBJECT@> rdf:type prov:Agent.
					?graph prov:generatedAtTime ?concept_label.
					OPTIONAL {
						<@SUBJECT@> prov:invalidatedAtTime ?actueeltot.
					}
				}
				GRAPH doc:mastergraph {
					<@SUBJECT@> rdfs:isDefinedBy ?actualGraph.
					?graph dc:isVersionOf doc:mastergraph
				}	
				FILTER( ?graph != ?actualGraph )
				FILTER( substr("@GRAPH@",2) = "GRAPH@" )
			}
			UNION {
				GRAPH ?graph {
					<@SUBJECT@> rdf:type prov:Agent.
					?graph prov:generatedAtTime ?concept_label.
					OPTIONAL {
						<@SUBJECT@> prov:invalidatedAtTime ?actueeltot.
					}
				}
				GRAPH doc:mastergraph {
					?graph dc:isVersionOf doc:mastergraph
				}	
				FILTER( ?graph != <@GRAPH@> )
				FILTER ( substr("@GRAPH@",2) != "GRAPH@" )
			}
		}
		ORDER BY DESC(lcase(?concept_label))
	'''
. 
#
#
#
# BEHEER WHERE USED 
#
#
#



# Hoofdpagina Where Used Rapportage
stage:TaxWhereUsedPagina rdf:type elmo:Representation;
	elmo:url-pattern "/query/whereused(|/|\\..+)$";
	elmo:contains stage:TaxWhereUsedTabel;
	elmo:contains stage:TaxWhereUsedIndex;
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxWhereUsedUitleg;
.

stage:TaxWhereUsedUitleg a elmo:Part;
	elmo:appearance elmo:HtmlAppearance;
	elmo:index "1";
	elmo:data [
		rdfs:label "Where Used";
		elmo:html '''
			<p>De lijst bevat alle concepten en de relaties die andere subjecten met dit concept hebben.</p>
		''';
	]
.

# Index voor op de alfabetische weergave 
stage:TaxWhereUsedIndex a elmo:Part;
	elmo:appearance elmo:IndexAppearance;
	elmo:data [
		rdfs:label "0-9|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|toon alles";
		xhtml:link "/query/whereused";
		rdf:value "%5B0-9%5D|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|";
		elmo:name "term";
	];
	elmo:index "2";
.

# Where Used-tabel voor op de alfabetische weergave 
stage:TaxWhereUsedTabel a elmo:Part;
	elmo:appearance elmo:TableAppearance;
	elmo:with-parameter "term";
	elmo:index "3";
	elmo:query stage:TaxWhereUsedQuery;
	elmo:fragment [
		rdfs:label "Concept";		
		elmo:applies-to "concept";
		elmo:index "1";
	];
	elmo:fragment [
		rdfs:label "Link";		
		elmo:applies-to "link";
		elmo:index "2";
		elmo:appearance elmo:GlobalLink;
	];
	elmo:fragment [
		rdfs:label "Subject";		
		elmo:applies-to "subject";
		elmo:index "3";
	];
.

#
# QUERY'S
#

# Query voor tonen alle triples <subject - predicate - object> van alle objecten
stage:TaxWhereUsedQuery a elmo:Query;
	elmo:query '''
	prefix prov: 		<http://www.w3.org/ns/prov#>
	prefix skoslex: 	<http://bp4mc2.org/def/skos-lex/>
	prefix doc: 		<http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
	prefix concept: 	<http://pdok-ld-gck.in.kadaster.nl/id/concept/>
	prefix kddef:		<http://kadaster.basisregistraties.overheid.nl/som/def#>
	prefix kdstat:		<http://kadaster.basisregistraties.overheid.nl/id/status/>
	prefix thes: 		<http://purl.org/iso25964/skos-thes#>
	prefix skos: 		<http://www.w3.org/2004/02/skos/core#>
	prefix container: 	<http://pdok-ld-gck.in.kadaster.nl/container/>
	prefix dct: <http://purl.org/dc/terms/>
	
	SELECT ?concept ?concept_label ?link ?link_label ?subject ?subject_label
	WHERE {
		GRAPH ?g {
			?concept rdf:type skos:Concept.
			?concept rdfs:label ?concept_label.
			?concept kddef:status ?status.
			FILTER NOT EXISTS {
				?concept prov:invalidatedAtTime ?time.
			}
			FILTER (
				?status = kdstat:Gevalideerd ||
				?status = kdstat:Geverifieerd
			)
			FILTER( LANG( ?concept_label ) = "" || LANGMATCHES( LANG( ?concept_label ), "@LANGUAGE@" ) )
		}
		GRAPH ?sg {
			?subject ?link ?concept.
			?subject rdfs:label ?subject_label.
			FILTER( LANG( ?subject_label ) = "" || LANGMATCHES( LANG( ?subject_label ), "@LANGUAGE@" ) )
			FILTER NOT EXISTS {
				?subject prov:invalidatedAtTime ?stime.
			}
			FILTER(
				?link =  thes:broaderGeneric
				|| ?link = thes:narrowerGeneric
				|| ?link = thes:broaderPartitive
				|| ?link = thes:narrowerPartitive
				|| ?link = skos:semanticRelation
				|| ?link = skos:closeMatch
				|| ?link = skos:exactMatch
				|| ?link = skos:relatedMatch
				|| ?link = skos:broadMatch
				|| ?link = skos:narrowMatch
				|| ?link = skoslex:actor
				|| ?link = skoslex:agent
				|| ?link = skoslex:object
				|| ?link = skos:member
			)
		}
		GRAPH doc:mastergraph {
			?concept rdfs:isDefinedBy ?g.
			?subject rdfs:isDefinedBy ?sg.
		}
		FILTER regex(?concept_label, '^[^a-z0-9]*@TERM@', 'i').
		BIND (
			IF(?link = skos:member,  "Lid van",
				IF(?link =	skos:semanticRelation,  "Heeft betrekking op",
					IF(?link =	thes:broaderGeneric,  "Is specialisatie van",
						IF(?link =	thes:narrowerGeneric,  "Is generalisatie van",
							IF(?link =	thes:broaderPartitive,  "Is onderdeel van",
								IF(?link =	thes:narrowerPartitive,  "Bestaat uit",
									IF(?link =	dct:source,  "Bronnen",
										IF(?link =	skoslex:actor,  "Heeft als actor",
											IF(?link =	skoslex:object,  "Heeft als object",
												IF(?link =	skoslex:agent,  "Heeft als agent",
													IF(?link =	skos:closeMatch,  "Is ongeveer hetzelfde als",
														IF(?link =	skos:exactMatch,  "Is hetzelfde als",
															IF(?link =	skos:relatedMatch,  "Zie ook ",
																IF(?link =	skos:broadMatch,  "Breder dan",
																	IF(?link = skos:member, "Lid van",
																		IF(?link =	skos:narrowMatch,  "Enger dan", " "
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			) AS ?link_label
		) 
	}
	ORDER BY str(lcase(?concept_label))
	'''
. 
#
#
#
# BEHEER NIET-GEVALIDEERDE LINKS
#
#
#


# Hoofdpagina Niet-gevalideerde Rapportage
stage:TaxNietGevalideerdeLinks a elmo:Representation;
	elmo:url-pattern "/query/nietgevalideerdelinks$";
	elmo:contains stage:TaxHeader;
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxNietGevalideerdeLinksUitleg;
	elmo:contains stage:TaxNietGevalideerdeLinksTabel;
.

stage:TaxNietGevalideerdeLinksUitleg a elmo:Part;
	elmo:appearance elmo:HtmlAppearance;
	elmo:index "1";
	elmo:without-parameter "term";
	elmo:data [
		rdfs:label "Niet-gevalideerde Links";
		elmo:html '''
			<p>De lijst bestaat uit alle objecten waarvoor geldt dat een frame (meestal een begrip) een niet-gevalideerde referentie bevat.</p>
		''';
	]
.

# Weergave van NietGevalideerde links
stage:TaxNietGevalideerdeLinksTabel a elmo:Part;
	elmo:appearance elmo:TableAppearance;
	elmo:index "2";
	elmo:fragment [
		rdfs:label "Type";									#het type van het object â€“ vrijwel altijd zal dit 'concept' zijn
		elmo:applies-to "klasse";
		elmo:appearance elmo:GlobalLink;
	];
	elmo:fragment [
		rdfs:label "Status Frame";							#de status van het object met de foute verwijzing
		elmo:applies-to "status";
		elmo:appearance elmo:GlobalLink;
	];
	elmo:fragment [
		rdfs:label "Foutieve frame";						#een link naar het object met de foute verwijzing 
		elmo:applies-to "Frame";
	];
	elmo:fragment [
		rdfs:label "Referentie";							#de relatie van het object naar de foute verwijzing â€“ dwz "predicate" in <subject â€“ predicate â€“ object>
		elmo:applies-to "link";
		elmo:appearance elmo:GlobalLink;
	];
	elmo:fragment [
		rdfs:label "Niet-gevalideerde referentie";			#de niet-gevalideerde referentie, dwz 'object' in <subject â€“ predicate â€“ object> zonder gevalideerde/geverifieerde status
		elmo:applies-to "FrameRef";
	];
	elmo:fragment [
		rdfs:label "Status referentie";						#de status van de referentie 
		elmo:applies-to "FR_status";
		elmo:appearance elmo:GlobalLink;
	];
	elmo:query stage:TaxNietGevalideerdeLinksQuery
.

#query om lijst op te halen met alle subjecten waarvoor geldt:
#	alle triples waarbij het object NIET gevalideerd is 
stage:TaxNietGevalideerdeLinksQuery a elmo:query;
	elmo:query '''
	prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
	prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
	prefix skos: <http://www.w3.org/2004/02/skos/core#>
	prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
	prefix kddef: <http://kadaster.basisregistraties.overheid.nl/som/def#>
	prefix kdstat: <http://kadaster.basisregistraties.overheid.nl/id/status/>
	prefix prov: <http://www.w3.org/ns/prov#>
	prefix owl: <http://www.w3.org/2002/07/owl#>
	prefix thes: <http://purl.org/iso25964/skos-thes#>
	prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
	prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
	prefix dct: <http://purl.org/dc/terms/>

	SELECT 	?klasse
			?status ?status_label
			?Frame ?Frame_label
			?link ?link_label
			?FrameRef ?FrameRef_label
			?FR_status ?FR_status_label
	WHERE {
			GRAPH ?mg		{
				?Frame rdf:type ?klasse.
				?Frame ?link ?FrameRef.
				?Frame kddef:status ?status.
				FILTER(
					?link =  thes:broaderGeneric
					|| ?link = thes:narrowerGeneric
					|| ?link = thes:broaderPartitive
					|| ?link = thes:narrowerPartitive
					|| ?link = skos:semanticRelation
					|| ?link = skos:closeMatch
					|| ?link = skos:exactMatch
					|| ?link = skos:relatedMatch
					|| ?link = skos:broadMatch
					|| ?link = skos:narrowMatch
					|| ?link = skoslex:actor
					|| ?link = skoslex:agent
					|| ?link = skoslex:object
					|| ?link = skos:member 
				)
				OPTIONAL {
					?Frame rdfs:label ?Frame_label.
					FILTER (lang(?Frame_label)="" || lang(?Frame_label)="nl")
				}
				FILTER NOT EXISTS {
					?Frame prov:invalidatedAtTime ?time.
				}
			}
			GRAPH ?frameRefGraph {
				?FrameRef rdf:type ?FRType.
				?FrameRef kddef:status ?FR_status.
				OPTIONAL {
					?FrameRef rdfs:label ?FrameRef_label.
					FILTER (lang(?FrameRef_label)="" || lang(?FrameRef_label)="nl")
				}
				FILTER NOT EXISTS {
					?FrameRef prov:invalidatedAtTime ?FRtime.
				}
				FILTER (
					?FR_status = kdstat:Afgekeurd 
					|| ?FR_status = kdstat:Niet_beoordeeld
					|| ?FR_status = kdstat:Ter_afkeuring
					|| ?FR_status = kdstat:Ter_validatie
				)
			}
			OPTIONAL {
				GRAPH container:statusupload {
					?status rdfs:label ?status_label.
					?FR_status rdfs:label ?FR_status_label.
					FILTER (lang(?status_label)="" || lang(?status_label)="nl")
					FILTER (lang(?FR_status_label)="" || lang(?FR_status_label)="nl")
				}
			}
			GRAPH doc:mastergraph {
				?Frame rdfs:isDefinedBy ?mg.
				?FrameRef rdfs:isDefinedBy ?frameRefGraph.
			}
		BIND (
			IF(?link = skos:member,  "Lid van",
				IF(?link =	skos:semanticRelation,  "Heeft betrekking op",
					IF(?link =	thes:broaderGeneric,  "Is specialisatie van",
						IF(?link =	thes:narrowerGeneric,  "Is generalisatie van",
							IF(?link =	thes:broaderPartitive,  "Is onderdeel van",
								IF(?link =	thes:narrowerPartitive,  "Bestaat uit",
									IF(?link =	dct:source,  "Bronnen",
										IF(?link =	skoslex:actor,  "Heeft als actor",
											IF(?link =	skoslex:object,  "Heeft als object",
												IF(?link =	skoslex:agent,  "Heeft als agent",
													IF(?link =	skos:closeMatch,  "Is ongeveer hetzelfde als",
														IF(?link =	skos:exactMatch,  "Is hetzelfde als",
															IF(?link =	skos:relatedMatch,  "Zie ook ",
																IF(?link =	skos:broadMatch,  "Breder dan",
																	IF(?link = skos:member, "Lid van",
																		IF(?link =	skos:narrowMatch,  "Enger dan", " "
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			) AS ?link_label
		)
		}
	ORDER BY str(lcase(?Frame_label))
	'''
. 
#
# PRODUCTION

# production om subset in named graph te plaatsen en te tonen voor download
updatestage:TaxExportConcepten a elmo:Production;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxFooter;
	elmo:queryForm stage:TaxSelectDataset;
#	elmo:contains stage:ExportSubsetBegrippenQueryScene;
.

stage:ExportSubsetBegrippenQueryScene rdf:type elmo:Representation;
	elmo:url-pattern "/exportsubsetbegrippen(|/|\\..+)$";
	elmo:queryForm stage:TaxSelectDataset;
	elmo:appearance elmo:ContentAppearance;
	elmo:index "1";
	elmo:query '''
		prefix prov:	<http://www.w3.org/ns/prov#>
		prefix kddef:	<http://kadaster.basisregistraties.overheid.nl/som/def#>
		prefix kdstat:	<http://kadaster.basisregistraties.overheid.nl/id/status/>
		prefix doc:		<http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix skos:	<http://www.w3.org/2004/02/skos/core#>
		prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
		prefix thes: <http://purl.org/iso25964/skos-thes#>
		prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
		CONSTRUCT {
			?concept ?p ?o .
			?concept rdf:type skos:Concept .
		}
		WHERE {
			GRAPH ?g {
				?concept ?p ?o .
				?concept kddef:status ?status.
				FILTER NOT EXISTS {
					?concept prov:invalidatedAtTime ?time.
				}
				FILTER (
					?status = kdstat:Gevalideerd ||
					?status = kdstat:Geverifieerd
				)
			}
			GRAPH doc:mastergraph {
				?concept rdfs:isDefinedBy ?g.
				?concept skos:inScheme <@DATASET@>.
			}
			OPTIONAL {
				GRAPH ?og {
					?o rdf:type ?otype.
					?o kddef:status ?ostatus.
				}
				GRAPH doc:mastergraph {
					?o rdfs:isDefinedBy ?og.
				}
			}
			FILTER(
				!isIRI( ?o )
				||
				(
					BOUND( ?otype )
					&& BOUND( ?ostatus )
					&& (
						?ostatus = kdstat:Gevalideerd
						|| ?ostatus = kdstat:Geverifieerd
					)
				)
			)
		}
	'''
.

 
#
#
#
# OVERZICHTSPAGINA CONCEPTEN 
#
#
#



#
# PAGINA'S (REPRESENTATIONS)
#

# Overzichtspagina concepten
stage:TaxOverzichtspagina rdf:type elmo:Representation;
	elmo:url-pattern "/query/overzichtspagina(|/|\\..+)$";
	elmo:url-pattern "/(|/)$";
	elmo:contains stage:TaxConceptentabel;
	elmo:contains stage:TaxConceptenDatasettabel;
	elmo:contains stage:TaxIndexConcepten;
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxMenu;
	elmo:contains stage:TaxWelkom;
.

# Welkomsttekst
stage:TaxWelkom a elmo:Part;
	elmo:appearance elmo:HtmlAppearance;
	elmo:without-parameter "term";
	elmo:data [
		rdfs:label "Welkom";
		elmo:html '''
			<p>Welkom bij het woordenboek van het Kadaster. Dit woordenboek geeft een begrijpelijke uitleg bij moeilijke begrippen die het Kadaster gebruikt. Daarnaast is een formele definitie van de begrippen beschikbaar.</p>

			<p><b>Hoe werkt het?</b><br/>
			Klik op de beginletter van het begrip voor uitleg. Als u vervolgens op het begrip zelf klikt, ziet u ook de formele omschrijving. Ook vindt u zo aanvullende informatie, zoals links naar gerelateerde begrippen.</p>

			<p><b>Wetsartikelen</b><br/>
			Juridisch geldt altijd de tekst in de wet. Wanneer er begrippen uit de wet komen, is er een verwijzing naar de wetsartikelen opgenomen. Als u daar op klikt wordt u doorgestuurd naar de officiele website van de overheid waar alle wetteksten gepubliceerd staan. Op alle onderlijnde begrippen kan doorgeklikt worden.</p>

			<p>Opmerkingen of vragen over de uitleg in dit woordenboek kunt u doorgeven met dit <a href="https://formulieren.kadaster.nl/contact_begrippenlijst" target="_blank">formulier</a>.</p>
		'''^^rdf:html;
	]
.

#
# HERBRUIKBARE PAGINA-ONDERDELEN (PARTS)
#

# Index voor de alfabetische weergave concepten
stage:TaxIndexConcepten a elmo:Part;
	elmo:appearance elmo:IndexAppearance;
	elmo:data [
		rdfs:label "0-9|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|toon alles";
		xhtml:link "/query/overzichtspagina";
		rdf:value "%5B0-9%5D|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|";
		elmo:name "term";
	];
	elmo:index "00";
.

# Conceptentabel voor de alfabetische weergave concepten
stage:TaxConceptentabel a elmo:Part;
	elmo:appearance elmo:TableAppearance;
	elmo:with-parameter "term";
	elmo:without-parameter "dataset";
	elmo:index "03";
	elmo:fragment [
		elmo:applies-to "uitleg";
		elmo:appearance elmo:MarkdownAppearance;
	];
	elmo:query stage:TaxConceptenQuery;
.

stage:TaxConceptenDatasettabel a elmo:Part;
	elmo:appearance elmo:TableAppearance;
	elmo:with-parameter "dataset";
	elmo:index "04";
	elmo:fragment [
		elmo:applies-to "uitleg";
		elmo:appearance elmo:MarkdownAppearance;
	];
	elmo:query stage:TaxConceptenDatasetQuery;
.

#
# QUERY'S
#

# Query voor tonen alle concepten
stage:TaxConceptenQuery a elmo:Query;
	elmo:query '''
		prefix prov: 		<http://www.w3.org/ns/prov#>
		prefix skoslex: 	<http://bp4mc2.org/def/skos-lex/>
		prefix container: 	<http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: 		<http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dataset: 	<http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: 	<http://pdok-ld-gck.in.kadaster.nl/id/concept/>
		prefix kddef:		<http://kadaster.basisregistraties.overheid.nl/som/def#>
		prefix kdstat:		<http://kadaster.basisregistraties.overheid.nl/id/status/>
		
		SELECT ?concept ?concept_label ?uitleg
		WHERE {
			GRAPH ?g {
				{
					?concept rdf:type skos:Concept.
					?concept rdfs:label ?concept_label.
					?concept kddef:status ?status.
					OPTIONAL {
						?concept rdfs:comment ?uitleg
					}
				}
				UNION
				{
					?concept rdf:type skos:Concept.
					?concept skos:altLabel ?concept_label.
					?concept kddef:status ?status.
					OPTIONAL {
						?concept rdfs:label ?clabel.
						?concept rdfs:comment ?definition.
						FILTER( LANG( ?clabel ) = "" || LANGMATCHES( LANG( ?clabel ), "nl" ) )
						BIND( CONCAT( "(Synoniem voor: ", ?clabel, ") ", ?definition ) AS ?uitleg )
					}
				}
				FILTER regex(?concept_label, '^[^a-z0-9]*@TERM@', 'i').
				FILTER NOT EXISTS {
					?concept prov:invalidatedAtTime ?time.
				}
				FILTER (
					?status = kdstat:Gevalideerd ||
					?status = kdstat:Geverifieerd
				)
				FILTER( LANG( ?concept_label ) = "" || LANGMATCHES( LANG( ?concept_label ), "nl" ) )
			}
			GRAPH doc:mastergraph {
				?concept rdfs:isDefinedBy ?g
			}
		}
		ORDER BY str(lcase(?concept_label))
	'''
.



stage:TaxConceptenDatasetQuery a elmo:Query;
	elmo:query '''
		prefix prov: 		<http://www.w3.org/ns/prov#>
		prefix skoslex: 	<http://bp4mc2.org/def/skos-lex/>
		prefix container: 	<http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: 		<http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dataset: 	<http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: 	<http://pdok-ld-gck.in.kadaster.nl/id/concept/>
		prefix kddef:		<http://kadaster.basisregistraties.overheid.nl/som/def#>
		prefix kdstat:		<http://kadaster.basisregistraties.overheid.nl/id/status/>
		
		SELECT ?concept ?concept_label ?uitleg
		WHERE {
			GRAPH ?g {
				{
					?concept rdf:type skos:Concept.
					?concept rdfs:label ?concept_label.
					?concept kddef:status ?status.
					OPTIONAL {
						?concept rdfs:comment ?uitleg
					}
				}
				UNION
				{
					?concept rdf:type skos:Concept.
					?concept skos:altLabel ?concept_label.
					?concept kddef:status ?status.
					OPTIONAL {
						?concept rdfs:label ?clabel.
						?concept rdfs:comment ?definition.
						BIND( CONCAT( "(Synoniem voor: ", ?clabel, ") ", ?definition ) AS ?uitleg )
					}
				}
				FILTER regex(?concept_label, '^[^a-z0-9]*@TERM@', 'i').
				FILTER NOT EXISTS {
					?concept prov:invalidatedAtTime ?time.
				}
				FILTER (
					?status = kdstat:Gevalideerd ||
					?status = kdstat:Geverifieerd
				)
				FILTER( LANG( ?concept_label ) = "" || LANGMATCHES( LANG( ?concept_label ), "nl" ) )
			}
			GRAPH doc:mastergraph {
				?concept rdfs:isDefinedBy ?g .
				?concept skos:inScheme <http://pdok-ld-gck.in.kadaster.nl/id/dataset/@DATASET@>.
			}
		}
		ORDER BY str(lcase(?concept_label))
	'''
.
 
#
#
#
# OVERZICHTSPAGINA DATASETS
#
#
#


# REPRESENTATIONS

# Overzichtspagina Datasets
stage:TaxDatasetOverzichtspagina rdf:type elmo:Representation;
	elmo:url-pattern "/query/overzichtdatasets(|/|\\..+)$";
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxDatasetTabel;
	elmo:contains stage:TaxDatasetsUitleg;
.

stage:TaxDatasetsUitleg a elmo:Part;
	elmo:appearance elmo:HtmlAppearance;
	elmo:index "1";
	elmo:data [
		rdfs:label "Overzicht datasets";
	];
.

# Datasettabel voor overzichtsweergave
stage:TaxDatasetTabel a elmo:Part;
	elmo:appearance elmo:TableAppearance;
	elmo:fragment [
		elmo:applies-to "uitleg";
		elmo:appearance elmo:MarkdownAppearance;
	];
	elmo:query stage:TaxDatasetQuery;
.

# QUERY

# query voor tonen alle datasets
stage:TaxDatasetQuery a elmo:Query;
	elmo:query '''
		prefix dcat: <http://www.w3.org/ns/dcat#>
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix dct: <http://purl.org/dc/terms/>
		
		SELECT DISTINCT ?dataset ?dataset_label ?uitleg
		WHERE {
			GRAPH ?g {
				?dataset rdf:type skos:ConceptScheme.
				?dataset dct:title ?dataset_label.
				?dataset rdfs:comment ?uitleg.
				FILTER NOT EXISTS {
					?dataset prov:invalidatedAtTime ?time.
				}
			}
			GRAPH doc:mastergraph {
				?dataset rdfs:isDefinedBy ?g
			}
		}
		ORDER BY (?dataset)
	'''
. 
#
#
#
# WEERGAVEPAGINA'S
#
#
#

# Standaard weergavepagina
stage:WeergavePaginaDataset a elmo:Representation;
	elmo:contains stage:TaxBeheermenu;
	elmo:contains stage:TaxFooter;
	elmo:contains stage:WeergaveVersiesDataset;
	elmo:contains stage:WeergaveTabelDataset;
	elmo:applies-to [
		rdf:type dcat:Dataset;
	];
.

# Tabel met vorige versies
stage:WeergaveVersiesDataset a elmo:Part;
	elmo:appearance elmo:TableAppearance;
	elmo:index "90";
	elmo:fragment [
		elmo:applies-to "graph";
		elmo:name "graph";
		elmo:appearance elmo:HiddenAppearance;
	];
	elmo:fragment [
		elmo:applies-to "concept";
		rdfs:label "Andere versies";
		xhtml:link "/query/versie"
	];
	elmo:fragment [
		elmo:applies-to "actueeltot";
		rdfs:label "Actueel tot";
	];
	elmo:fragment [
		elmo:applies-to "slabel";
		elmo:appearance elmo:HiddenAppearance
	];
	elmo:fragment [
		elmo:applies-to "graphlabel";
		rdfs:label "Datum versie"@nl;
	];
	
	elmo:query stage:WeergaveVersiesDatasetQuery;
.


# Algemene tabelweergave
stage:WeergaveTabelDataset a elmo:Part;
	elmo:index "01";
	elmo:fragment [
		elmo:applies-to rdfs:label;
		elmo:appearance elmo:HiddenAppearance
	];
	elmo:fragment [
		rdfs:label "Naam"@nl;
		elmo:applies-to skos:prefLabel;
		elmo:index "01";
	];
	elmo:fragment [
		rdfs:label "Startdatum versie"@nl;
		elmo:applies-to prov:generatedAtTime;
		elmo:indx "13";
	];
	elmo:fragment [
		rdfs:label "Einddatum versie"@nl;
		elmo:applies-to prov:invalidatedAtTime;
		elmo:indx "14";
	];
	elmo:fragment [
		rdfs:label "Laatste activiteit"@nl;
		elmo:applies-to prov:wasGeneratedBy;
		elmo:indx "15";
	];
	elmo:fragment [
		rdfs:label "Periode geldigheid"@nl;
		elmo:applies-to dct:valid;
		elmo:indx "17";
	];
	elmo:fragment [
		rdfs:label "Startdatum"@nl;
		elmo:applies-to prov:startedAtTime;
		elmo:index "27";
	];
	elmo:fragment [
		rdfs:label "Einddatum"@nl;
		elmo:applies-to prov:endedAtTime;
		elmo:index "28";
	];
	elmo:fragment [
		rdfs:label "Uitgevoerd door"@nl;
		elmo:applies-to prov:wasAssociatedWith;
		elmo:index "29";
	];
	elmo:fragment [
		rdfs:label "Titel"@nl;
		elmo:applies-to dct:title;
		elmo:index "33";
	];
	elmo:fragment [
		rdfs:label "Beschrijving"@nl;
		elmo:applies-to dct:description;
		elmo:index "34";
	];
	elmo:fragment [
		rdfs:label "Gepubliceerd"@nl;
		elmo:applies-to dct:issued;
		elmo:index "35";
	];
	elmo:fragment [
		rdfs:label "Laatste wijziging"@nl;
		elmo:applies-to dct:modified;
		elmo:index "36";
	];
	elmo:fragment [
		rdfs:label "Taal"@nl;
		elmo:applies-to dct:language;
		elmo:index "37";
	];
	elmo:fragment [
		rdfs:label "Versie"@nl;
		elmo:applies-to adms:version;
		elmo:index "38";
	];
	elmo:fragment [
		rdfs:label "Versienotities"@nl;
		elmo:applies-to adms:versionNotes;
		elmo:index "39";
	];
	elmo:fragment [
		rdfs:label "Relatie"@nl;
		elmo:applies-to dct:relation;
		elmo:index "40";
	];
	elmo:fragment [
		rdfs:label "Beschreven door"@nl;
		elmo:applies-to wdrs:describedby;
		elmo:index "41";
	];
	elmo:fragment [
		rdfs:label "Werkingsgebied"@nl;
		elmo:applies-to dct:spatial;
		elmo:index "42";
	];
	elmo:fragment [
		rdfs:label "Thema-taxonomie"@nl;
		elmo:applies-to dcat:themeTaxonomy;
		elmo:index "43";
	];
	elmo:fragment [
		rdfs:label "Distributie"@nl;
		elmo:applies-to dcat:distribution;
		elmo:index "48";
	];
	elmo:query stage:WeergaveTabelDatasetQuery;
.


# Query voor WeergaveTabel
stage:WeergaveTabelDatasetQuery a elmo:Query;
	elmo:query '''
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix dct: <http://purl.org/dc/terms/>
		prefix thes: <http://purl.org/iso25964/skos-thes#>
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix dc: <http://purl.org/dc/terms/>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
		prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dataset: <http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: <http://pdok-ld-gck.in.kadaster.nl/id/concept/>
		prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>
		prefix bp4mc2: <http://bp4mc2.org/elmo/def/>
		prefix dcat: <http://www.w3.org/ns/dcat#>
		
		construct {
			<@SUBJECT@> ?p ?o.
			?o rdfs:label ?olabel.
			<@SUBJECT@> prov:wasGeneratedBy ?a.
			<@SUBJECT@> prov:generatedAtTime ?t.
			?a rdfs:label ?alabel.
		}
		WHERE {
			{
				{
					GRAPH ?g {
						<@SUBJECT@> ?p ?o.
						<@SUBJECT@> rdf:type dcat:Dataset.
						?g prov:wasGeneratedBy ?a.
						?g prov:generatedAtTime ?t.
					}
					GRAPH doc:mastergraph {
						<@SUBJECT@> rdfs:isDefinedBy ?g
					}
					OPTIONAL {
						GRAPH doc:mastergraph {
							?o rdfs:isDefinedBy ?og.
						}
						GRAPH ?og {
							?o rdfs:label ?olabel.
						}
					}
					FILTER (
						?p != rdf:type
						&& ?p != bp4mc2:signature
						&& ?p != dct:type
						&& ?p != skos:member
						&& ?p != dct:title
					)
					FILTER( substr("@GRAPH@",2) = "GRAPH@")
				}
				UNION
				{
					GRAPH <@GRAPH@> {
						<@SUBJECT@> ?p ?o.
						<@SUBJECT@> rdf:type dcat:Dataset.
						?g prov:wasGeneratedBy ?a.
						?g prov:generatedAtTime ?t.
					}
					OPTIONAL {
						GRAPH doc:mastergraph {
							?o rdfs:isDefinedBy ?og.
						}
						GRAPH ?og {
							?o rdfs:label ?olabel.
						}
					}
					FILTER (
						?p != rdf:type
						&& ?p != bp4mc2:signature
						&& ?p != dct:type
						&& ?p != skos:member
						&& ?p != dct:title
					)
					FILTER ( substr("@GRAPH@",2) != "GRAPH@" )
				}
				OPTIONAL {
					?a rdfs:label ?alabel.
				}
			}
		}
	'''
.


# Query voor weergave versies
stage:WeergaveVersiesDatasetQuery a elmo:Query;
	elmo:query '''
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix dc: <http://purl.org/dc/terms/>
		prefix container: <http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: <http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dataset: <http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: <http://pdok-ld-gck.in.kadaster.nl/id/concept/>
		prefix dcat: <http://www.w3.org/ns/dcat#>

		SELECT DISTINCT (<@SUBJECT@> as ?concept) ?concept_label ?graph ?actueeltot
		WHERE {
			{
				GRAPH ?graph {
					<@SUBJECT@> rdf:type dcat:Dataset.
					?graph prov:generatedAtTime ?concept_label.
					OPTIONAL {
						<@SUBJECT@> prov:invalidatedAtTime ?actueeltot.
					}
				}
				GRAPH doc:mastergraph {
					<@SUBJECT@> rdfs:isDefinedBy ?actualGraph.
					?graph dc:isVersionOf doc:mastergraph
				}	
				FILTER( ?graph != ?actualGraph )
				FILTER( substr("@GRAPH@",2) = "GRAPH@" )
			}
			UNION {
				GRAPH ?graph {
					<@SUBJECT@> rdf:type dcat:Dataset.
					?graph prov:generatedAtTime ?concept_label.
					OPTIONAL {
						<@SUBJECT@> prov:invalidatedAtTime ?actueeltot.
					}
				}
				GRAPH doc:mastergraph {
					?graph dc:isVersionOf doc:mastergraph
				}	
				FILTER( ?graph != <@GRAPH@> )
				FILTER ( substr("@GRAPH@",2) != "GRAPH@" )
			}
		}
		ORDER BY DESC(lcase(?concept_label))
	'''
. 
#
#
#
# MODEL EN VOCABULAIRE
#
#
#

#
# PAGINA'S (REPRESENTATIONS)
#

# Vocabulairepagina
stage:VocabulairePagina	a	elmo:Representation;
	elmo:url-pattern "/query/vocabulary";
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxMenu;
	elmo:contains stage:search_models;
	elmo:appearance elmo:VocabularyAppearance;
	elmo:queryForm stage:TaxSelectModel;
	elmo:query stage:VocabulaireQuery;
.

#
# FORMS
#

stage:TaxSelectModel a elmo:Form;
	rdfs:label "Selecteer model";
	elmo:index "2";
    elmo:fragment [
        elmo:applies-to "model";
        rdfs:label "Selecteer model"@nl;
        rdfs:label "Select model"@en;
        elmo:valuesFrom stage:search_models;
        elmo:constraint elmo:MandatoryConstraint;
        elmo:index "2";
    ];
    elmo:fragment [
        elmo:appearance elmo:SubmitAppearance;
        rdfs:label "Ga verder"@nl;
        elmo:index "3";
    ]
.

# PARTS

# Zoeken van modellen
stage:search_models a elmo:Part;
    elmo:appearance elmo:HiddenAppearance;
    elmo:query '''
        CONSTRUCT {
			?model rdfs:label ?label
		}
        WHERE {
            SELECT *
            WHERE {
				GRAPH ?g {
					?model a owl:Ontology.
					?model rdfs:label ?label.
				}
				FILTER regex(?g, "^http://pdok-ld-gck.in.kadaster.nl/(?!stage)")
            }
            LIMIT 100
        }
		ORDER BY DESC(?label)
    ''';
.

# QUERY'S

# Query voor Vocabulairepagina
stage:VocabulaireQuery a elmo:Query;
	elmo:query '''
		prefix dct: <http://purl.org/dc/terms/>
		prefix sh: <http://www.w3.org/ns/shacl#>
		CONSTRUCT {
			?element rdf:type ?type.
			?element rdfs:label ?label.
			?element rdfs:comment ?def.
			?element rdfs:subClassOf ?super.
			?shape sh:targetClass ?element.
			?shape sh:property ?pc.
			?pc sh:path ?pred.
			?pc sh:valueClass ?class.
			?pc sh:datatype ?datatype.
			?pc sh:in ?collection.
		}
		WHERE {
			GRAPH <@MODEL@> {
				?element rdf:type ?type.
				OPTIONAL {?element rdfs:label ?label}
				OPTIONAL {?element rdfs:comment ?def}
				OPTIONAL {
					?element dct:subject ?begrip.
					?begrip skos:definition ?def.
				}
				OPTIONAL {?element rdfs:subClassOf ?super}
				OPTIONAL {
					?shape sh:targetClass ?element.
					?shape sh:property ?pc.
					?pc sh:path ?pred.
					OPTIONAL {?pc sh:valueClass ?class}
					OPTIONAL {?pc sh:datatype ?datatype}
					OPTIONAL {?pc sh:in ?collection}
				}
			}
		}
	'''
.
 
#
#
#
# SEARCH
#
#
#



#
# PAGINA'S (REPRESENTATIONS)
#

# Standaard zoekpagina
stage:TaxSearch a elmo:Representation;
	elmo:url-pattern "query/search";
	elmo:contains stage:TaxMenu;
	elmo:contains stage:TaxFooter;
	elmo:contains stage:TaxIndexConcepten;
	elmo:query stage:TaxSearchQuery;
.


#
# QUERY'S
#

# Zoekquery
stage:TaxSearchQuery a elmo:Query;
	elmo:query '''
		prefix prov: 		<http://www.w3.org/ns/prov#>
		prefix skoslex: 	<http://bp4mc2.org/def/skos-lex/>
		prefix container: 	<http://pdok-ld-gck.in.kadaster.nl/container/>
		prefix doc: 		<http://pdok-ld-gck.in.kadaster.nl/concepten/doc/>
		prefix dataset: 	<http://pdok-ld-gck.in.kadaster.nl/id/dataset/>
		prefix concept: 	<http://pdok-ld-gck.in.kadaster.nl/id/concept/>
		prefix kddef:		<http://kadaster.basisregistraties.overheid.nl/som/def#>
		prefix kdstat:		<http://kadaster.basisregistraties.overheid.nl/id/status/>
		
		SELECT ?concept ?concept_label ?uitleg
		WHERE {
			GRAPH ?g {
				{
					?concept rdf:type skos:Concept.
					?concept rdfs:label ?concept_label.
					?concept kddef:status ?status.
					OPTIONAL {
						?concept rdfs:comment ?uitleg
					}
				}
				UNION
				{
					?concept rdf:type skos:Concept.
					?concept skos:altLabel ?concept_label.
					?concept kddef:status ?status.
					OPTIONAL {
						?concept rdfs:label ?clabel.
						?concept rdfs:comment ?definition.
						BIND( CONCAT( "(Synoniem voor: ", ?clabel, ") ", ?definition ) AS ?uitleg )
					}
				}
				FILTER regex(?concept_label, '@TERM@', 'i').
				FILTER NOT EXISTS {
					?concept prov:invalidatedAtTime ?time.
				}
				FILTER (
					?status = kdstat:Gevalideerd ||
					?status = kdstat:Geverifieerd
				)
				FILTER( LANG( ?concept_label ) = "" || LANGMATCHES( LANG( ?concept_label ), "nl" ) )
			}
			GRAPH doc:mastergraph {
				?concept rdfs:isDefinedBy ?g
			}
		}
		ORDER BY str(lcase(?concept_label))
		LIMIT 100
	''';
.
 
