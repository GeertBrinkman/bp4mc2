#
#
#
# BEHEER DATASETS
#
#
#

#
# CONTAINERS
#

# Uploadcontainer datasets
container:datasetupdate a elmo:Container;
	elmo:contains stage:DSOBeheermenu;
	elmo:contains stage:DSOHeader;
	elmo:contains stage:DSOFooter;
	elmo:representation elmo:UploadRepresentation;
	rdfs:label "Upload Dataset beschrijving (RDF of Turtle)";
	elmo:query stage:DSODatasetUploadScene;
	elmo:fragment [
		elmo:applies-to "model";
		rdfs:label "Selecteer model"@nl;
		elmo:constraint elmo:MandatoryConstraint;
		elmo:index "1";
	];
	elmo:assertion [
		rdfs:label "De upload mag geen datasets zonder dct:title bevatten.";
		elmo:assert-not '''
			prefix container: <http://localhost:8080/catalogus/dso/container/>
			prefix dct: <http://purl.org/dc/terms/>
			ASK {
				GRAPH container:datasetupdate {
					?s rdf:type ?type.
					FILTER NOT EXISTS {
						?s dct:title ?title.
					}
				}
			}
		''';
	];
	elmo:assertion [
		rdfs:label "De upload mag geen datasets zonder skos:ConceptScheme bevatten.";
		elmo:assert-not '''
			prefix container: <http://localhost:8080/catalogus/dso/container/>
			prefix dcat: <http://www.w3.org/ns/dcat#>
			ASK {
				GRAPH container:datasetupdate {
					?s rdf:type ?type.
					FILTER NOT EXISTS {
						?s rdf:type skos:ConceptScheme.
					}
				}
			}
		''';
	];
	elmo:assertion [
		rdfs:label "De upload mag geen datasets zonder dcat:Dataset bevatten.";
		elmo:assert-not '''
			prefix container: <http://localhost:8080/catalogus/dso/container/>
			prefix dcat: <http://www.w3.org/ns/dcat#>
			ASK {
				GRAPH container:datasetupdate {
					?s rdf:type ?type.
					FILTER NOT EXISTS {
						?s rdf:type dcat:Dataset.
					}
				}
			}
		''';
	];
.

#
# PRODUCTIONS
#

updatestage:syncDataset a elmo:Production;
	elmo:contains stage:DSOBeheermenu;
	elmo:contains stage:DSOHeader;
	elmo:contains stage:DSOFooter;
	elmo:queryForm stage:DSOSelectDataset;
	elmo:contains stage:DSOUploadScenePUT;
.

#
# FORMS
#

# Selecteer dataset 
stage:DSOSelectDataset a elmo:Form;
	rdfs:label "Selecteer dataset";
	elmo:index "1";
	elmo:fragment [
		elmo:applies-to "dataset";
		rdfs:label "Selecteer dataset"@nl;
		elmo:valuesFrom stage:search_datasets;
		elmo:constraint elmo:MandatoryConstraint;
		elmo:index "1";
	];
	elmo:fragment [
		elmo:appearance elmo:SubmitAppearance;
		rdfs:label "Ga verder"@nl;
		elmo:index "2";
	];
.

#
# PARTS
#

# Zoeken van datasets
stage:search_datasets a elmo:Part;
	elmo:appearance elmo:HiddenAppearance;
	elmo:query '''
		prefix dcat: <http://www.w3.org/ns/dcat#>
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix doc: <http://localhost:8080/catalogus/dso/concepten/doc/>
		prefix dct: <http://purl.org/dc/terms/>
		
		CONSTRUCT {
			?dataset rdfs:label ?dataset_label
		}
		WHERE {
			GRAPH ?g {
				?dataset rdf:type skos:ConceptScheme.
				?dataset rdfs:label ?dataset_label.
				FILTER NOT EXISTS {
					?dataset prov:invalidatedAtTime ?time.
				}
			}
			GRAPH doc:mastergraph {
				?g dct:isVersionOf doc:mastergraph.
			}
		}
		ORDER BY DESC(?dataset_label)
	''';
.

#
# SCENES
#

# Algoritme:
#
# - Verwijder voor de zekerheid de @CURRENTMOMENT@ GRAPH
# - Vul mastergraph aan met nieuwe versie
# - Voeg metadata toe aan nieuwe conceptengraph, activiteitengraph en actorengraph
# - Hash genereren, zodat we kunnen vergelijken of er iets gewijzigd is aan een concept
# - Voeg voor de verwijderde concepten in de oude GRAPH wat metadata toe (prov:invalidatedAtTime)
# - Verwijder de signature van de verwijderde concepten uit de mastergraph
# - Update de aanpasdatum van de Catalogus, CatalogRecord en Dataset
# - Voeg in de nieuwe GRAPH de concepten toe die een andere hash dan de hash in de mastergraph hebben (d.w.z., die gewijzigd zijn)
# - Voeg voor de gewijzigde concepten in de oude GRAPH wat metadata toe (prov:invalidatedAtTime)
# - Verwijder de concepten uit de mastergraph die voorkomen in de nieuwe GRAPH (d.w.z. gewijzigd zijn)
# - Voeg een verwijzing toe in de mastergraph naar de nieuwe GRAPH voor de concepten die in de nieuwe GRAPH staan
# - Verwijder de (tijdelijke) graphs die gebruikt zijn door de uploadcontainers

# Uploadquery datasets
stage:DSODatasetUploadScene a elmo:Scene;
	rdfs:label "Postquery inladen dataset-metadata";
	elmo:index "1";
	elmo:query '''
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix skosxl: <http://www.w3.org/2008/05/skos-xl#>
		prefix dct: <http://purl.org/dc/terms/>
		prefix dctype: <http://purl.org/dc/dcmitype/>
		prefix bp4mc2: <http://bp4mc2.org/elmo/def/>
		prefix foaf: <http://xmlns.com/foaf/0.1/>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
		prefix owl: <http://www.w3.org/2002/07/owl#>
		prefix container: <http://localhost:8080/catalogus/dso/container/>
		prefix doc: <http://localhost:8080/catalogus/dso/concepten/doc/>
		prefix loc: <http://localhost:8080/catalogus/dso/id/>
		prefix versiongraph: <http://localhost:8080/catalogus/dso/datasets/doc/@CURRENTMOMENT@>
		prefix usergraph: <http://localhost:8080/catalogus/dso/>
		prefix dataset: <http://localhost:8080/catalogus/dso/id/dataset/>
		prefix catalogus: <http://localhost:8080/catalogus/dso/id/dataset/>
		prefix activity: <http://localhost:8080/catalogus/dso/id/dataset/@CURRENTMOMENT@>
		prefix xsd: <http://www.w3.org/2001/XMLSchema#>
		prefix iso: <http://id.loc.gov/vocabulary/iso639-1/>
		prefix dcat: <http://www.w3.org/ns/dcat#>
		prefix wdrs: <http://www.w3.org/2007/05/powder-s#>
			
		
		DELETE {
			GRAPH versiongraph:version {
				?s?p?o
			}
		}
		WHERE {
            GRAPH versiongraph:version {
                ?s?p?o
            }
		}
		
		INSERT {
			GRAPH container:datasetupdate {
				?s rdfs:label ?spreflabel.
			}
		} WHERE {
			GRAPH container:datasetupdate {
				?s rdfs:label ?spreflabel.
				FILTER NOT EXISTS {
					?s dct:title ?slabel.
				}
			}
		}
		
		INSERT {
			GRAPH doc:mastergraph {
				doc:mastergraph rdf:type void:Dataset.
				doc:mastergraph rdfs:label "Datasets".
				versiongraph:version dct:isVersionOf doc:mastergraph.
			}
		}
		
		INSERT {
			GRAPH versiongraph:version {
				dataset:Datasets rdfs:isDefinedBy versiongraph:version.
				versiongraph:version rdfs:label "Datasets en distributies - DSO-programma (publicatiedatum @CURRENTMOMENT@)".
				versiongraph:version prov:wasGeneratedBy activity:Upload.
				versiongraph:version rdf:type prov:Entity.
				versiongraph:version prov:generatedAtTime "@CURRENTMOMENT@".
				activity:Upload rdf:type prov:Activity.
				activity:Upload rdfs:label "Upload catalogus @CURRENTMOMENT@".
				activity:Upload prov:startedAtTime "@CURRENTMOMENT@".
				activity:Upload prov:wasAssociatedWith catalogus:tomcatUser.
			}
		}
		
		INSERT {
			GRAPH usergraph:agents {
				catalogus:tomcatUser rdf:type prov:Agent.
				catalogus:tomcatUser rdfs:label "Tomcat User".
				catalogus:tomcatUser foaf:givenName "Tomcat User".
				catalogus:tomcatUser foaf:mbox "tomcat@user.org".
				catalogus:tomcatUser prov:actedOnBehalfOf "Apache".
			}
		}
		
		INSERT {
			GRAPH container:datasetupdate{
				?s wdrs:describedby <@MODEL@>.
				?s dct:issued "@CURRENTMOMENT@".
			}
		}
		WHERE {
			GRAPH container:datasetupdate {
				?s rdf:type ?type.
				FILTER (
					?type = dcat:Dataset
					|| ?type = dcat:Distribution
					|| ?type = dcat:Catalog
				)
			}
		}
		
		INSERT {
			GRAPH container:datasetupdate {
				?s bp4mc2:signature ?sig.
			}
		}
		WHERE {
			SELECT DISTINCT ?s bif:md5(sql:group_concat(concat(?p,'=',?o),';')) as ?sig
			WHERE {
				GRAPH container:datasetupdate {
					SELECT ?s ?p ?o
					WHERE {
						?s ?p ?o.
						?s rdf:type ?type.
						FILTER (
							?type = dcat:Dataset
							|| ?type = dcat:Distribution
							|| ?type = dcat:Catalog
						)
					}
					ORDER BY ?s ?p ?o
				}
            }
		}
		
		INSERT {
			GRAPH versiongraph:version {
				?s ?p ?o
			}
		}
		WHERE {
			GRAPH container:datasetupdate {
				?s rdf:type ?type.
			    ?s ?p ?o.
			    ?s bp4mc2:signature ?sig
				FILTER (
					?type = dcat:Dataset
					|| ?type = dcat:Distribution
					|| ?type = dcat:Catalog
				)
			}
			FILTER NOT EXISTS {
				GRAPH doc:mastergraph {
					?s bp4mc2:signature ?sig
				}
			}
		}
		
		INSERT {
			GRAPH ?g {
				?s prov:invalidatedAtTime "@CURRENTMOMENT@".
				?s dct:modified "@CURRENTMOMENT@".
			}
		}
		WHERE {
			GRAPH doc:mastergraph {
				?s rdfs:isDefinedBy ?g
			}
			GRAPH versiongraph:version {
				?s rdf:type ?type.
				FILTER (
					?type = dcat:Dataset
					|| ?type = dcat:Distribution
					|| ?type = dcat:Catalog
				)
			}
			FILTER NOT EXISTS {
				GRAPH ?g {
					?s prov:invalidatedAtTime ?time.
					?s dct:modfied ?time.
				}
			}
		}
		
		DELETE {
			GRAPH doc:mastergraph {
				?s ?p ?o
			}
		}
		WHERE {
			GRAPH doc:mastergraph {
				?s ?p ?o
			}
			GRAPH versiongraph:version {
				?s rdf:type ?type.
				FILTER (
					?type = dcat:Dataset
					|| ?type = dcat:Distribution
					|| ?type = dcat:Catalog
				)
			}
		}

		INSERT {
			GRAPH doc:mastergraph {
				?s rdf:type ?type.
				?s rdfs:isDefinedBy versiongraph:version.
				?s bp4mc2:signature ?sig
			}
		}
		WHERE {
			GRAPH versiongraph:version {
			    ?s rdf:type ?type.
			    ?s bp4mc2:signature ?sig.
				FILTER (
					?type = dcat:Dataset
					|| ?type = dcat:Distribution
					|| ?type = dcat:Catalog
				)
            }
		}
		
		CLEAR GRAPH container:datasetupdate
	''';
.
