#
#
#
# BEHEER CATALOGUS
#
#
#

@prefix stage: <http://localhost:8080/catalogus/dso/stage#>.
@prefix updatestage: <http://localhost:8080/catalogus/dso/update/>.
@prefix elmo: <http://bp4mc2.org/elmo/def#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xhtml: <http://www.w3.org/1999/xhtml/vocab#>.
@prefix container: <http://localhost:8080/catalogus/dso/container/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix skosax: <http://bp4mc2.org/skosax#>.
@prefix skoslex: <http://bp4mc2.org/def/skos-lex#>.
@prefix thes: <http://purl.org/iso25964/skos-thes#>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix dct: <http://purl.org/dc/terms/>.
@prefix dctype: <http://purl.org/dc/dcmitype/>.
@prefix geosparql: <http://www.opengis.net/ont/geosparql#>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix prov: <http://www.w3.org/ns/prov#>.
@prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>.
@prefix vcard: <http://www.w3.org/2006/vcard/ns#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix iso: <http://id.loc.gov/vocabulary/iso639-1/>.
@prefix dcat: <http://www.w3.org/ns/dcat#>.

#
# CONTAINERS
#

# Uploadcontainer Catalogus
container:catalogusupload a elmo:Container;
	elmo:contains stage:DSOBeheermenu;
	elmo:contains stage:DSOHeader;
	elmo:contains stage:DSOFooter;
	elmo:representation elmo:UploadRepresentation;
	rdfs:label "Upload catalogus-metadata via Turtle (.ttl)";
	elmo:query stage:DSOCatalogusUploadScene;
.

#
# SCENES
#

# Algoritme:
#
# - Verwijder voor de zekerheid de @CURRENTMOMENT@ GRAPH
# - Vul mastergraph aan met nieuwe versie
# - Voeg metadata toe aan nieuwe conceptengraph, activiteitengraph en actorengraph
# - Hash genereren, zodat we kunnen vergelijken of er iets gewijzigd is aan een concept
# - Voeg voor de verwijderde concepten in de oude GRAPH wat metadata toe (prov:invalidatedAtTime)
# - Verwijder de signature van de verwijderde concepten uit de mastergraph
# - Update de aanpasdatum van de Catalogus, CatalogRecord en Dataset
# - Voeg in de nieuwe GRAPH de concepten toe die een andere hash dan de hash in de mastergraph hebben (d.w.z., die gewijzigd zijn)
# - Voeg voor de gewijzigde concepten in de oude GRAPH wat metadata toe (prov:invalidatedAtTime)
# - Verwijder de concepten uit de mastergraph die voorkomen in de nieuwe GRAPH (d.w.z. gewijzigd zijn)
# - Voeg een verwijzing toe in de mastergraph naar de nieuwe GRAPH voor de concepten die in de nieuwe GRAPH staan
# - Verwijder de (tijdelijke) graphs die gebruikt zijn door de uploadcontainers

# Uploadquery Catalogus
stage:DSOCatalogusUploadScene a elmo:Scene;
	rdfs:label "Postquery inladen Catalogus";
	elmo:index "1";
	elmo:query '''
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix skosxl: <http://www.w3.org/2008/05/skos-xl#>
		prefix dct: <http://purl.org/dc/terms/>
		prefix dctype: <http://purl.org/dc/dcmitype/>
		prefix bp4mc2: <http://bp4mc2.org/elmo/def/>
		prefix foaf: <http://xmlns.com/foaf/0.1/>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex#>
		prefix owl: <http://www.w3.org/2002/07/owl#>
		prefix container: <http://localhost:8080/catalogus/dso/container/>
		prefix doc: <http://localhost:8080/catalogus/dso/concepten/doc/>
		prefix loc: <http://localhost:8080/catalogus/dso/id/>
		prefix versiongraph: <http://localhost:8080/catalogus/dso/catalogus/doc/@CURRENTMOMENT@>
		prefix dataset: <http://localhost:8080/catalogus/dso/id/dataset/>
		prefix catalogus: <http://localhost:8080/catalogus/dso/id/catalogus/>
		prefix activity: <http://localhost:8080/catalogus/dso/id/catalogus/@CURRENTMOMENT@>
		prefix xsd: <http://www.w3.org/2001/XMLSchema#>
		prefix iso: <http://id.loc.gov/vocabulary/iso639-1/>
		prefix dcat: <http://www.w3.org/ns/dcat#>
			
		
		DELETE FROM versiongraph:version {
            ?s?p?o
		}
		WHERE {
            GRAPH versiongraph:version {
                ?s?p?o
            }
		}
		
		INSERT INTO container:catalogusupload {
			?s rdfs:label ?slabel.
		} WHERE {
			GRAPH container:catalogusupload {
				{
					?s skos:prefLabel ?slabel.
					FILTER NOT EXISTS {
						?s rdfs:label ?slabel.
					}
				}
				UNION {
					?s skosxl:prefLabel/skosxl:literalForm ?slabel.
				}
			}
		}
		
		INSERT INTO doc:mastergraph {
            doc:mastergraph rdf:type void:Dataset.
            doc:mastergraph rdfs:label "Concepten".
            versiongraph:version dct:isVersionOf doc:mastergraph.
            dataset:concepten rdf:type skos:ConceptScheme.
            dataset:concepten rdfs:label "Conceptschema".
		}
		
		INSERT INTO versiongraph:version {
            dataset:concepten rdfs:isDefinedBy versiongraph:version.
            versiongraph:version rdfs:label "Catalogusinformatie - DSO-programma (publicatiedatum @CURRENTMOMENT@)".
            versiongraph:version prov:wasGeneratedBy activity:Upload.
			versiongraph:version rdf:type prov:Entity.
			versiongraph:version prov:generatedAtTime "@CURRENTMOMENT@".
			activity:Upload rdf:type prov:Activity.
			activity:Upload rdfs:label "Upload catalogus @CURRENTMOMENT@".
			activity:Upload prov:startedAtTime "@CURRENTMOMENT@".
			activity:Upload prov:wasAssociatedWith catalogus:tomcatUser.
			catalogus:tomcatUser rdf:type prov:Agent.
			catalogus:tomcatUser rdfs:label "Tomcat User".
			catalogus:tomcatUser foaf:givenName "Tomcat User".
			catalogus:tomcatUser foaf:mbox "tomcat@user.org".
			catalogus:tomcatUser prov:actedOnBehalfOf "Apache".
		}

		INSERT INTO container:catalogusupload {
            ?s bp4mc2:signature ?sig.
		}
		WHERE {
			SELECT DISTINCT ?s bif:md5(sql:group_concat(concat(?p,'=',?o),';')) as ?sig
			WHERE {
				GRAPH container:catalogusupload {
					SELECT ?s ?p ?o
					WHERE {
						?s ?p ?o.
						?s rdf:type ?type.
						FILTER (
							?type = dcat:Catalog
							|| ?type = dcat:CatalogRecord
						)
					}
					ORDER BY ?s ?p ?o
				}
            }
		}
		
		INSERT {
			GRAPH ?g {
				?s prov:invalidatedAtTime "@CURRENTMOMENT@"
			}
		}
		WHERE {
			GRAPH doc:mastergraph {
				?s rdfs:isDefinedBy ?g.
				?s rdf:type ?type.
				FILTER (
					?type = dcat:Catalog
					|| ?type = dcat:CatalogRecord
				)
			}
			FILTER NOT EXISTS {
				GRAPH container:catalogusupload {
					?s rdf:type ?type.
					FILTER (
						?type = dcat:Catalog
						|| ?type = dcat:CatalogRecord
					)
				}
			}
			FILTER NOT EXISTS {
				GRAPH ?g {
					?s prov:invalidatedAtTime ?time.
				}
			}
		}
		
		DELETE FROM doc:mastergraph {
			?s bp4mc2:signature ?sig.
		}
		WHERE {
			GRAPH doc:mastergraph {
				?s bp4mc2:signature ?sig.
				?s rdf:type ?type.
				FILTER (
					?type = dcat:Catalog
					|| ?type = dcat:CatalogRecord
				)

			}
			FILTER NOT EXISTS {
				GRAPH container:catalogusupload {
					?s rdf:type ?type.
					FILTER (
						?type = dcat:Catalog
						|| ?type = dcat:CatalogRecord
					)
				}
			}
		}
			
		INSERT INTO versiongraph:version {
			?s ?p ?o
		}
		WHERE {
			GRAPH container:catalogusupload {
				?s rdf:type ?type.
			    ?s ?p ?o.
			    ?s bp4mc2:signature ?sig
				FILTER (
					?type = dcat:Catalog
					|| ?type = dcat:CatalogRecord
				)
			}
			FILTER NOT EXISTS {
				GRAPH doc:mastergraph {
					?s bp4mc2:signature ?sig
				}
			}
		}
		
		INSERT {
			GRAPH ?g {
				?s prov:invalidatedAtTime "@CURRENTMOMENT@"
			}
		}
		WHERE {
			GRAPH doc:mastergraph {
				?s rdfs:isDefinedBy ?g
			}
			GRAPH versiongraph:version {
				?s rdf:type ?type.
				FILTER (
					?type = dcat:Catalog
					|| ?type = dcat:CatalogRecord
				)
			}
			FILTER NOT EXISTS {
				GRAPH ?g {
					?s prov:invalidatedAtTime ?time.
				}
			}
		}
		
		DELETE FROM doc:mastergraph {
			?s ?p ?o
		}
		WHERE {
			GRAPH doc:mastergraph {
				?s ?p ?o
			}
			GRAPH versiongraph:version {
				?s rdf:type ?type.
				FILTER (
					?type = dcat:Catalog
					|| ?type = dcat:CatalogRecord
				)
			}
		}

		INSERT INTO doc:mastergraph {
			?s rdf:type ?type.
			?s rdfs:isDefinedBy versiongraph:version.
			?s bp4mc2:signature ?sig
		}
		WHERE {
			GRAPH versiongraph:version {
			    ?s rdf:type ?type.
			    ?s bp4mc2:signature ?sig.
				FILTER (
					?type = dcat:Catalog
					|| ?type = dcat:CatalogRecord
				)
            }
		}
		
		CLEAR GRAPH container:catalogusupload
	''';
.
