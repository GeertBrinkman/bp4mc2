#
# PAGINA'S (REPRESENTATIONS)
#

# Weergavepagina inclusief versies en grafische weergave
stage:WeergavePaginaConcepten a elmo:Representation;
	elmo:contains stage:BAGMenu;
	elmo:contains stage:BAGHeader;
	elmo:contains stage:BAGFooter;
	elmo:contains stage:BAGTree;
	elmo:contains stage:WeergaveTabelDecisions;
	#elmo:contains stage:WeergaveVersiesDecisions;
	#elmo:contains stage:WeergaveGrafischDecisions;
	elmo:uri-pattern "/id/decision/";
.

#
# HERBRUIKBARE PAGINA-ONDERDELEN (PARTS)
#

# Algemene tabelweergave
stage:WeergaveTabelDecisions a elmo:Part;

	elmo:index "01";
	
	elmo:fragment [
		elmo:applies-to rdfs:label;
		elmo:appearance elmo:HiddenAppearance
	];
	elmo:fragment [
		rdfs:label "Naam"@nl;
		elmo:applies-to dmn:name;
		elmo:index "00";
	];
	elmo:fragment [
		rdfs:label "Uitleg"@nl;
		elmo:applies-to dmn:description;
		elmo:index "02";
	];
	elmo:fragment [
		rdfs:label "Heeft betrekking op"@nl;
		elmo:applies-to skos:semanticRelation;
		elmo:index "03";
	];

	elmo:query stage:WeergaveTabelDecisionQuery;
.

# Grafische weergave
stage:WeergaveGrafischDecisions a elmo:Part;
	elmo:index "10";
	elmo:appearance elmo:GraphAppearance;
	elmo:fragment [
		elmo:applies-to "Concept";
		xhtml:stylesheet '''
			fill: red;
			fill-opacity: .3;
			stroke: #666;
		''';
		elmo:index "3";
	];
	elmo:fragment [
		elmo:applies-to "Collectie";
		xhtml:stylesheet '''
			fill: orange;
			fill-opacity: .3;
			stroke #666;
		''';
		elmo:index "4";
	];
	elmo:fragment [
		elmo:applies-to "Regeling";
		xhtml:stylesheet '''
			fill: gray;
			fill-opacity: .3;
			stroke #666;
		''';
		elmo:index "1";
	];
    elmo:fragment [
        elmo:applies-to "Gegevensklasse";
        xhtml:stylesheet '''
			fill: blue;
			fill-opacity: .3;
			stroke: #666;
		''';
		elmo:index "6";
    ];
	elmo:fragment [
		elmo:applies-to "Norm";
		xhtml:stylesheet '''
			fill: purple;
			fill-opacity: .3;
			stroke #666;
		''';
		elmo:index "2";
	];
	elmo:fragment [
		elmo:applies-to "Act";
		xhtml:stylesheet '''
			fill: yellow;
			fill-opacity: .3;
			stroke #666;
		''';
		elmo:index "2";
	];
	elmo:query stage:WeergaveGrafischDecisionQuery;
.

# Tabel met vorige versies
stage:WeergaveVersiesDecisions a elmo:Part;
	elmo:appearance elmo:TableAppearance;
	elmo:index "90";
	elmo:fragment [
		elmo:applies-to "graph";
		elmo:name "graph";
		elmo:appearance elmo:HiddenAppearance;
	];
	elmo:fragment [
		elmo:applies-to "concept";
		rdfs:label "Andere versies";
		xhtml:link "/catalogus/bag/query/versie"
	];
	elmo:fragment [
		elmo:applies-to "actueeltot";
		rdfs:label "Actueel tot";
	];
	elmo:fragment [
		elmo:applies-to "slabel";
		elmo:appearance elmo:HiddenAppearance
	];
	elmo:fragment [
		elmo:applies-to "graphlabel";
		rdfs:label "Datum versie"@nl;
	];
	
	elmo:query stage:WeergaveVersiesDecisionQuery;
.

#
# QUERY'S GRAFISCHE WEERGAVEN
#

# Query voor grafische weergave concepten e.d.
stage:WeergaveGrafischConceptenQuery a elmo:Query;
	elmo:query '''
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix thes: <http://purl.org/iso25964/skos-thes#>
		prefix dc: <http://purl.org/dc/terms/>
		prefix dctype: <http://purl.org/dc/dcmitype/>
        prefix elmo: <http://bp4mc2.org/elmo/def#>
		prefix sh: <http://www.w3.org/ns/shacl#>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
		prefix geosparql: <http://www.opengis.net/ont/geosparql#>
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix container: <http://localhost:8080/catalogus/bag/container/>
		prefix doc: <http://localhost:8080/catalogus/bag/concepten/doc/>
		prefix dataset: <http://localhost:8080/catalogus/bag/id/dataset/>
		prefix concept: <http://localhost:8080/catalogus/bag/id/concept/>
		prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>
		prefix tr: <http://localhost:8080/toepasbareregels/>
	
		construct {
			<@IDSUBJECT@> ?p ?o.
			<@IDSUBJECT@> rdfs:label ?concept_label.
			<@IDSUBJECT@> elmo:style ?type.
			?o rdfs:label ?olabel.
			?o elmo:style ?otype.
			?s ?sp <@IDSUBJECT@>.
			?s rdfs:label ?slabel.
			?s elmo:style ?stype.
			?act skoslex:object <@IDSUBJECT@>.
			?act rdfs:label ?actlabel.
			?act elmo:style ?act_type.
			skos:Concept elmo:name "Concept".
			skos:member rdfs:label "Lid van".
			skos:inScheme rdfs:label "Domein".
			skos:semanticRelation rdfs:label "Heeft betrekking op".
			thes:broaderGeneric rdfs:label "Is specialisatie van".
			thes:narrowerGeneric rdfs:label "Is generalisatie van".
			thes:broaderPartitive rdfs:label "Is onderdeel van".
			thes:narrowerPartitive rdfs:label "Bestaat uit".
			dc:source rdfs:label "Heeft als bron".
			skoslex:actor rdfs:label "Heeft als actor".
			skoslex:object rdfs:label "Heeft als object".
			owl:Class elmo:name "Gegevensklasse".
			owl:Class rdfs:label "Heeft als klasse".
			skoslex:Norm elmo:name "Norm".
			skoslex:Act elmo:name "Act".
			dctype:Text elmo:name "Regeling".
			skoslex:affects rdfs:label "Heeft invloed op".
			skoslex:refersTo rdfs:label "Verwijst naar".
			skoslex:classification rdfs:label "Classificatie".
			skos:Collection elmo:name "Collectie".
		}
		WHERE {
			{
				{
					GRAPH ?g {
						<@IDSUBJECT@> rdf:type ?type.
						?g prov:generatedAtTime ?startTime.
						OPTIONAL {
							<@IDSUBJECT@> rdfs:label ?concept_label.
						}
						OPTIONAL {
							<@IDSUBJECT@> ?p ?o.
							FILTER (
								?p = skos:semanticRelation
								|| ?p = thes:broaderGeneric
								|| ?p = thes:narrowerGeneric
								|| ?p = thes:broaderPartitive
								|| ?p = thes:narrowerPartitive
								|| ?p = skoslex:affects
								|| ?p = skoslex:refersTo
								|| ?p = skoslex:object
								|| ?p = skoslex:actor
								|| ?p = skos:closeMatch
								|| ?p = skos:exactMatch
								|| ?p = skos:relatedMatch
								|| ?p = skos:broadMatch
								|| ?p = skos:narrowMatch
								|| ?p = dc:source
							)
						}
						OPTIONAL {
							<@IDSUBJECT@> prov:invalidatedAtTime ?endTime.
						}
						FILTER (
							strdt( ?startTime, xsd:dateTime ) <= "@TIMESTAMP@"^^xsd:dateTime
							&& (
								!bound( ?endTime )
								|| strdt( ?endTime, xsd:dateTime ) > "@TIMESTAMP@"^^xsd:dateTime
							)
						)
					}
					GRAPH doc:mastergraph {
						?g dc:isVersionOf doc:mastergraph.
					}
					OPTIONAL {
						GRAPH ?og {
							?o rdf:type ?otype.
							?og prov:generatedAtTime ?oStartTime.
							?o rdfs:label ?olabel.
							OPTIONAL {
								?o prov:invalidatedAtTime ?oEndTime.
							}
							FILTER (
								strdt( ?oStartTime, xsd:dateTime ) <= "@TIMESTAMP@"^^xsd:dateTime
								&& (
									!bound( ?oEndTime )
									|| strdt( ?oEndTime, xsd:dateTime ) > "@TIMESTAMP@"^^xsd:dateTime
								)
							)
						}
						GRAPH doc:mastergraph {
							?og dc:isVersionOf doc:mastergraph.
						}
					}
					OPTIONAL {
						GRAPH ?altSubjectGraph {
							?s ?sp <@IDSUBJECT@>.
							?s rdf:type ?stype.
							?s rdfs:label ?slabel.
							?altSubjectGraph prov:generatedAtTime ?altStartTime.
							OPTIONAL {
								?s prov:invalidatedAtTime ?altEndTime.
							}
							FILTER (
								strdt( ?altStartTime, xsd:dateTime ) <= "@TIMESTAMP@"^^xsd:dateTime
								&& (
									!bound( ?altEndTime )
									|| strdt( ?altEndTime, xsd:dateTime ) > "@TIMESTAMP@"^^xsd:dateTime
								)
							)	
						}
						GRAPH doc:mastergraph {
							?altSubjectGraph dc:isVersionOf doc:mastergraph.
						}
					}
				}
				FILTER ( substr("@GRAPH@",2) = "GRAPH@" )
			}
			UNION
			{
				{
					GRAPH <@GRAPH@> {
						<@IDSUBJECT@> rdf:type ?type.
						OPTIONAL {
							<@IDSUBJECT@> rdfs:label ?concept_label.
							<@IDSUBJECT@> ?p ?o.
							FILTER (
								?p = skos:semanticRelation
								|| ?p = thes:broaderGeneric
								|| ?p = thes:narrowerGeneric
								|| ?p = thes:broaderPartitive
								|| ?p = thes:narrowerPartitive
								|| ?p = skoslex:affects
								|| ?p = skoslex:refersTo
								|| ?p = skoslex:object
								|| ?p = skoslex:actor
								|| ?p = skos:closeMatch
								|| ?p = skos:exactMatch
								|| ?p = skos:relatedMatch
								|| ?p = skos:broadMatch
								|| ?p = skos:narrowMatch
								|| ?p = dc:source
							)
						}
					}
					OPTIONAL {
						GRAPH ?og {
							?o rdfs:label ?olabel.
							?o rdf:type ?otype.
							?og prov:generatedAtTime ?oStartTime.
							OPTIONAL {
								?o prov:invalidatedAtTime ?oEndTime.
							}
							GRAPH <@GRAPH@> {
								OPTIONAL {
									<@IDSUBJECT@> prov:invalidatedAtTime ?invTime.
								}
							}
							BIND( IF( BOUND( ?invTime ), ?invTime, "@CURRENTMOMENT@"^^xsd:dateTime ) AS ?sEndTime )
							FILTER (
								strdt( ?oStartTime, xsd:dateTime ) <= strdt( ?sEndTime, xsd:dateTime )
								&& (
									!bound( ?oEndTime )
									|| strdt( ?oEndTime, xsd:dateTime ) > strdt( ?sEndTime, xsd:dateTime )
								)
							)	
						}
						GRAPH doc:mastergraph {
							?og dc:isVersionOf doc:mastergraph.
						}
					}
					OPTIONAL {
						GRAPH ?altSubjectGraph {
							?s ?sp <@IDSUBJECT@>.
							?s rdfs:label ?slabel.
							?s rdf:type ?stype.
							?altSubjectGraph prov:generatedAtTime ?altStartTime.		
							OPTIONAL {
								?s prov:invalidatedAtTime ?altEndTime.
							}
							GRAPH <@GRAPH@> {
								OPTIONAL {
									<@IDSUBJECT@> prov:invalidatedAtTime ?altInvTime.
								}
							}
							BIND( IF( BOUND( ?altInvTime ), ?altInvTime, "@CURRENTMOMENT@"^^xsd:dateTime ) AS ?altSEndTime )
							FILTER (
								strdt( ?altStartTime, xsd:dateTime ) <= strdt( ?altSEndTime, xsd:dateTime )
								&& (
									!bound( ?altEndTime )
									|| strdt( ?altEndTime, xsd:dateTime ) > strdt( ?altSEndTime, xsd:dateTime )
								)
							)	
						}
						GRAPH doc:mastergraph {
							?altSubjectGraph dc:isVersionOf doc:mastergraph.
						}
					}
				}
				
				FILTER ( substr("@GRAPH@",2) != "GRAPH@" )
			}
			
			# UNION {
			#	SERVICE <http://almere.pilod.nl/sparql> {
			#		SERVICE <http://data.pdok.nl/sparql> {
			#			GRAPH brt:top10nl-metadata {
			#				{
			#					<@IDSUBJECT@> rdf:type ?type.
			#					OPTIONAL {
			#						<@IDSUBJECT@> rdfs:label ?concept_label.
			#						<@IDSUBJECT@> ?p ?o.
			#						?o rdfs:label ?olabel.
			#						?o rdf:type ?otype.
			#					}
			#				}
			#				UNION {
			#					?s ?sp <@IDSUBJECT@>.
			#					?s rdf:type ?stype.
			#					OPTIONAL {
			#						?s rdfs:label ?slabel.
			#					}
			#				}
			#			}
			#		}
			#	}
			# }
			# UNION {
			#	SERVICE <http://localhost:8080/toepasbareregels/sparql> {
			#		GRAPH tr:functionelestructuur {
			#			?act skoslex:object <@IDSUBJECT@>.
			#			?act rdf:type ?act_type.
			#			OPTIONAL {
			#				?act rdfs:label ?actlabel.
			#			}
			#		}
			#	}
			# }
		}
	''';
.



#
# QUERY'S VOOR PAGINA'S/PARTS
#


# Query voor WeergaveTabel
stage:WeergaveTabelDecisionQuery a elmo:Query;
	elmo:query '''
		prefix skos: <http://www.w3.org/2004/02/skos/core#>
		prefix dct: <http://purl.org/dc/terms/>
		prefix thes: <http://purl.org/iso25964/skos-thes#>
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix dc: <http://purl.org/dc/terms/>
		prefix skoslex: <http://bp4mc2.org/def/skos-lex/>
		prefix container: <http://localhost:8080/catalogus/bag/container/>
		prefix doc: <http://localhost:8080/catalogus/bag/concepten/doc/>
		prefix dataset: <http://localhost:8080/catalogus/bag/id/dataset/>
		prefix concept: <http://localhost:8080/catalogus/bag/id/concept/>
		prefix brt: <http://brt.basisregistraties.overheid.nl/id/dataset/>
		prefix bp4mc2: <http://bp4mc2.org/elmo/def/>
		prefix dcat: <http://www.w3.org/ns/dcat#>
		prefix tr: <http://localhost:8080/toepasbareregels/>
		prefix dmn: <http://www.omg.org/spec/DMN/20151101/dmn#>
		
		construct {
			<@IDSUBJECT@> ?p ?o.
			}
		WHERE {
			{
				{
					{
						GRAPH ?g {
							<@IDSUBJECT@> ?p ?o.
							<@IDSUBJECT@> rdf:type dmn:Decision.
							?g prov:wasGeneratedBy ?a.
							?g prov:generatedAtTime ?sStartTime.
							
							OPTIONAL {
								<@IDSUBJECT@> prov:invalidatedAtTime ?sEndTime.
							}
							OPTIONAL {
								?a rdfs:label ?alabel.
							}
							FILTER (
								strdt( ?sStartTime, xsd:dateTime ) <= "@TIMESTAMP@"^^xsd:dateTime
								&& (
									!bound( ?sEndTime )
									|| strdt( ?sEndTime, xsd:dateTime ) > "@TIMESTAMP@"^^xsd:dateTime
								)
							)
							FILTER (
								?p != rdf:type
								&& ?p != bp4mc2:signature
							)
						}
					}
					OPTIONAL {
						GRAPH ?og {
							?o rdfs:label ?olabel.
							?og prov:generatedAtTime ?oStartTime.
							OPTIONAL {
								?o prov:invalidatedAtTime ?oEndTime.
							}
							FILTER (
								strdt( ?oStartTime, xsd:dateTime ) <= "@TIMESTAMP@"^^xsd:dateTime
								&& (
									!bound( ?oEndTime )
									|| strdt( ?oEndTime, xsd:dateTime ) > "@TIMESTAMP@"^^xsd:dateTime
								)
							)	
						}
					}
					
					FILTER( substr("@GRAPH@",2) = "GRAPH@")
				}
				UNION
				{
					GRAPH <@GRAPH@> {
						<@IDSUBJECT@> ?p ?o.
						<@IDSUBJECT@> rdf:type dmn:Decision.
						<@GRAPH@> prov:wasGeneratedBy ?a.
						<@GRAPH@> prov:generatedAtTime ?sStartTime.
						OPTIONAL {
							<@IDSUBJECT@> prov:invalidatedAtTime ?sEndTime.
						}
					}
					FILTER (
						?p != rdf:type
						&& ?p != bp4mc2:signature
					)
					OPTIONAL {
						GRAPH ?og {
							?o rdfs:label ?olabel.
							?og prov:generatedAtTime ?oStartTime.
							OPTIONAL {
								?o prov:invalidatedAtTime ?oEndTime.
							}
							GRAPH <@GRAPH@> {
								OPTIONAL {
									<@IDSUBJECT@> prov:invalidatedAtTime ?oInvTime.
								}
							}
							BIND( IF( BOUND( ?oInvTime ), ?oInvTime, "@TIMESTAMP@"^^xsd:dateTime ) AS ?oSEndTime )
							FILTER (
								strdt( ?oStartTime, xsd:dateTime ) <= strdt( ?oSEndTime, xsd:dateTime )
								&& (
									!bound( ?oEndTime )
									|| strdt( ?oEndTime, xsd:dateTime ) > strdt( ?oSEndTime, xsd:dateTime )
								)
							)	
						}
					}
					FILTER ( substr("@GRAPH@",2) != "GRAPH@" )
				}
			}
			
			# UNION {
			#	SERVICE <http://almere.pilod.nl/sparql> {
			#		SERVICE <http://data.pdok.nl/sparql> {
			#			GRAPH brt:top10nl-metadata {
			#				<@IDSUBJECT@> ?p ?o.
			#			}
			#			FILTER (
			#				?p != rdf:type
			#				&& ?p != bp4mc2:signature
			#				&& ?p != dct:type
			#				&& ?p != skos:member
			#			)				
			#			OPTIONAL {
			#				?o rdfs:label ?olabel.
			#			}
			#		}
			#	}
			# }
			# UNION {
			#	SERVICE <http://localhost:8080/toepasbareregels/sparql> {
			#		GRAPH tr:functionelestructuur {
			#			?act skoslex:object <@IDSUBJECT@>.
			#			OPTIONAL {
			#				?act rdfs:label ?actlabel.
			#			}
			#		}
			#	}
			# }
		}
	'''
.



#
#					UNION
#					{
#						GRAPH ?g {
#							<@IDSUBJECT@> ?p ?o.
#							<@IDSUBJECT@> rdf:type skos:Concept.
#							?g prov:wasGeneratedBy ?a.
#							?g prov:generatedAtTime ?sStartTime.
#							<@IDSUBJECT@> prov:invalidatedAtTime ?sEndTime.
#							OPTIONAL {
#								?a rdfs:label ?alabel.
#							}
#							FILTER (
#								?p != rdf:type
#								&& ?p != bp4mc2:signature
#								&& ?p != dct:type
#								&& ?p != skos:member
#							)
#							FILTER ( strdt( ?sEndTime, xsd:dateTime ) <= "@TIMESTAMP@"^^xsd:dateTime )
#						}
#						GRAPH doc:mastergraph {
#							<@IDSUBJECT@> rdfs:isDefinedBy ?g.
#						}
#						FILTER NOT EXISTS {
#							GRAPH ?altG {
#								<@IDSUBJECT@> rdf:type skos:Concept.
#								?altG prov:generatedAtTime ?altStartTime.
#								FILTER( strdt( ?altStartTime, xsd:dateTime ) >= strdt( ?sEndTime, xsd:dateTime ) )
#							}
#						}
#					}
#





# Query voor weergave versies
stage:WeergaveVersiesDecisionQuery a elmo:Query;
	elmo:query '''
		prefix prov: <http://www.w3.org/ns/prov#>
		prefix dc: <http://purl.org/dc/terms/>
		prefix container: <http://localhost:8080/catalogus/bag/container/>
		prefix doc: <http://localhost:8080/catalogus/bag/concepten/doc/>
		prefix dataset: <http://localhost:8080/catalogus/bag/id/dataset/>
		prefix concept: <http://localhost:8080/catalogus/bag/id/concept/>
		prefix skos: <http://www.w3.org/2004/02/skos/core#>

		SELECT DISTINCT (<@IDSUBJECT@> as ?concept) ?concept_label ?graph ?actueeltot
		WHERE {
			{
				GRAPH ?graph {
					<@IDSUBJECT@> rdf:type skos:Concept.
					?graph prov:generatedAtTime ?concept_label.
					OPTIONAL {
						<@IDSUBJECT@> prov:invalidatedAtTime ?actueeltot.
					}
				}
				GRAPH ?actualGraph {
					<@IDSUBJECT@> rdf:type skos:Concept.
					?actualGraph prov:generatedAtTime ?startTime.
					OPTIONAL {
						<@IDSUBJECT@> prov:invalidatedAtTime ?endTime.
					}
					FILTER (
						strdt( ?startTime, xsd:dateTime ) <= "@TIMESTAMP@"^^xsd:dateTime
						&& (
							!bound( ?endTime )
							|| strdt( ?endTime, xsd:dateTime ) > "@TIMESTAMP@"^^xsd:dateTime
						)
					)
				}
				GRAPH doc:mastergraph {
					?graph dc:isVersionOf doc:mastergraph.
					?actualGraph dc:isVersionOf doc:mastergraph.
				}
				FILTER( ?graph != ?actualGraph )
				FILTER( substr("@GRAPH@",2) = "GRAPH@" )
			}
			UNION {
				GRAPH ?graph {
					<@IDSUBJECT@> rdf:type skos:Concept.
					?graph prov:generatedAtTime ?concept_label.
					OPTIONAL {
						<@IDSUBJECT@> prov:invalidatedAtTime ?actueeltot.
					}
				}
				GRAPH doc:mastergraph {
					?graph dc:isVersionOf doc:mastergraph
				}	
				FILTER( ?graph != <@GRAPH@> )
				FILTER ( substr("@GRAPH@",2) != "GRAPH@" )
			}
		}
		ORDER BY DESC(lcase(?concept_label))
	'''
.