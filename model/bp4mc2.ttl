@prefix rdf:		<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs:		<http://www.w3.org/2000/01/rdf-schema#>.
@prefix xsd:		<http://www.w3.org/2001/XMLSchema#>.
@prefix owl:		<http://www.w3.org/2002/07/owl#>.
@prefix sh:			<http://www.w3.org/ns/shacl#>.
@prefix dcat:		<http://www.w3.org/ns/dcat#>.
@prefix dct:		<http://purl.org/dc/terms/>.
@prefix dctype:		<http://purl.org/dc/dcmitype/>.
@prefix foaf:		<http://xmlns.com/foaf/0.1/>.
@prefix thes:		<http://purl.org/iso25964/skos-thes#>.
@prefix skos:		<http://www.w3.org/2004/02/skos/core#>.
@prefix skoslex: 	<http://bp4mc2.org/def/skos-lex/>.
@prefix prov:		<http://www.w3.org/ns/prov#>.
@prefix adms: 		<http://www.w3.org/ns/adms#>.
@prefix dqv: 		<http://www.w3.org/ns/dqv#>.
@prefix wdrs:		<http://www.w3.org/2007/05/powder-s#>.
@prefix overheid:	<http://data.ontwikkeling.pdok.nl/gco/def/UNKNOWN#>.
@prefix model:  	<http://data.ontwikkeling.pdok.nl/dso/def/model/>.

### Concept
model:Concept rdf:type sh:NodeShape;
	rdfs:label "Concept";
	rdfs:comment "Concepten zijn, ideeën, betekenissen of (categorieën van) objecten en gebeurtenissen";
	sh:targetClass skos:Concept;
	sh:property model:conceptDomein;
	sh:property model:conceptBron;
	sh:property model:conceptLabel;
	sh:property model:conceptNaam;
	sh:property model:conceptSynoniem;	
	sh:property model:conceptAlternatieveSchrijfwijze;
	sh:property model:conceptDefinitie;
	sh:property model:conceptToelichting;
	sh:property model:conceptUitleg;
	sh:property model:conceptRationale;
	sh:property model:conceptIsSpecialisatieVan;
	sh:property model:conceptIsGeneralisatieVan;
	sh:property model:conceptIsOnderdeelVan;
	sh:property model:conceptBestaatUit;
	sh:property model:conceptHeeftBetrekkingOp;
	sh:property model:conceptIsOngeveerHetzelfdeAls;
	sh:property model:conceptIsHetzelfdeAls;
	sh:property model:conceptZieOok;
	sh:property model:conceptIsBrederDanInAnderSchema;
	sh:property model:conceptIsEngerDanInAnderSchema;
	sh:property model:conceptIsGemaaktDoor;
	sh:property model:conceptIsTopConceptOf;
.
model:conceptDomein rdf:type sh:PropertyShape;
	rdfs:label "Domein";
	rdfs:comment "Het Concept wordt gedefinieerd binnen de context van een conceptschema";
	sh:path skos:inScheme;
	sh:name "skos:inScheme";
	sh:datatype xsd:string;
	sh:minCount 1;
	sh:maxCount 1;
	sh:class skos:ConceptScheme;
.
model:conceptBron rdf:type sh:PropertyShape;
	rdfs:label "Bron";
	rdfs:comment "Een Concept kan zijn ontleend aan een formele bron";
	sh:path dct:source;
	sh:name "dct:source";
	sh:datatype xsd:string;
	sh:maxCount 1;
.
model:conceptLabel rdf:type sh:PropertyShape;
	rdfs:label "Label";
	rdfs:comment "Een concept kan een label hebben";
	sh:path rdfs:label;
	sh:name "rdfs:label";
	sh:datatype xsd:string;
	sh:minCount 1;
	sh:maxCount 1;
.
model:conceptNaam rdf:type sh:PropertyShape;
	rdfs:label "Naam";
	rdfs:comment "Een Concept heeft een voorkeurnaam";
	sh:path skos:prefLabel;
	sh:name "skos:prefLabel";
	sh:datatype xsd:string;
	sh:minCount 1;
	sh:maxCount 1;
.
model:conceptSynoniem rdf:type sh:PropertyShape;
	rdfs:label "Synoniem";
	rdfs:comment "Een Concept kan één of meerder synoniemen hebben";
	sh:path skos:altLabel;
	sh:name "skos:altLabel";
	sh:datatype xsd:string;
.
model:conceptAlternatieveSchrijfwijze rdf:type sh:PropertyShape;
	rdfs:label "Alternatieve schrijfwijze";
	rdfs:comment "De term van een concept kan een alternatieve schrijfwijze hebben, die ook gevonden moet worden bij zoekvragen of indexeren van teksten. Voorbeelde zijn vaak voorkomende foutieve schrijfwijzen of meervoud.";
	sh:path skos:hiddenLabel;
	sh:name "skos:hiddenLabel";
.
model:conceptDefinitie rdf:type sh:PropertyShape;
	rdfs:label "Definitie";
	rdfs:comment "Een begrip heeft een formele definitie";
	sh:path skos:definition;
	sh:name "skos:definition";
	sh:datatype xsd:string;
	sh:minCount 1;
	sh:maxCount 1;
.
model:conceptToelichting rdf:type sh:PropertyShape;
	rdfs:label "Toelichting";
	rdfs:comment "Een Concept kan een toelichting hebben";
	sh:path skos:scopeNote;
	sh:name "skos:scopeNote";
	sh:datatype xsd:string;
	sh:maxCount 1;
.
model:conceptUitleg rdf:type sh:PropertyShape;
	rdfs:label "Uitleg";
	rdfs:comment "Een Concept heeft een uitleg op taalniveau B1 (klare taal)";
	sh:path rdfs:comment;
	sh:name "rdfs:comment";
	sh:datatype xsd:string;
	sh:maxCount 1;
.
model:conceptRationale a sh:PropertyShape;
	rdfs:label "rationale";
	sh:name "skos:editorialNote";
	rdfs:comment "Een concept kent rationale van de definitie";
	sh:path skos:editorialNote;
.
model:conceptIsSpecialisatieVan rdf:type sh:PropertyShape;
	rdfs:label "is specialisatie van";
	rdfs:comment "Een Concept kan een specialisatie van een ander Concept zijn";
	sh:path thes:broaderGeneric;
	sh:name "skos-thes:broaderGeneric";
	sh:datatype xsd:string;
	sh:class skos:Concept;
.
model:conceptIsGeneralisatieVan rdf:type sh:PropertyShape;
	rdfs:label "is generalisatie van";
	rdfs:comment "Een Concept kan een generalisatie van een ander Concept zijn";
	sh:path thes:narrowerGeneric;
	sh:name "skos-thes:narrowerGeneric";
	sh:datatype xsd:string;
	sh:class skos:Concept;
.
model:conceptIsOnderdeelVan rdf:type sh:PropertyShape;
	rdfs:label "is onderdeel van";
	rdfs:comment "Een Concept kan een aanduiding zijn van een onderdeel van iets dat met een ander Concept wordt aangeduid";
	sh:path thes:broaderPartitive;
	sh:name "skos-thes:broaderPartitive";
	sh:datatype xsd:string;
	sh:class skos:Concept;
.
model:conceptBestaatUit rdf:type sh:PropertyShape;
	rdfs:label "bestaat uit";
	rdfs:comment "Een Concept kan een aanduiding zijn van iets dat bestaat uit onderdelen die met andere Concepten worden aangeduid";
	sh:path thes:narrowerPartitive;
	sh:name "skos-thes:narrowerPartitive";
	sh:datatype xsd:string;
	sh:class skos:Concept;
.
model:conceptHeeftBetrekkingOp rdf:type sh:PropertyShape;
	rdfs:label "heeft betrekking op";
	rdfs:comment "Een Concept kan betrekking hebben op een ander Concept";
	sh:path skos:semanticRelation;
	sh:name "skos:semanticRelation";
	sh:datatype xsd:string;
	sh:class skos:Concept;
.
model:conceptIsOngeveerHetzelfdeAls rdf:type sh:PropertyShape;
	rdfs:label "is ongeveer hetzelfde als (in ander Conceptenschema)";
	rdfs:comment "Een Concept in een Conceptenschema kan ongeveer dezelfde betekenis hebben als een Concept in een ander Conceptenschema, maar niet omgekeerd";
	sh:path skos:closeMatch;
	sh:name "skos:closeMatch";
	sh:datatype xsd:string;
	sh:class skos:Concept;
.
model:conceptIsHetzelfdeAls rdf:type sh:PropertyShape;
	rdfs:label "is hetzelfde als (in ander Conceptschema)";
	rdfs:comment "Een Concept in een Conceptenschema kan dezelfde betekenis hebben als een Concept in een ander Conceptenschema";
	sh:path skos:exactMatch;
	sh:name "skos:exactMatch";
	sh:datatype xsd:string;
	sh:class skos:Concept;
.
model:conceptZieOok rdf:type sh:PropertyShape;
	rdfs:label "zie ook (in ander Conceptenschema)";
	rdfs:comment "Een Concept in een Conceptenschema kan gerelateerd aan een Concept in een ander Conceptenschema";
	sh:path skos:relatedMatch;
	sh:name "skos:relatedMatch"; 
	sh:datatype xsd:string;
	sh:class skos:Concept;
.
model:conceptIsBrederDanInAnderSchema rdf:type sh:PropertyShape;
	rdfs:label "is breder dan (in ander Conceptenschema)";
	rdfs:comment "Een Concept in een Conceptenschema kan een bredere betekenis hebben dan een Concept in een ander Conceptenschema";
	sh:path skos:broadMatch;
	sh:datatype xsd:string;
	sh:class skos:Concept;
.
model:conceptIsEngerDanInAnderSchema rdf:type sh:PropertyShape;
	rdfs:label "is enger dan (in ander Conceptenschema)";
	rdfs:comment "Een Concept in een Conceptenschema kan een engere betekenis hebben dan een Concept in een ander Conceptenschema"; 
	sh:path skos:narrowMatch;
	sh:name skos:narrowMatch;
	sh:datatype xsd:string;
	sh:class skos:Concept;
.
model:conceptIsGemaaktDoor rdf:type sh:PropertyShape;
	rdfs:label "is tot stand gekomen door";
	rdfs:comment "Een Entiteit kan tot stand gekomen zijn door een bepaalde handeling";
	sh:path prov:wasGeneratedBy;
	sh:datatype xsd:string;
	sh:minCount 1;
	sh:maxCount 1;
	sh:class prov:Agent;
.
model:conceptIsTopConceptOf rdf:type sh:PropertyShape;
	sh:path skos:topConceptOf;
	sh:name "skos:topConceptOf";
	rdfs:comment "Een concept kan het meest generieke concept zijn binnen een concepten schema";
	sh:datatype xsd:string;
	sh:maxCount 1;
	sh:class skos:ConceptScheme;
.
### Concepteschrijving
model:conceptBeschrijving rdf:type sh:NodeShape;
	rdfs:label "Concept beschrijving";
	sh:property model:conceptBeschrijvingBetreft;
	sh:property model:conceptBeschrijvingType;
.
model:conceptBeschrijvingBetreft rdf:type sh:PropertyShape;
	rdfs:label "betreft";
	rdfs:comment "Een conceptbeschrijving kan het belangrijkste onderwerp van een conceptschema weergeven";
	sh:name "foaf:primaryTopic";
	sh:path foaf:primaryTopic;
	sh:class skos:Concept;
.
model:conceptBeschrijvingType rdf:type sh:PropertyShape;
	rdfs:label "rol van entiteit";
	rdfs:comment "Een conceptbeschrijving vervult de rol van entiteit";
	sh:path rdf:type;
	sh:hasValue prov:Entity;
.
### Activiteit
model:Activiteit rdf:type sh:NodeShape;
	rdfs:label "Activiteit";
	rdfs:comment "Een concept welke een handeling beschrijft. Een activiteit is een juridische constructie die een verzameling van activiteiten weergeeft, uitgevoerd door een Actor met betrekking tot een bepaald Object"; 
	sh:targetClass skoslex:Act;
	sh:name "skoslex:Act";
	sh:property model:activiteitActor;
	sh:property model:activiteitObject;
.
model:activiteitActor rdf:type sh:PropertyShape;
	rdfs:label "actor";
	sh:name "skoslex:actor";
	rdfs:comment "Een handeling wordt uitgevoerd door een actor";
	sh:path skoslex:actor;
	sh:class skoslex:Actor;
.
model:activiteitObject rdf:type sh:PropertyShape;
	rdfs:label "object";
	sh:name "skoslex:object";
	rdfs:comment "Een handeling wordt uitgevoerd in relatie tot een object";
	sh:path skoslex:object;
	sh:class skoslex:Object;
.
### Actor
model:Actor rdf:type sh:NodeShape;
	rdfs:label "Actor";
	rdfs:comment "Een Actor is een zeker persoon (individu, groep of organisatie) die een Activiteit uitvoert";
	sh:targetClass skoslex:Actor;
.
### Agent 
model:Agent rdf:type sh:NodeShape;
	rdfs:label "Agent";
	rdfs:comment "Een Agent is een zeker persoon(individu, groep of organisatie) betrokken bij een Activiteit, zonder daadwerkelijk de Activiteit zelf uit te voeren";
	sh:targetClass skoslex:Agent;
.
### Object 
model:Object rdf:type sh:NodeShape;
	rdfs:label "Object";
	rdfs:comment "Een Object is een zeker ding (niet een Actor) dat wordt gemaakt, gebruikt of veranderd gedurende een Activiteit";
	sh:targetClass skoslex:Object;
.
### Norm
model:Norm rdf:type sh:NodeShape;
	rdfs:label "Norm";
	rdfs:comment "Een concept welke een norm beschrijft. Een norm heeft betrekking op een Activiteit. Het impliceert wat wel of niet is toegestaan met betrekking tot een Activiteit. Een Norm vertegenwoordigd een verzameling regels die van toepassing zijn op een Activiteit.";
	sh:targetClass skoslex:Norm;
	sh:property model:normNaam;
	sh:property model:normHeeftInvloedOp;
	sh:property model:normVerwijstNaar;
.
model:normNaam rdf:type sh:PropertyShape;
	rdfs:comment "Een Norm kan een naam hebben";
	sh:path skos:prefLabel;
	sh:datatype xsd:string;
	sh:minCount 1;
	sh:maxCount 1;
.
model:normHeeftInvloedOp rdf:type sh:PropertyShape;
	rdfs:label "Heeft betrekking op";
	rdfs:comment "Heeft betrekking op verbind een Norm met de Activiteit die wordt beinvloed door de Norm. Zo een Activiteit wordt beperkt door de regels die worden geidentificeerd door de Norm"; 
	sh:path skoslex:affects;
	sh:class skoslex:Act;
.
model:normVerwijstNaar rdf:type sh:PropertyShape;
	rdfs:label "Verwijst naar";
	rdfs:comment "Verwijst naar verbind een Norm met de Activiteit waarnaar wordt verwezen door de Norm. Zo een Activiteit heeft een zekere relatie met de Norm, zonder nadere specificatie. De Activiteit kan worden beinvloed door de Norm, maar kan ook een voorwaarde zijn of simpelweg vermeld zijn in de regels";
	sh:path skoslex:refersTo;
	sh:class skoslex:Act;
.
### Collection
model:Collection rdf:type sh:NodeShape;
	rdfs:label "Collectie";
	rdfs:comment "Een collectie is een verzameling van Concepten";
	sh:targetClass skos:Collection;
	sh:name "skos:Collection";
	sh:property model:collectieLabel;
	sh:property model:collectieLid;
	sh:property model:collectieHeeftTopConcept;
.
model:collectieLabel rdf:type sh:PropertyShape;
	rdfs:label "heeft label";
	rdfs:label "Een Collectie heeft een label";
	sh:path rdfs:label;
	sh:datatype xsd:string;
	sh:minCount 1;
	sh:maxCount 1;
.
model:collectieLid rdf:type sh:PropertyShape;
	rdfs:label "heeft lid";
	rdfs:comment "Een collectie heeft één of meerdere leden";
	sh:path skos:member;
	sh:name "skos:memer";
	sh:datatype xsd:string;
	sh:minCount 1;
	sh:class skos:Concept;
.
model:collectieHeeftTopConcept rdf:type sh:PropertyShape;
	rdfs:label "Heeft top concept";
	rdfs:comment "Een Collectie heeft een top concept";
	sh:path skos:hasTopConcept;
	sh:name "skos:hasTopConcept";
	sh:datatype xsd:string;
	sh:maxCount 1;
	sh:class skos:Concept;
.
### Collection beschrijving
model:collectieBeschrijving rdf:type sh:NodeShape;
	rdfs:label "Collectie beschrijving";
	sh:property model:collectieBeschrijvingBetreft;
	sh:property model:collectieBeschrijvingType;
.
model:collectieBeschrijvingBetreft rdf:type sh:PropertyShape;
	rdfs:label "betreft";
	sh:name "foaf:primaryTopic";
	sh:path foaf:primaryTopic;
	sh:class skos:Collection;
.
model:collectieBeschrijvingType rdf:type sh:PropertyShape;
	rdfs:label "rol van entiteit";
	rdfs:comment "Een collectiebeschrijving vervult de rol van entiteit";
	sh:path rdf:type;
	sh:hasValue prov:Entity;
.
### ConceptSchema
model:ConceptSchema rdf:type sh:NodeShape;
	rdfs:label "Concepten Schema";
	rdfs:comment "Het kennis organisatie systeem (KOS) dat gebruikt wordt om een Dataset in uit te drukken";
	sh:name "skos:ConceptScheme";
	sh:targetClass skos:ConceptScheme;
	sh:property model:conceptSchemaNaam;
	sh:property model:conceptSchemaGrondslag;
	sh:property model:conceptSchemaType;
.
model:conceptSchemaNaam rdf:type sh:PropertyShape;
	rdfs:comment "De naam van het Concept Schema";
.
model:conceptSchemaGrondslag rdf:type sh:PropertyShape;
	rdfs:comment "De verwijzing naar de tekst die dient als grondslag voor het gehanteerde Concept Schema";
	rdfs:label "grondslag";
	sh:path model:conceptSchemaType;
	sh:class dctype:Text;
.
model:conceptSchemaType rdf:type sh:PropertyShape;
	rdfs:label "rol van dataset";
	rdfs:comment "Een begrippenkader vervult de rol van dataset";
	sh:path rdf:type;
	sh:hasValue dcat:Dataset;
.
### Informatieproduct 
model:Informatieproduct rdf:type sh:NodeShape;
	rdfs:label "Informatieproduct";
	sh:name "Informatieproduct";
	sh:targetClass [rdfs:subClassOf dcat:Dataset];
.
### Informatiemodel
model:Informatiemodel rdf:type sh:NodeShape;
	rdfs:label "Informatiemodel";
	rdfs:comment "Beschrijving van een informatiemodel in termen van gegevenskalssen, eigenschappen en waardenlijsten, inclusief de relaties naar concepten";
	sh:name "adms:Asset";
	sh:targetClass adms:Asset;
	sh:property model:informatiemodel_naam;
	sh:property model:informatiemodel_beschrijving;
	sh:property model:informatiemodel_versie;
	sh:property model:informatiemodel_publicatiedatum;
	sh:property model:informatiemodel_releaseNotes;
	sh:property model:informatiemodel_betreft;
	sh:property model:informatiemodel_type;
.
model:informatiemodel_naam rdf:type sh:PropertyShape;
	rdfs:label "naam";
	sh:name "dcterms:title";
	rdf:value "IMKAD";
	sh:path dct:title;
.
model:informatiemodel_beschrijving rdf:type sh:PropertyShape;
	rdfs:label "beschrijving";
	sh:name "dcterms:description";
	rdf:value "<beschrijving>";
	sh:path dct:description;
.
model:informatiemodel_versie rdf:type sh:PropertyShape;
	rdfs:label "versie";
	sh:name "adms:version";
	sh:path adms:version;
.
model:informatiemodel_publicatiedatum rdf:type sh:PropertyShape;
	rdfs:label "publicatiedatum";
	sh:name "dcterms:issued";
	sh:path dct:issued;
.
model:informatiemodel_releaseNotes rdf:type sh:PropertyShape;
	rdfs:label "release notes";
	sh:name "adms:versionNotes";
	rdf:value "<release notes>";
	sh:path adms:versionNotes;
.
model:informatiemodel_betreft rdf:type sh:PropertyShape;
	rdfs:label "betreft";
	sh:name "foaf:primaryTopic";
	sh:path foaf:primaryTopic;
	sh:class skos:ConceptScheme;
.
model:informatiemodel_type rdf:type sh:PropertyShape;
	rdfs:label "rol van entiteit";
	sh:path rdf:type;
	sh:hasValue prov:Entity;
.
### Provenance Entiteit
model:ProvenanceEntiteit rdf:type sh:NodeShape;
	rdfs:label "Provenance Entiteit";
	sh:property model:provenanceEntiteitIsAfgeleidVan;
	sh:property model:provenanceEntiteitIsAangemaaktDoor;
.
model:provenanceEntiteitIsAfgeleidVan rdf:type sh:PropertyShape;
	sh:predicate prov:wasDerivedFrom;
	sh:datatype xsd:string;
	sh:class prov:Entity;
.
model:provenanceEntiteitIsAangemaaktDoor rdf:type sh:PropertyShape;
	sh:predicate prov:wasGeneratedBy;
	sh:datatype xsd:string;
	sh:class prov:Activity;
.
### Provenance Activiteit
model:ProvenanceActiviteit rdf:type sh:NodeShape;
	rdfs:label "Provenance Activiteit";
	sh:targetClass prov:Activity;
	sh:property model:provenanceActiviteitIsUitgevoerdDoor;
.
model:provenanceActiviteitIsUitgevoerdDoor rdf:type sh:PropertyShape;
	sh:predicate prov:wasAssociatedWith;
	sh:datatype xsd:string;
	sh:class prov:Agent;
.
### Provenance Agent
model:ProvenanceAgent rdf:type sh:NodeShape;
	rdfs:label "Provenance Agent";
	sh:targetClass prov:Agent;
	sh:property model:provenanceAgentVertegenwoordigt;
.
model:provenanceAgentVertegenwoordigt rdf:type sh:PropertyShape;
	sh:predicate rdfs:range;
	sh:datatype xsd:string;
	sh:class overheid:Organisatie;
.
