@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix req: <http://data.ontwikkeling.pdok.nl/gco/id/requirement/>.
@prefix adms: <http://www.w3.org/ns/adms#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix dcat: <http://www.w3.org/ns/dcat#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix prov: <http://www.w3.org/ns/prov#>.
@prefix dqv: <http://www.w3.org/ns/dqv#>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix dctype: <http://purl.org/dc/dcmitype/>.
@prefix wdrs: <http://www.w3.org/2007/05/powder-s#>.
@prefix skoslex: <http://bp4mc2.org/def/skos-lex#>.
@prefix skosthes: <http://purl.org/iso25964/skos-thes#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix dcmiperiod:   <http://dublincore.org/documents/2006/04/10/dcmi-period/>.
@prefix sd: <http://www.w3.org/ns/sparql-service-description#>.
@prefix frbr: <http://purl.org/vocab/frbr/core#>.
@prefix org: <http://www.w3.org/ns/org#>.
@prefix skostype: <http://bp4mc2.org/id/type/>.

#---------------------
# IMPORT
#---------------------

#Overgenomen uit skos-lex
skoslex:Act rdfs:subClassOf skos:Concept.
skoslex:Object rdfs:subClassOf skos:Concept.
skoslex:Actor rdfs:subClassOf skos:Concept.
skoslex:Agent rdfs:subClassOf skoslex:Actor.

#Overgenomen uit frbr
frbr:Work rdfs:subClassOf frbr:Endeavour.
frbr:Expression rdfs:subClassOf frbr:Endeavour.

#Overgenomen uit prov
prov:Person rdfs:subClassOf prov:Agent.
prov:Organization rdfs:subClassOf prov:Agent.
prov:SoftwareAgent rdfs:subClassOf prov:Agent.

#Overgenomen uit foaf
foaf:Organization rdfs:subClassOf foaf:Agent.

#Overgenomen uit org
org:Organization rdfs:subClassOf foaf:Organization.

#Overgenomen uit adms
adms:Asset rdfs:subClassOf dcat:Dataset.
adms:AssetDistribution rdfs:subClassOf dcat:Distribution.

#Overgenomen uit dqv
dqv:Dimension rdfs:subClassOf skos:Concept.
dqv:Category rdfs:subClassOf skos:Concept.

#Extra
rdf:type sh:name "rdf:type".
dqv:value sh:name "dqv:value".
skos:inScheme sh:name "skos:inScheme".

#---------------------
# CONCEPTEN
#---------------------

#---------------------
# Concept
#---------------------
req:Concept a sh:NodeShape;
  rdfs:label "Begrip"@nl;
  rdfs:label "Concept"@en;
  sh:name "skos:Concept";
  sh:targetClass skos:Concept;
  rdfs:comment "Een begrip is een idee of notitie, een eenheid van denken, een onderwerp van gesprek."@nl;
  rdfs:comment "A  concept is an idea or notion, a unit of thought, a topic in the universe of discourse."@en;
  rdfs:exampple "het begrip 'Perceel' in de BRK"@nl;
  # Datatype properties
  sh:property req:Concept_label;
  sh:property req:Concept_prefLabel;
  sh:property req:Concept_synonym;
  sh:property req:Concept_comment;
  sh:property req:Concept_definition;
  sh:property req:Concept_scopeNote;
  sh:property req:Concept_editorialNote;
  sh:property req:Concept_dcsource;
  # Object properties
  sh:property req:Concept_dctsource;
  sh:property req:Concept_domain;
  sh:property req:Concept_metadata;
  # References to other concepts
  sh:property req:Concept_isRelatedTo;
  sh:property req:Concept_specialisationOf;
  sh:property req:Concept_generalisationOf;
  sh:property req:Concept_partOf;
  sh:property req:Concept_consistsOf;
  # References to other concepts in other concept schemes
  sh:property req:Concept_seeAlso;
  sh:property req:Concept_closelyMatches;
  sh:property req:Concept_exactlyMatches;
  sh:property req:Concept_broadlyMatches;
  sh:property req:Concept_narrowlyMatches
.
# Datatype properties
req:Concept_label a sh:PropertyShape;
  rdfs:label "label (begrip)"@nl;
  rdfs:label "label (concept)"@en;
  sh:name "rdfs:label";
  sh:path rdfs:label;
  rdfs:comment "Een begrip wordt aangeduid met een voor mensen leesbare term (inclusief spaties en diacrieten). Deze is gelijk aan het skos:prefLabel. Uitzondering hierop is de situatie dat binnen 1 conceptschema er vaker dezelfde skos:prefLabel wordt gebruikt. Dit is geen good practice en dient zoveel mogelijk voorkomen te worden. In het geval dat dit toch voorkomt, krijgt het rdfs:label een toevoeging tussen haakjes die het onderscheid aangeeft. Dit label kan meertalig zijn, aangegeven door @nl of @en"@nl;
  rdfs:comment "A concept has a human-readable label (including spaces and diacritics). This is equal to the skos: prefLabel. An exception to this is the situation that within one concept scheme the same skos:prefLabel is used more than once. This is not a good practice and should be avoided as much as possible. In case this occurs nonetheless, the rdfs: label gets an addition between brackets that indicates the distinction. This label can be multilingual, indicated by @nl or @en"@en;
  skos:example '''"Kadastraal perceel"@nl / "Cadastral parcel"@en'''@nl;
  sh:minCount 1;
  sh:severity sh:Violation;
  sh:message "Een begrip wordt altijd aangeduid met een voor mensen leesbare term"@nl;
  sh:message "A concept always has a human readable label"@en
.
req:Concept_prefLabel a sh:PropertyShape;
  rdfs:label "voorkeursterm"@nl;
  rdfs:label "preferred label"@en;
  sh:name "skos:prefLabel";
  sh:path skos:prefLabel;
  rdfs:comment "Een begrip heeft een voor mensen leesbare voorkeursterm. Er is precies 1 voorkeursterm in de voorkeurstaal (dit veld is dus niet meertalig). Het is een good practice dat ieder begrip binen 1 begrippenkader een uniek prefLabel heeft."@nl;
  rdfs:comment "A concept has a human-readable preferred label. There is exactly one preferred label in the preferred language (this field is not multilingual). It is good practice that in 1 concept scheme each concept has a unique prefLabel."@en;
  skos:example "Kadastraal perceel"@nl;
  sh:minCount 1;
  sh:maxCount 1;
  sh:severity sh:Violation;
  sh:message "Een begrip heeft altijd 1 voorkeursterm."@nl;
  sh:message "A concept always has 1 preferred label"@en
.
req:Concept_synonym a sh:PropertyShape;
  rdfs:label "alternatieve aanduiding"@nl;
  rdfs:label "alternative label"@en;
  sh:name "skos:altLabel";
  sh:path skos:altLabel;
  rdfs:comment "Een begrip kan een alternatieve aanduiding, een synoniem hebben"@nl;
  rdfs:comment "A concept can have an alternative label, a synonym"@en;
  skos:example "KadastraalPerceel"@nl
.
req:Concept_comment a sh:PropertyShape;
  rdfs:label "uitleg"@nl;
  rdfs:label "comment"@en;
  sh:name "rdfs:comment";
  sh:path rdfs:comment;
  rdfs:comment "Een begrip heeft bij voorkeur een uitleg in ‘klare taal’."@nl;
  rdfs:comment "Preferably a concept has a comment in 'clear language'."@en;
  skos:example "Een perceel is een stuk grond waarvan het Kadaster de grenzen heeft gemeten en dat bij het Kadaster een eigen nummer heeft."@nl;
  sh:minCount 1;
  sh:severity sh:Warning;
  sh:message "Een begrip heeft bij voorkeur uitleg in ‘klare taal’."@nl;
  sh:message "Prefably a concept always has comment in 'clear language'"@en
.
req:Concept_definition a sh:PropertyShape;
  rdfs:label "definitie"@nl;
  rdfs:label "definition"@en;
  sh:name "skos:definition";
  sh:path skos:definition;
  rdfs:comment "Een begrip kan een formele definitiehebben. Deze wordt waar mogelijk overgenomen uit een officiële publicatie."@nl;
  rdfs:comment "A concept can have a formal definition. If possible this is taken from a formal publication."@en;
  skos:example "Een perceel is een begrensd deel van het Nederlands grondgebied dat kadastraal geïdentificeerd is en met kadastrale grenzen begrensd is."@nl;
  sh:minCount 1;
  sh:severity sh:Warning;
  sh:message "Een begrip heeft bij voorkeur een formele definitie"@nl;
  sh:message "Prefably a concept always has a formal definition"@en
.
req:Concept_scopeNote a sh:PropertyShape;
  rdfs:label "toelichting"@nl;
  rdfs:label "scope note"@en;
  sh:name "skos:scopeNote";
  sh:path skos:scopeNote;
  rdfs:comment "Een begrip kan nader worden toegelicht."@nl;
  rdfs:comment "A concept can be explained."@en;
  skos:example "Een perceel is een (2D) vlakvormig ruimtelijk object dat "opdelend" van structuur is. Dit betekent dat Nederland altijd naadloos en volledig is bedekt met perceelsvlakken, die elkaar niet mogen overlappen."@nl
.
req:Concept_EditorialNote a sh:PropertyShape;
  rdfs:label "redactionele opmerking"@nl;
  rdfs:label "editorial note"@en;
  sh:name "skos:editorialNote";
  sh:path skos:editorialNote;
  rdfs:comment "Een begrip kan een redactionele opmerking hebben."@nl;
  rdfs:comment "A concept can have an editorial comment."@en;
  skos:example "Dit begrip wordt nog gewijzigd bij het invoeringsbesluit."@nl
.
req:Concept_dcsource a sh:PropertyShape;
  rdfs:label "geschreven bron"@nl;
  rdfs:label "written source"@en;
  sh:name "dc:source";
  sh:path dc:source;
  rdfs:comment "Een begrip is ontleend aan een geschreven bron."@nl;
  rdfs:comment "A concept can be derived from a written source."@en;
  skos:example "Europees verdrag voor de rechten van de mens"@nl
.
# Object properties
req:Concept_dctsource a sh:PropertyShape;
  rdfs:label "bron op het web"@nl;
  rdfs:label "source on the web"@en;
  sh:name "dcterms:source";
  sh:path dcterms:source;
  rdfs:comment "Een begrip kan zijn ontleend aan een bron die direct als'resource' op het web vindbaar is."@nl;
  rdfs:comment "A concept can be derived from a source that can be found directly on the web as a 'resource'.."@en;
  sh:node [ sh:xone (req:Bron req:Brondocument)];
  skos:example "<jci1.3:c:BWBR0005416&titel=IV&hoofdstuk=XV&paragraaf=3&artikel=222>"@nl
.
req:Concept_domain a sh:PropertyShape;
  rdfs:label "domein"@nl;
  rdfs:label "domain"@en;
  sh:name "skos:inScheme";
  sh:path skos:inScheme;
  sh:class skos:ConceptScheme;
  rdfs:comment "Een begrip is gedefinieerd in de context van een bepaald domein."@nl;
  rdfs:comment "A concept is defined in the context of a certain domain."@en;
  skos:example "Basisregistratie Adressen en Gebouwen (BAG)"@nl;
  sh:minCount 1;
  sh:maxCount 1;
  sh:severity sh:Violation;
  sh:message "Een begrip bestaat altijd binnen de context van een domein."@nl;
  sh:message "A concept allways exists in the context of a domain."@en
.
req:Concept_metadata a sh:PropertyShape;
  rdfs:label "herkomst (begrip)"@nl;
  rdfs:label "provenance (concept)"@en;
  sh:path foaf:isPrimaryTopicOf;
  sh:class prov:Entity;
  rdfs:comment "Van een begrip kan de herkomst, geldigheid en status worden beschreven."@nl;
  rdfs:comment "Provenance, validity and status of a concept can be described."@en;
  skos:example "De uitleg van een begrip is aangepast naar aanleiding van een vraag van een klant"@nl;
  sh:minCount 1;
  sh:severity sh:Warning;
  sh:message "Van een begrip wordt bij voorkeur herkomst-, geldigheid- en statusinformatie bijgehouden."@nl;
  sh:message "Prefably provenance, validity and status information is kept on a concept."@en
.
# References to other concepts
req:Concept_isRelatedTo a sh:PropertyShape;
  rdfs:label "gerelateerd aan"@nl;
  rdfs:label "related to"@en;
  sh:name "skos:semanticRelation";
  sh:path skos:semanticRelation;
  sh:class skos:Concept;
  rdfs:comment "Een begrip kan gerelateerd zijn aan een ander begrip."@nl;
  rdfs:comment "A concept can be related to another concept."@en;
  skos:example "Een perceel is gerelateerd aan KadastraleGrens."@nl
.
req:Concept_specialisationOf a sh:PropertyShape;
  rdfs:label "specialisatie van"@nl;
  rdfs:label "specialization of"@en;
  sh:name "skosthes:broaderGeneric";
  sh:path skosthes:broaderGeneric;
  sh:class skos:Concept;
  rdfs:comment "Een begrip kan een specialisatie zijn van een begrip met een bredere betekenis."@nl;
  rdfs:comment "A concept can be a specialization of a concept with a broader meaning."@en;
  skos:example "Een Perceel is een OnroerendGoed."@nl
.
req:Concept_generalisationOf a sh:PropertyShape;
  rdfs:label "generalisatie van"@nl;
  rdfs:label "generalization of"@en;
  sh:name "skosthes:narrowerGeneric";
  sh:path skosthes:narrowerGeneric;
  sh:class skos:Concept;
  rdfs:comment "Een begrip kan een generalisatie zijn van een begrip met een engere of nauwere betekenis."@nl;
  rdfs:comment "A concept can be a generalization of a concept with a narrower meaning."@en;
  skos:example "Een KadastraalObject is een OnroerendGoed of een Registergoed."@nl
.
req:Concept_partOf a sh:PropertyShape;
  rdfs:label "onderdeel van"@nl;
  rdfs:label "part of"@en;
  sh:name "skosthes:broaderPartitive";
  sh:path skosthes:broaderPartitive;
  sh:class skos:Concept;
  rdfs:comment "Een begrip kan gaan over een deel van een breder begrip."@nl;
  rdfs:comment "A concept can be about a part of a broader concept."@en;
  skos:example "Een motor is onderdeel van een schip."@nl
.
req:Concept_consistsOf a sh:PropertyShape;
  rdfs:label "bestaat uit"@nl;
  rdfs:label "consists of"@en;
  sh:name "skosthes:narrowerPartitive";
  sh:path skosthes:narrowerPartitive;
  sh:class skos:Concept;
  rdfs:comment "Een begrip kan kan gaan over een aantal onderdelen."@nl;
  rdfs:comment "A concept can be about several parts."@en;
  skos:example "Een schip bestaat uit een romp, kajuit, motor, ... "@nl
.
# References to other concepts in other concept schemes
req:Concept_seeAlso a sh:PropertyShape;
  rdfs:label "gerelateerd aan"@nl;
  rdfs:label "related to"@en;
  sh:name "skos:relatedMatch";
  sh:path skos:relatedMatch;
  sh:node req:ExternConcept;
  rdfs:comment "Een begrip kan zijn gerelateerd aan een begrip in een ander domein."@nl;
  rdfs:comment "A concepts can be related to a concept in another domain."@en;
  skos:example "Een Perceel in de BRK is gerelateerd aan een adres (Nummeraanduiding) in de BAG."@nl
.
req:Concept_closelyMatches a sh:PropertyShape;
  rdfs:label "vergelijkbaar met"@nl;
  rdfs:label "closely matches with"@en;
  sh:name "skos:closeMatch";
  sh:path skos:closeMatch;
  sh:node req:ExternConcept;
  rdfs:comment "Een begrip kan bijna hetzelfde betekenen als een begrip in een ander domein."@nl;
  rdfs:comment "A concept can have almost the same meaning as a concept in another domain."@en;
  skos:example "Een OnroerendGoed in de BRK is ongeveer hetzelfde als een WOZobject in de WOZ."@nl
.
req:Concept_exactlyMatches a sh:PropertyShape;
  rdfs:label "exact gelijk aan"@nl;
  rdfs:label "exactly matches with"@en;
  sh:name "skos:exactMatch";
  sh:path skos:exactMatch;
  sh:node req:ExternConcept;
  rdfs:comment "Een begrip kan precies hetzelfde betekenen als een begrip in een ander domein."@nl;
  rdfs:comment "A concept can have exactly the same meaning as a concept in another domain."@en;
  skos:example "Een Perceel in het BAL betekent hetzelfde als een Perceel in de BRK."@nl
.
req:Concept_broadlyMatches a sh:PropertyShape;
  rdfs:label "lijkt op breder"@nl;
  rdfs:label "broadly matches with"@en;
  sh:name "skos:broadMatch";
  sh:path skos:broadMatch;
  sh:node req:ExternConcept;
  rdfs:comment "Een begrip kan een specialisatie zijn van een begrip in een ander domein."@nl;
  rdfs:comment "A concept can be a specializaton of a concept in another domain."@en;
  skos:example "Een Appartementsrecht in de BRK is een specialisatie van een Verblijfsobject in de BAG.";@nl
.
req:Concept_narrowlyMatches a sh:PropertyShape;
  rdfs:label "lijkt op smaller"@nl;
  rdfs:label "narrowly matches with"@en;
  sh:name "skos:narrowMatch";
  sh:path skos:narrowMatch;
  sh:node req:ExternConcept;
  rdfs:comment "Een begrip kan een generalisatie zijn van een begrip in een ander domein."@nl;
  rdfs:comment "A concept can be a generalizaton of a concept in another domain."@en;
  skos:example "Een Postadres is een generalisatie van een Nummeraanduiding en een Postbus.";@nl
.

#---------------------
# Extern concept
#---------------------
req:ExternConcept a sh:NodeShape;
  sh:name "skos:Concept (extern)";
  rdfs:label "Extern begrip"@nl;
  rdfs:label "Extern concept"@en;
  rdfs:comment "Een begrip in een ander begrippenkader waarmee een relatie wordt gelegd."@nl;
  rdfs:comment "A concept in another concept scheme, to which is referenced."@en;
  rdfs:exampple "Het begrip Nummeraanduiding in de BAG in relatie tot het begrip Postadres in de BRK"@nl;
  sh:property [
      sh:path rdf:type;
      sh:hasValue skos:Concept;
      sh:minCount 1;
      sh:severity sh:Violation;
      sh:message "Een begrip in een ander begrippenkader waaraan wordt gerefereerd moet bestaan."@nl;
      sh:message "A concept in another concept scheme to which is referred has to exist."@en
  ];
.

#---------------------
# Collection
#---------------------
req:Collection a sh:NodeShape;
  rdfs:label "Collectie"@nl;
  rdfs:label "Collection"@en;
  sh:targetClass skos:Collection;
  sh:name "skos:Collection";
  rdfs:comment "Een groep samenhangende begrippen kan worden gebundeld in een collectie."@nl;
  rdfs:comment "A group of coherent concepts can be bundled in a collection."@en;
  skos:example "De collectie die alle activiteiten in het BAL beschrijft."@nl;
  sh:property req:Collection_label;
  sh:property req:Collection_hasMember;
  sh:property req:Collection_provenance
.
req:Collection_label a sh:PropertyShape;
  rdfs:label "label (collectie)"@nl;
  rdfs:label "label (collecion)"@en;
  sh:path rdfs:label;
  sh:name "rdfs:label";
  rdfs:comment "Een collectie  heeft een voor mensen leesbare naam. Spaties en diacritische tekens zijn daarin toegestaan."@nl;
  rdfs:comment "A collection has a human readable label. Blanks and diacritics are allowed."@en;
  skos:example "De collectie die alle activiteiten in het BAL beschrijft heeft als label 'BAL'";
  sh:minCount 1;
  sh:severity sh:Violation;
  sh:message "Een collectie heeft altijd een label in de moedertaal."@nl;
  sh:message "A collection always has a label in native language."@en
.
req:Collection_hasMember a sh:PropertyShape;
  rdfs:label "heeft lid"@nl;
  rdfs:label "has member"@en;
  sh:name "skos:member";
  sh:path skos:member;
  sh:class skos:Concept;
  rdfs:comment "Een collectie kan één of meerdere begrippen omvatten, die eventueel afkomstig kunnen zijn uit meerdere conceptschema's"@nl;
  rdfs:comment "A collection can contain one or more concepts, that possibly come from multiple concept schemes."@en;
  skos:example "de collectie 'Zakelijke rechten' bevat het begrip 'Erfpacht'"
.
req:Collection_provenance a sh:PropertyShape;
  rdfs:label "herkomst (collectie)"@nl;
  rdfs:label "provenance (collection)"@en;
  sh:path foaf:isPrimaryTopicOf;
  sh:class prov:Entity;
  rdfs:comment "Van een collectie kan de herkomst worden beschreven."@nl;
  rdfs:comment "Provenance of a collection can be described."@en;
  skos:example "Op basis van de nieuwe wet op de BAG is een aantal begrippen toegevoegd aan de collectie 'aard gebruik'";
  sh:minCount 1;
  sh:severity sh:Warning;
  sh:message "Van een collectie wordt bij voorkeur herkomst informatie bijgehouden."@nl;
  sh:message "Prefably provenance information is kept on a collection."@en
.

#---------------------
# Concept scheme
#---------------------
req:ConceptScheme a sh:NodeShape;
  rdfs:label "Begrippenkader"@nl;
  rdfs:label "Concept scheme"@en;
  sh:name "skos:ConceptScheme";
  sh:targetClass skos:ConceptScheme;
  rdfs:comment "De kennis over de fysieke werkelijkheid wordt beschreven in een talig model, een begrippenmodel.  In een begrippenmodel wordt deze kennis zodanig gestructureerd vastgelegd dat deze door zowel mensen als door computers wordt begrepen."@nl;
  rdfs:comment "The knowledge about physical reality is described in a linguistic model, a conceptual model. In a conceptual model, this knowledge is structured in such a way that it is understood by both people and computers."@en;
  skos:example "De thesaurus of taxonomie met alle begrippen in het Kadastrale domein. Deze begrippen vinden hun oorsprong in de Kadasterwet, die beschrijft wat percelen en rechten daarop betekenen."@nl;
  sh:property req:ConceptScheme_type;
  sh:property req:ConceptScheme_label;
  sh:property req:ConceptScheme_hasTopConcept
.
req:ConceptScheme_label a sh:PropertyShape;
  rdfs:label "label"@nl;
  rdfs:label "label"@en;
  sh:path rdfs:label;
  sh:name "rdfs:label";
  rdfs:comment "Een begrippenkader heeft een voor mensen leesbare naam. Spaties en diacritische tekens zijn  toegestaan. "@nl;
  rdfs:comment "A concept scheme has a human readable label. Blanks and diacritics are allowed."@en;
  skos:example "Het schema dat het domein regelgeving beschrijft heeft als label 'Regelgeving'.";
  sh:minCount 1;
  sh:severity sh:Violation;
  sh:message "Een begrippenkader heeft altijd een label in de moedertaal."@nl;
  sh:message "A concept scheme always has a label in the native language."@en
.
req:ConceptScheme_hasTopConcept a sh:PropertyShape;
  rdfs:label "top concept"@nl;
  rdfs:label "top concept"@en;
  sh:path skos:hasTopConcept;
  sh:name "skos:hasTopConcept";
  sh:class skos:Concept;
  rdfs:comment "Een concepten schema kan concepten bevatten die die het meest generiek zijn in een hiërarchie van specialisaties/generalisaties."@nl;
  rdfs:comment "A concept schema can contain concepts that are the most generic in a hierarchy of specializations / generalizations."@en;
  skos:example "Het concept 'Zakelijk recht' als meest generieke concept voor 'Eigendom', 'Opstal', 'Erfpacht', etc."@nl
.
req:ConceptScheme_type a sh:PropertyShape;
  rdfs:label "getypeerd als asset"@nl;
  rdfs:label "typified as asset"@en;
  rdfs:comment "Een begrippenkader kan worden getypeerd als een asset"@nl;
  rdfs:comment "A concept schema can be typified as an asset"@en;
  sh:path rdf:type;
  sh:hasValue adms:Asset
.

#---------------------
# VERSIEBEHEER / PROVENANCE
#---------------------

#---------------------
# CatalogGraph
#---------------------
req:CatalogGraph a sh:NodeShape;
  rdfs:label "Catalogus graph"@nl;
  rdfs:label "Catalogus graph"@en;
  rdfs:comment "De catalogus graph omvat zowel de concrete data (gerepresenteerd door een prov:Entity), als de metadata van de prov:Entity, dat wil zeggen: een sd:Graph"@nl;
  rdfs:comment "The catalog graph contains both the concrete data (represented by a prov: Entity), and the metadata of the prov: Entity, that is: an sd: Graph"@nl;
  sh:name "sd:Graph";
  sh:targetClass sd:Graph;
  sh:property [
    sh:path rdf:type;
    sh:hasValue prov:Entity;
  ];
  sh:property req:CatalogGraph_generatedAtTime;
  sh:property req:CatalogGraph_changeNote;
  sh:property req:CatalogGraph_attributedTo;
.
req:CatalogGraph_generatedAtTime a sh:PropertyShape;
  rdfs:label "registratiemoment"@nl;
  rdfs:comment "De datum en tijd van de administratieve handeling wordt bewaard. Daardoor is altijd terug te halen wat op welk tijdstip aan informatie bekend was."@nl;
  sh:path prov:generatedAtTime;
  sh:name "prov:generatedAtTime";
.
req:CatalogGraph_changeNote a sh:PropertyShape;
  rdfs:label "wijzigingsnotitie"@nl;
  sh:path skos:changeNote;
  sh:name "skos:changeNote";
  rdfs:comment "De rationale van de aanpassing kan worden aangegeven."@nl;
  skos:example "Een tikfout.";
.
req:CatalogGraph_attributedTo a sh:PropertyShape;
  rdfs:label "doorgevoerd door"@nl;
  rdfs:comment "De persoon of organisatie die de wijziging heeft (laten) doorvoeren"@nl;
  sh:name "prov:wasAttributedTo";
  sh:path prov:wasAttributedTo;
  sh:class prov:Agent;
  skos:example "Het Kadaster";
.

req:ProvenanceAgent a sh:NodeShape;
  rdfs:label "Agent"@nl;
  rdfs:comment "Een agent is een persoon die verantwoordelijk is voor een activiteit, de creatie van een entity of een activiteit van een ander"@nl;
  sh:name "prov:Agent";
  sh:targetClass prov:Agent;
  sh:property req:ProvenanceAgent_OnBehalfOf;
  sh:property req:ProvenanceAgent_knownAgent
.
req:ProvenanceAgent_OnBehalfOf a sh:PropertyShape;
  rdfs:label "uitvoerend namens"@nl;
  rdfs:comment "Een persoon of organisatie kan opereren namens een andere persoon of organisatie"@nl;
  skos:example "overheid:Rijkswaterstaat";
  sh:name "prov:actedOnBehalfOf";
  sh:path prov:actedOnBehalfOf;
  sh:class prov:Organization;
.
req:ProvenanceAgent_knownAgent a sh:PropertyShape;
  rdfs:label "geidentificeerd als"@nl;
  rdfs:comment "Een persoon of organisatie is bekend"@nl;
  skos:example "overheid:Rijkswaterstaat";
  sh:path rdf:type;
  sh:hasValue foaf:Agent;
.

req:ProvenancePerson a sh:NodeShape;
  rdfs:label "Persoon"@nl;
  rdfs:comment "Een natuurlijk persoon"@nl;
  sh:name "prov:Person";
  sh:targetClass prov:Person;
.

req:ProvenanceSoftwareAgent a sh:NodeShape;
  rdfs:label "Software agent"@nl;
  rdfs:comment "Software agent, een geautomatiseerd systeem"@nl;
  sh:name "prov:SoftwareAgent";
  sh:targetClass prov:SoftwareAgent;
.

req:ProvenanceOrganization a sh:NodeShape;
  rdfs:label "Organisatie"@nl;
  rdfs:comment "Een organisatie is een sociaal en/of juridisch samenwerkingsverband, zoals een bedrijf, instelling"@nl;
  sh:name "prov:Organization";
  sh:targetClass prov:Organization;
.

# Extra info rondom organizations
req:FoafAgent a sh:NodeShape;
  rdfs:label "Agent"@nl;
  sh:name "foaf:Agent";
  sh:targetClass foaf:Agent;
.
req:FoafOrganization a sh:NodeShape;
  rdfs:label "Organisatie"@nl;
  sh:name "foaf:Organization";
  sh:targetClass foaf:Organization
.
req:OrgOrganization a sh:NodeShape;
  rdfs:label "Organisatie"@nl;
  sh:name "org:Organization";
  sh:targetClass org:Organization;
  sh:property req:OrgOrganization_oin
.
req:OrgOrganization_oin a sh:PropertyShape;
  rdfs:label "heeft OIN"@nl;
  sh:name "org:identifier";
  sh:path org:identifier;
  sh:minCount 1;
  sh:maxCount 1
.

#---------------------
# Metadata
#---------------------

req:Metadata a sh:NodeShape;
  rdfs:label "Metadata"@nl;
  rdfs:label "Metadata"@nl;
  sh:name "prov:Entity";
  sh:targetClass prov:Entity;
  rdfs:comment "Metadata van een versie van een entiteit kan worden beschreven."@nl;
  rdfs:comment "Metadata of a version of an entity can be described."@en;
  skos:example "De juridische geldigheid en/of de adnimistratieve housekeeping (provenance) gegevens van een entiteit"@nl;
  sh:property req:Metadata_status;
  sh:property req:Metadata_isValidDuring;
  sh:property req:Metadata_isvalidWithin;
  sh:property req:Metadata_isIssued;
  sh:property req:Metadata_changeNote;
.
req:Metadata_status a sh:PropertyShape;
  rdfs:label "status"@nl;
  sh:name "adms:status";
  sh:path adms:status;
  sh:node req:Status;
  rdfs:comment "Een versie heeft een administratieve status op basis van de ADMS waardenlijst."@nl;
  rdfs:comment "A version has an administrative status based on the ADMS list of values."@en;
  skos:example "Completed"@nl;
  sh:maxCount 1;
  sh:minCount 1;
  sh:severity sh:Violation;
  sh:message "Een versie heeft een administratieve status op basis van de ADMS waardenlijst."@nl;
  sh:message "A version has an administrative status based on the ADMS list of values."@en
.
req:Metadata_changeNote a sh:PropertyShape;
  rdfs:label "wijzingsnotitie"@nl;
  sh:name "skos:changeNote";
  sh:path skos:changeNote;
  rdfs:comment "Een versie is gemaakt met een bepaalde reden."@nl;
  skos:example "De toelichting is uitgebreid vanwege een onduidelijkheid.";
.
req:Metadata_isValidDuring a sh:PropertyShape;
  rdfs:label "geldig in tijd"@nl;
  sh:name "dcterms:temporal";
  sh:path dcterms:temporal;
  sh:node req:Metadata_Temporal;
  sh:maxCount 1;
  rdfs:comment '''Een versie is formeel/juridisch geldig gedurende een periode.'''@nl;
  skos:example '''22/10/2017 - ''';
.
req:Metadata_isvalidWithin a sh:PropertyShape;
  rdfs:label "geldig in gebied";
  sh:name "dcterms:spatial";
  sh:path dcterms:spatial;
  sh:class dcterms:Location;
  sh:maxCount 1;
  rdfs:comment "Een versie is formeel/juridisch geldig in een gebied."@nl;
.
req:Metadata_isIssued a sh:PropertyShape;
  rdfs:label "bekendgemaakt op"@nl;
  sh:name "dcterms:issued";
  sh:path dcterms:issued;
  sh:maxCount 1;
  rdfs:comment "Een versie is formeel bekend gemaakt op een bepaald moment."@nl;
  skos:example '''21/10/2017 20:21''';
.

req:Metadata_Temporal a sh:NodeShape;
  rdfs:label "Tijdsperiode"@nl;
  sh:property req:Temporal_Start;
  sh:property req:Temporal_End;
.
req:Temporal_Start a sh:PropertyShape;
  rdfs:label "start"@nl;
  sh:name "dcmiperiod:start";
  sh:path dcmiperiod:start;
  rdfs:comment "Een versie is formeel/juridisch geldig vanaf"@nl;
  skos:example "21/10/2017";
  sh:maxCount 1;
.
req:Temporal_End a sh:PropertyShape;
  rdfs:label "einde"@nl;
  sh:name "dcmiperiod:end";
  sh:path dcmiperiod:end;
  rdfs:comment "Een versie is formeel/juridisch geldig tot"@nl;
  skos:example "23/10/2017";
  sh:maxCount 1;
.

req:Status a sh:NodeShape;
  sh:name "Status waardelijst"@nl;
  sh:property [
    sh:path skos:inScheme;
    sh:minCount 1;
    sh:maxCount 1;
  ];
.

#---------------------
# SKOS Lex (legal skos)
#---------------------

#---------------------
# Act, Object, Actor, Agent
#---------------------
req:HandelingAct a sh:NodeShape;
  rdfs:label "Activiteit"@nl;
#  rdfs:comment "An act is a legal construct representing a set of activities, performed by an Actor and with respect to some Object.";
  rdfs:comment "Een activiteit is een juridische constructie als representatie voor een aantal handelingen, uitgevoerd door een Actor met betrekking tot een bepaald Object"@nl;
  sh:targetClass skoslex:Act;
  sh:name "skoslex:Act";
  sh:property req:Handeling_name;
  sh:property req:Handeling_actor;
  sh:property req:Handeling_agent;
  sh:property req:Handeling_object;
  sh:property req:Handeling_refersTo;
.
req:HandelingActor a sh:NodeShape;
  rdfs:label "Actor"@nl;
#  rdfs:comment "An actor is some person (individual, group or organization) that performs some Act";
  rdfs:comment "Een actor is een persoon (individu, groep of organisatie) die een activiteit uitvoert"@nl;
  sh:targetClass skoslex:Actor;
  sh:name "skoslex:Actor";
  sh:property req:Handeling_name;
.
req:HandelingAgent a sh:NodeShape;
  rdfs:label "Agent"@nl;
#  rdfs:comment "An agent is some person (individual, group or organization) involved in some act, without actually performing the act.";
  rdfs:comment "Een agent is een persoon (individu, groep of organisatie) die betrokken is bij een activiteit, zonder daadwerkelijk de activiteit uit te voeren"@nl;
  sh:targetClass skoslex:Agent;
  sh:name "skoslex:Agent";
  sh:property req:Handeling_name;
.
req:HandelingObject a sh:NodeShape;
  rdfs:label "Object"@nl;
#  rdfs:comment "An object is some thing (not an actor) that is created, used or changed during some Act";
  rdfs:comment "Een object is een ding (geen actor) die ontstaat, gebruikt wordt of veranderd gedurende een activiteit"@nl;
  sh:targetClass skoslex:Object;
  sh:name "skoslex:Object";
  sh:property req:Handeling_name;
.

req:Handeling_name a sh:PropertyShape;
  sh:path rdfs:label;
.
req:Handeling_actor a sh:PropertyShape;
#  rdfs:label "is performed by"@en;
  rdfs:label "uitgevoerd door"@nl;
  sh:name "skoslex:actor";
#  rdfs:comment "actor relates an Act with the Actor that performs the act.";
  rdfs:comment "De actor die de act uitvoert"@nl;
  sh:path skoslex:actor;
  sh:class skoslex:Actor;
.
req:Handeling_object a sh:PropertyShape;
  rdfs:label "object"@nl;
  sh:name "skoslex:object";
#  rdfs:comment "object relates an Act with the object that is created, changed or used during the act.";
  rdfs:comment "Het object m.b.t. de activiteit"@nl;
  sh:path skoslex:object;
  sh:class skoslex:Object;
.
req:Handeling_agent a sh:PropertyShape;
  rdfs:label "agent"@nl;
  sh:name "skoslex:agent";
  sh:path skoslex:agent;
  sh:class skoslex:Agent;
#  rdfs:comment "agent relates an Act with the Agent involved in the act.";
  rdfs:comment "De agent betrokken bij de activiteit"@nl;
.
req:Handeling_refersTo a sh:PropertyShape;
  rdfs:label "verwijst naar"@nl;
  sh:name "skoslex:refersTo";
  sh:path skoslex:refersTo;
  sh:class skoslex:Norm;
#  rdfs:comment "refersTo relates a norm with the Act that is refered by the norm. Such an act has some relation with the norm, without further specification. It might be effected by the norm, but could also be a precondition or simply mentioned in the rules.";
  rdfs:comment "De activiteit waar de norm naar verwijst"@nl;
.

#---------------------
# Norm
#---------------------
req:HandelingNorm a sh:NodeShape;
  rdfs:label "Norm"@nl;
#  rdfs:comment "A norm effects an Act. It implies what 'ought' or 'should not' be done with regard to an Act. A norm represents the set of rules that apply to an Act.";
  sh:targetClass skoslex:Norm;
  sh:name "skoslex:Norm";
  sh:property req:Handeling_name;
  sh:property req:Handeling_affects;
.
req:Handeling_affects a sh:PropertyShape;
  rdfs:label "normeert"@nl;
#  rdfs:comment "Affects relates a norm with the Act that is affected by the norm. Such an act is restricted by the rules identified by the norm.";
  rdfs:comment "Verwijst naar de activiteit die wordt genormeerd, beperkt, door de norm"@nl;
  sh:name "skoslex:affects";
  sh:path skoslex:affects;
  sh:class skoslex:Act;
.

#---------------------
# Bron
#---------------------
req:Bron a sh:NodeShape;
  sh:name "frbr:Endeavour (bron)";
  rdfs:label "Bron"@nl;
  rdfs:comment "Een identificeerbare bron die gebruikt is voor informatie die in de Catalogus wordt ontsloten."@nl;
  sh:targetClass frbr:Endeavour;
  sh:property req:Bron_label;
  sh:property req:Bron_isHetOnderwerpVan;
.
req:WerkAlsBron a sh:NodeShape;
  sh:name "frbr:Work (bron)";
  rdfs:label "Werk"@nl;
  rdfs:comment "Een identificeerbare bron, zonder dat expliciet wordt verwezen naar een specifieke versie (bv: 'Artikel 1 Grondwet')"@nl;
  sh:targetClass frbr:Work;
.
req:ExpressieAlsBron a sh:NodeShape;
  sh:name "frbr:Expression (bronversie)";
  rdfs:label "Expressie"@nl;
  rdfs:comment "Een identificeerbare concrete versie van een bron."@nl;
  sh:targetClass frbr:Expression;
.
req:Bron_label a sh:PropertyShape;
  sh:name "rdfs:label";
  rdfs:label "label"@nl;
  rdfs:comment "Een bron heeft een voor mensen leesbaar label";
  sh:path rdfs:label;
  sh:minCount 1;
.
req:Bron_isHetOnderwerpVan a sh:PropertyShape;
  sh:name "foaf:isPrimaryTopicOf";
  rdfs:label "onderwerp van"@nl;
  rdfs:comment "Een bron is het onderwerp van een brondocument"@nl;
  sh:path foaf:isPrimaryTopicOf;
  sh:node req:Brondocument;
  sh:maxCount 1;
.
req:Brondocument a sh:NodeShape;
  sh:name "foaf:Document (brondocument)";
  rdfs:label "Document"@nl;
  rdfs:comment "Een brondocument dat vindbaar is op het internet"@nl;
  sh:property req:Brondocument_label
.
req:Brondocument_label a sh:PropertyShape;
  sh:name "rdfs:label";
  rdfs:label "label"@nl;
  rdfs:comment "Een brondocument heeft een voor mensen leesbaar label"@nl;
  sh:path rdfs:label;
  sh:minCount 1;
.

#---------------------
# Dataset
#---------------------
req:Dataset rdf:type sh:NodeShape;
  rdfs:label "Dataset"@nl;
  sh:name "dcat:Dataset";
  sh:targetClass dcat:Dataset;
  sh:property req:Dataset_name;
  sh:property req:Dataset_dateIssued;
  sh:property req:Dataset_language;
  sh:property req:Dataset_description;
  sh:property req:Dataset_provenance;
  sh:property req:Dataset_publisher;
.

req:Dataset_provenance a sh:PropertyShape;
  sh:path foaf:isPrimaryTopicOf;
  sh:class prov:Entity;
.
req:Dataset_name rdf:type sh:PropertyShape;
  rdfs:label "naam"@nl;
  sh:name "dcterms:title";
  rdfs:comment "De dataset heeft een naam"@nl;
  skos:example ''''Omgevingswet','BAL','BRK', etc'''';
  sh:path dcterms:title
.
req:Dataset_dateIssued rdf:type sh:PropertyShape;
  rdfs:label "publicatiedatum"@nl;
  sh:name "dcterms:issued";
  rdfs:comment "De dataset is op een bepaalde datum gepubliceerd. Dit is de oorspronkelijke publicatiedatum. Het is niet per se de datum van opname van de dataset in de catalogus."@nl;
  skos:example '''1/10/2017''';
  sh:path dcterms:issued
.
req:Dataset_language rdf:type sh:PropertyShape;
  rdfs:label "taal"@nl;
  sh:name "dcterms:language";
  rdfs:comment "De taal waarin de dataset is beschreven (vanwege de compatibiliteit met het DCAT-AP NL)"@nl;
  skos:example "@nl";
  sh:path dcterms:language
.
req:Dataset_description rdf:type sh:PropertyShape;
  rdfs:label "beschrijving"@nl;
  sh:name "dcterms:description";
  rdfs:comment "De dataset heeft een duidelijke beschrijving"@nl;
  skos:example '''Met de Omgevingswet wil de overheid de regels voor ruimtelijke ontwikkeling vereenvoudigen en samenvoegen. Zodat het straks bijvoorbeeld makkelijker is om bouwprojecten te starten. De Crisis- en herstelwet (Chw) maakt dit nu al mogelijk, bijvoorbeeld door bestaande regels aan te passen. Naar verwachting treedt de Omgevingswet in 2019 in werking.''';
  sh:path dcterms:description
.
req:Dataset_publisher a sh:PropertyShape;
  rdfs:label "publicist"@nl;
  sh:name "dcterms:publisher";
  rdfs:comment "Het is bekend door wie een dataset wordt gepubliceerd. Deze organisatie of persoon heeft toestemming om deze handeling uit te voeren"@nl;
  skos:example "overheid:Rijkswaterstaat";
  sh:path dcterms:publisher;
  sh:class foaf:Agent;
.

req:Datasetversie rdf:type sh:NodeShape;
  rdfs:label "Datasetversie"@nl;
  sh:name "dcat:Dataset (versie)";
  sh:property req:Datasetversie_rol;
  sh:property req:Datasetversie_version;
  sh:property req:Datasetversie_versionNotes;
  sh:property req:Datasetversie_distribution;
  sh:property req:Datasetversie_versionOf;
  sh:property req:Datasetversie_describedBy;
  sh:property req:Datasetversie_geometrischeAfbakening;
.

req:Datasetversie_rol a sh:PropertyShape;
  sh:path rdf:type;
  sh:name "rdf:type";
  sh:hasValue dcat:Dataset;
.
req:Datasetversie_version rdf:type sh:PropertyShape;
  rdfs:label "versie"@nl;
  sh:name "adms:version";
  rdfs:comment "De versie van de dataset."@nl;
  sh:path adms:version;
  skos:example "2.1.0";
.
req:Datasetversie_versionNotes rdf:type sh:PropertyShape;
  rdfs:label "versie-notities"@nl;
  sh:name "adms:versionNotes";
  rdfs:comment "Een versie heeft release notes."@nl;
  sh:path adms:versionNotes;
  skos:example '''IMKAD 2.1.0 (publicatie 22-11-2011) is de final draft versie van IMKAD 2 zoals die is aangeboden aan belanghebbenden voor beoordeling. Het commentaar is voor zover mogelijk verwerkt in versie 2.1.1. Deze wijzigingen zijn terug te vinden in de change log.''';
.
req:Datasetversie_distribution a sh:PropertyShape;
  rdfs:label "distributie"@nl;
  sh:path dcat:distribution;
  sh:name "dcat:distribution";
  sh:class dcat:Distribution;
  rdfs:comment "Een dataset kan worden verspreid via verschillende kanalen."@nl;
  skos:example "Digitale Kadastrale Kaart download service.";
.
req:Datasetversie_versionOf a sh:PropertyShape;
  rdfs:label "versie van"@nl;
  sh:path dcterms:isVersionOf;
  sh:name "dcterms:isVersionOf";
  rdfs:comment "Een concrete, geversioneerde dataset is afgeleid van een abstracte dataset. A versioned datasets is derived from the general dataset and a productmodel is derived from an informationmodel"@nl;
  sh:node req:Dataset;
  sh:maxCount 1;
  skos:example "IMKAD 2.1.0 is een concrete versie van IMKAD.";
.
req:Datasetversie_geometrischeAfbakening rdf:type sh:PropertyShape;
    rdfs:label "geografische afbakening"@nl;
    rdfs:comment "Het gebied waar de dataset over gaat"@nl;
    sh:class dcterms:Location;
    skos:example "gemeente Apeldoorn";
    sh:path dcterms:spatial;
    sh:name "dcterms:spatial"
.
req:Datasetversie_isDerivedFrom rdf:type sh:PropertyShape;
  rdfs:label "afgeleid van"@nl;
  rdfs:comment "Een concreet, geversioneerd productmodel is afgeleid van een concreet, geversioneerd informatiemodel."@nl;
  sh:path dcterms:relation;
  sh:name "dcterms:relation";
  sh:class dcat:Dataset;
.
req:Datasetversie_describedBy rdf:type sh:PropertyShape;
  rdfs:label "beschreven door"@nl;
  rdfs:comment "De data in een dataset is beschreven door een informatiemodel."@nl;
  sh:path wdrs:describedBy;
  sh:name "wdrs:describedBy";
  sh:node req:Informatiemodel;
  skos:example '''kadaster.nl/schemas/imkad''';
.

req:Datasetversie_locatie a sh:NodeShape;
  rdfs:label "Locatie"@nl;
  sh:name "dcterms:Location";
.

req:Informatieproduct rdf:type sh:NodeShape;
  rdfs:label "Informatieproduct"@nl;
  sh:name "dcat:Dataset (informatieproduct)";
  sh:property req:Informatieproduct_rol;
  sh:property req:Informatieproduct_version;
  sh:property req:Informatieproduct_versionNotes;
  sh:property req:Informatieproduct_isDerivedFrom;
  sh:property req:Informatieproduct_distribution;
  sh:property req:Informatieproduct_versionOf;
  sh:property req:Informatieproduct_qualityMeasurement;
.

req:Informatieproduct_rol a sh:PropertyShape;
  sh:path rdf:type;
  sh:name "rdf:type";
  sh:hasValue dcat:Dataset;
.
req:Informatieproduct_version rdf:type sh:PropertyShape;
  rdfs:label "versie"@nl;
  sh:name "adms:version";
  rdfs:comment "De versie van het informatieproduct."@nl;
  sh:path adms:version;
  skos:example "2.1.0";
.
req:Informatieproduct_qualityMeasurement a sh:PropertyShape;
  sh:path dqv:hasQualityMeasurement;
  sh:name "dqv:hasQualityMeasurement";
  sh:class dqv:QualityMeasurement;
.
req:Informatieproduct_versionNotes rdf:type sh:PropertyShape;
  rdfs:label "versie-notities"@nl;
  sh:name "adms:versionNotes";
  rdfs:comment "Een versie heeft release notes."@nl;
  sh:path adms:versionNotes;
.
req:Informatieproduct_distribution a sh:PropertyShape;
  rdfs:label "distributie"@nl;
  sh:path dcat:distribution;
  sh:name "dcat:distribution";
  sh:class dcat:Distribution;
  rdfs:comment "Een informatieproduct kan worden verspreid via verschillende kanalen."@nl;
.

#---------------------
# Assets (Informatiemodel)
#---------------------
req:Asset a sh:NodeShape;
  rdfs:label "Asset"@nl;
  sh:name "adms:Asset";
  sh:targetClass adms:Asset;
.
req:Informatiemodel rdf:type sh:NodeShape;
    rdfs:label "Asset (Informatiemodel)"@nl;
    sh:name "adms:Asset (Informatiemodel)";
    sh:property req:Informatiemodel_role;
    sh:property req:Informatiemodel_typeInformatiemodel;
    sh:property req:Informatiemodel_name;
    sh:property req:Informatiemodel_distributie;
    sh:property req:Informatiemodel_landingPage;
.
req:Informatiemodel_landingPage a sh:PropertyShape;
  sh:name "dcat:landingPage";
  rdfs:label "landingspagina"@nl;
  sh:path dcat:landingPage;
  sh:node req:LandingPage;
  sh:maxCount 1;
.
req:Informatiemodel_role a sh:PropertyShape;
  sh:name "rdf:type";
  sh:path rdf:type;
  sh:hasValue adms:Asset;
.
req:Informatiemodel_typeInformatiemodel a sh:PropertyShape;
  rdfs:label "type asset = informatiemodel";
  sh:path dcterms:type;
  sh:name "dcterms:type";
  sh:minCount 1;
  sh:maxCount 1;
  sh:hasValue skostype:Informatiemodel;
.
req:Informatiemodel_name rdf:type sh:PropertyShape;
    rdfs:label "label"@nl;
    sh:name "rdfs:label";
    rdfs:comment "Het informatiemodel heeft een naam";
    skos:example "'IMKAD'";
    sh:path rdfs:label
.

req:Informatiemodel_distributie rdf:type sh:PropertyShape;
  rdfs:label "distributie"@nl;
  sh:name "dcat:distribution";
  sh:path dcat:distribution;
  sh:node req:ModelVoorkomen;
.

skostype:Informatiemodel a skos:Concept;
  rdfs:label "Informatiemodel"@nl;
  sh:name "skostype:Informatiemodel"
.

req:ModelVoorkomen a sh:NodeShape;
  rdfs:label "Modelvoorkomen"@nl;
  sh:name "adms:Distribution";
  sh:targetClass adms:Distribution;
  sh:property req:ModelVoorkomen_accessURL;
  sh:property req:ModelVoorkomen_downloadURL;
  sh:property req:ModelVoorkomen_representationTechnique;
.

req:ModelVoorkomen_accessURL a sh:PropertyShape;
  sh:name "dcat:accessURL";
  sh:path dcat:accessURL;
.

req:ModelVoorkomen_downloadURL a sh:PropertyShape;
  sh:name "dcat:downloadURL";
  sh:path dcat:downloadURL;
  sh:node req:DownloadFormat;
  sh:maxCount 1;
.

req:ModelVoorkomen_representationTechnique a sh:PropertyShape;
  sh:name "adms:representationTechnique";
  sh:path adms:representationTechnique;
  sh:node req:RepresentationTechnique;
.

req:RepresentationTechnique a sh:NodeShape;
  sh:name "Representation technique waardelijst";
  sh:property [
    sh:path skos:inScheme;
    sh:hasValue <http://purl.org/adms/representationtechnique/1.0>;
    sh:minCount 1;
    sh:maxCount 1;
  ];
.

req:Vocabulaire a sh:NodeShape;
  rdfs:label "Vocabulaire"@nl;
  sh:name "owl:Ontology";
  sh:targetClass owl:Ontology;
  sh:property [
    sh:path sh:shapesGraph;
    sh:name "sh:shapesGraph";
    sh:node req:ShapesGraph
  ];
  sh:property [
    sh:path foaf:isPrimaryTopicOf;
    sh:name "foaf:isPrimaryTopicOf";
    sh:node req:LandingPage;
    sh:maxCount 1;
  ]
.
req:ShapesGraph a sh:NodeShape;
  rdfs:label "Shapes graph"@nl;
  sh:name "Shapes graph";
  sh:property [
    sh:path rdfs:label;
    sh:name "rdfs:label";
  ];
.
req:Klasse a sh:NodeShape;
  sh:name "owl:Class";
  sh:targetClass owl:Class;
  sh:property [
    sh:path rdfs:isDefinedBy;
    sh:name "rdfs:isDefinedBy";
    sh:node req:Vocabulaire;
  ];
.
req:NodeShape a sh:NodeShape;
  rdfs:label "node shape"@nl;
  sh:name "sh:NodeShape";
  sh:targetClass sh:NodeShape;
  sh:property [
    sh:path sh:targetClass;
    sh:name "sh:targetClass";
    sh:class owl:Class
  ];
.

#---------------------
# Assets (Waardelijst)
#---------------------

req:Waardelijst rdf:type sh:NodeShape;
    rdfs:label "Asset (Waardelijst)"@nl;
    sh:name "adms:Asset (Waardelijst)";
    sh:property req:Waardelijst_role;
    sh:property req:Waardelijst_typeWaardelijst;
    sh:property req:Waardelijst_name;
    sh:property req:Waardelijst_distributie;
    sh:property req:Waardelijst_specificatie;
    sh:property req:Waardelijst_onderdeelVan;
    sh:property req:Waardelijst_landingPage;
.
req:Waardelijst_role a sh:PropertyShape;
  sh:name "rdf:type";
  sh:path rdf:type;
  sh:hasValue adms:Asset;
.
req:Waardelijst_onderdeelVan a sh:PropertyShape;
  sh:name "dcterms:isPartOf";
  sh:path dcterms:isPartOf;
  sh:node req:Dataset;
  sh:maxCount 1
.
req:Waardelijst_landingPage a sh:PropertyShape;
  sh:name "dcat:landingPage";
  sh:path dcat:landingPage;
  sh:node req:LandingPage;
  sh:maxCount 1;
.
req:Waardelijst_typeWaardelijst a sh:PropertyShape;
  rdfs:label "type asset = Waardelijst";
  sh:path dcterms:type;
  sh:name "dcterms:type";
  sh:minCount 1;
  sh:maxCount 1;
  sh:hasValue skostype:Waardelijst;
.
req:Waardelijst_name rdf:type sh:PropertyShape;
    rdfs:label "label"@nl;
    sh:name "rdfs:label";
    rdfs:comment "De waardelijst heeft een naam"@nl;
    skos:example "'Lijst van landen'";
    sh:path rdfs:label
.

req:Waardelijst_distributie rdf:type sh:PropertyShape;
  rdfs:label "distributie"@nl;
  sh:name "dcat:distribution";
  sh:path dcat:distribution;
  sh:node req:WaardelijstDistributie;
.

req:Waardelijst_specificatie a sh:PropertyShape;
  rdfs:label "specificatie"@nl;
  sh:name "rdfs:isDefinedBy";
  sh:path rdfs:isDefinedBy;
  sh:node req:NodeShape;
.

skostype:Waardelijst a skos:Concept;
  rdfs:label "Waardelijst"@nl;
  sh:name "skostype:Waardelijst"
.

req:WaardelijstDistributie a sh:NodeShape;
  rdfs:label "Waardelijstdistributie"@nl;
  sh:name "adms:Distribution";
  sh:targetClass adms:Distribution;
  sh:property req:WaardelijstDistributie_accessURL;
  sh:property req:WaardelijstDistributie_downloadURL;
  sh:property req:WaardelijstDistributie_representationTechnique;
.

req:WaardelijstDistributie_accessURL a sh:PropertyShape;
  sh:name "dcat:accessURL";
  sh:path dcat:accessURL;
.

req:WaardelijstDistributie_downloadURL a sh:PropertyShape;
  sh:name "dcat:downloadURL";
  sh:path dcat:downloadURL;
  sh:node req:DownloadFormat;
.

req:WaardelijstDistributie_representationTechnique a sh:PropertyShape;
  sh:name "adms:representationTechnique";
  sh:path adms:representationTechnique;
  sh:node req:RepresentationTechnique;
.

req:SchemaWaardelijst a sh:NodeShape;
  sh:name "sh:NodeShape (Begrippenkader)"@nl;
  sh:property req:SchemaWaardelijst_role;
  sh:property req:SchemaWaardelijst_property;
.
req:SchemaWaardelijst_role a sh:PropertyShape;
  sh:name "rdf:type";
  sh:path rdf:type;
  sh:hasValue sh:NodeShape;
.
req:SchemaWaardelijst_property a sh:PropertyShape;
  sh:path sh:property;
  sh:name "sh:property";
  sh:node req:SchemaWaardelijstSpec;
  sh:nodeKind sh:BlankNode;
  sh:minCount 1;
  sh:maxCount 1;
.

req:SchemaWaardelijstSpec a sh:NodeShape;
  sh:name "spec";
  sh:property [
    sh:path sh:path;
    sh:name "sh:path";
    sh:hasValue skos:inScheme;
    sh:minCount 1;
    sh:maxCount 1;
  ];
  sh:property [
    sh:path sh:hasValue;
    sh:name "sh:hasValue";
    sh:class skos:ConceptScheme;
    sh:minCount 1;
    sh:maxCount 1;
  ];
.

req:CollectieWaardelijst a sh:NodeShape;
  sh:name "sh:NodeShape (Collectie)"@nl;
  sh:property req:CollectieWaardelijst_role;
  sh:property req:CollectieWaardelijst_property;
.
req:CollectieWaardelijst_role a sh:PropertyShape;
  sh:name "rdf:type";
  sh:path rdf:type;
  sh:hasValue sh:NodeShape;
.
req:CollectieWaardelijst_property a sh:PropertyShape;
  sh:path sh:property;
  sh:name "sh:property";
  sh:node req:CollectieWaardelijstSpec;
  sh:nodeKind sh:BlankNode;
  sh:minCount 1;
  sh:maxCount 1;
.

req:CollectieWaardelijstSpec a sh:NodeShape;
  sh:name "spec";
  sh:property [
    sh:path sh:path;
    sh:name "sh:path/sh:inversePath = skos:member"; #Hack, propertypaths are not shown correctly
#    sh:hasValue skos:member;
    sh:minCount 1;
    sh:maxCount 1;
  ];
  sh:property [
    sh:path sh:hasValue;
    sh:name "sh:hasValue";
    sh:class skos:Collection;
    sh:minCount 1;
    sh:maxCount 1;
  ];
.

req:Referentielijst a sh:NodeShape;
  sh:name "sh:Nodeshape (Referentielijst)";
  sh:property [
    sh:path rdf:type;
    sh:name "rol";
    sh:hasValue sh:NodeShape;
  ];
  sh:property [
    sh:path sh:property;
    sh:name "sh:property";
    sh:node req:ReferentielijstSpec;
    sh:nodeKind sh:BlankNode;
    sh:minCount 1;
    sh:maxCount 1;
  ];
.
req:ReferentielijstSpec a sh:NodeShape;
  sh:name "spec";
  sh:property [
    sh:path sh:path;
    sh:name "sh:path";
    sh:hasValue rdf:type;
    sh:minCount 1;
    sh:maxCount 1;
  ];
  sh:property [
    sh:path sh:hasValue;
    sh:name "sh:hasValue";
    sh:class owl:Class;
    sh:minCount 1;
    sh:maxCount 1;
  ];
.

#
# Webpages (landingPage, downloadURL)
#
req:LandingPage a sh:NodeShape;
  sh:name "foaf:Document (Landing page)";
  sh:property [
    sh:path rdf:type;
    sh:hasValue foaf:Document;
  ];
.
req:DownloadFormat a sh:NodeShape;
  sh:name "foaf:Document (Download format)";
  sh:property [
    sh:path rdf:type;
    sh:hasValue foaf:Document;
  ];
  sh:property [
    sh:name "dcterms:isFormatOf";
    sh:path dcat:landingPage;
    sh:node req:LandingPage;
  ];
.

#---------------------
# Catalogus
#---------------------
req:Catalogus a sh:NodeShape;
    rdfs:label "Catalogus"@nl;
  sh:name "dcat:Catalog";
    sh:property req:Catalogus_dateModified;
    sh:property req:Catalogus_homepage;
    sh:property req:Catalogus_licence;
    sh:property req:Catalogus_dateIssued;
    sh:property req:Catalogus_name;
    sh:property req:Catalogus_description;
    sh:property req:Catalogus_rights;
    sh:property req:Catalogus_language;
    sh:property req:Catalogus_dataset;
    sh:targetClass dcat:Catalog
.
req:Catalogus_provenance a sh:PropertyShape;
  sh:path foaf:isPrimaryTopicOf;
  sh:class prov:Entity;
.
req:Catalogus_name rdf:type sh:PropertyShape;
    rdfs:label "titel"@nl;
    sh:name "dcterms:title";
    rdfs:comment "De catalogus heeft een titel";
    skos:example "Catalogus Omgevingswet";
    sh:path dcterms:title
.
req:Catalogus_dataset a sh:PropertyShape;
  sh:path dcat:dataset;
  sh:class dcat:Dataset;
  sh:name "dcat:dataset";
.
req:Catalogus_description rdf:type sh:PropertyShape;
    rdfs:label "beschrijving"@nl;
    sh:name "dcterms:description";
    rdfs:comment "De catalogus heeft een duidelijke beschrijving"@nl;
    skos:example "De Catalogus voor de Omgevingswet is een centrale ingang tot het stelsel, waarin wetgeving, begrippen, regels, informatiemodellen, datasets, producten en services met elkaar worden verbonden. De catalogus is daarmee een centrale plek waar de verschillende gebruikersgroepen van het stelsel kunnen zien waar het stelsel uit bestaat, wat begrippen betekenen en hoe de verschillende elementen van het stelsel aan elkaar zijn gerelateerd.";
    sh:path dcterms:description
.
req:Catalogus_dateIssued rdf:type sh:PropertyShape;
    rdfs:label "publicatiedatum"@nl;
  sh:name "dcterms:issued";
    rdfs:comment "De catalogus is op een bepaalde datum gepubliceerd"@nl;
    skos:example "1/10/2016";
    sh:path dcterms:issued
.
req:Catalogus_language rdf:type sh:PropertyShape;
    rdfs:label "taal"@nl;
  sh:name "dcterms:language";
    rdfs:comment "De taal waarin de catalogus is beschreven"@nl;
    skos:example "@nl";
    sh:path dcterms:language
.
req:Catalogus_dateModified rdf:type sh:PropertyShape;
    rdfs:label "wijzigingsdatum"@nl;
    rdfs:comment "De datum waarop iets in de catalogus zelf is veranderd, wordt bewaard, bijvoorbeeld een eigenschap van de catalogus of een nieuwe dataset"@nl;
    skos:example "1/10/2016";
    sh:name "dcterms:modified";
    sh:path dcterms:modified
.
req:Catalogus_homepage rdf:type sh:PropertyShape;
    rdfs:label "homepage"@nl;
    rdfs:comment "De catalogus als portaal is vindbaar op een homepage."@nl;
    skos:example "http://catalogus.kadaster.nl/";
    sh:name "foaf:homepage";
    sh:path foaf:homepage
.
req:Catalogus_licence rdf:type sh:PropertyShape;
    rdfs:label "licentie"@nl;
    rdfs:comment "Een licentie is van toepassing op de catalogus zelf. Dit kan een andere licentie zijn als de licentie voor distributies van datasets"@nl;
    skos:example "Creative Commons Naamsvermelding 4.0 licentie";
    sh:name "dcterms:license";
    sh:path dcterms:license
.
req:Catalogus_rights rdf:type sh:PropertyShape;
    rdfs:label "rechten"@nl;
    rdfs:comment "Een beschrijving van de rechten die van toepassing is op de catalogus. Dit kunnen andere rechten zijn als die voor distributies van datasets"@nl;
    skos:example "Proclaimer: De Catalogus voor de Omgevingswet verbindt definities, toelichtingen en uitleg van begrippen, regels, informatiemodellen, producten en services met elkaar. De datasets waarin deze worden beschreven worden federatief beheerd door de betreffende bronhouders. Bij iedere dataset wordt aangegeven wie de bronhouder is en daarmee verantwoordelijk is voor de inhoud.";
    sh:name "dcterms:rights";
    sh:path dcterms:rights
.

#---------------------
# Distributie
#---------------------
req:Distributie a sh:NodeShape;
  rdfs:label "Distributie"@nl;
  sh:targetClass dcat:Distribution;
  sh:name "dcat:Distribution";
  sh:property req:Distributie_name;
  sh:property req:Distributie_description;
  sh:property req:Distributie_issueDate;
  sh:property req:Distributie_license;
  sh:property req:Distributie_rights;
  sh:property req:Distributie_accessURL;
  sh:property req:Distributie_downloadURL;
  sh:property req:Distributie_provenance;
.
req:Distributie_provenance a sh:PropertyShape;
  sh:path foaf:isPrimaryTopicOf;
  sh:class prov:Entity;
.
req:Distributie_name rdf:type sh:PropertyShape;
  rdfs:label "titel"@nl;
  sh:name "dcterms:title";
  rdfs:comment "De distributie heeft een titel";
  skos:example "Digitale Kadastrale Kaart download service";
  sh:path dcterms:title;
.
req:Distributie_description rdf:type sh:PropertyShape;
  rdfs:label "beschrijving"@nl;
  sh:name "dcterms:description";
  rdfs:comment "De distributie heeft een duidelijke beschrijving."@nl;
  skos:example '''Het Kadaster is houder van de Basisregistratie Kadaster (BRK). Onderdeel van de BRK is de Digitale kadastrale kaart. Deze is beschikbaar als open data en nu via dit portaal ook als Linked Open Data (vooralsnog zonder de topografie).''';
  sh:path dcterms:description;
.
req:Distributie_issueDate rdf:type sh:PropertyShape;
  rdfs:label "publicatiedatum"@nl;
  sh:name "dcterms:issued";
  rdfs:comment "De distributie is op een bepaalde datum gepubliceerd. Dit is de oorspronkelijke publicatiedatum. Het is niet per se de datum van opname van de distributie in de catalogus."@nl;
  skos:example "1/10/2016";
  sh:path dcterms:issued;
.
req:Distributie_license rdf:type sh:PropertyShape;
  rdfs:label "licentie"@nl;
    rdfs:comment "Een licentie is van toepassing op de distributie."@nl;
    skos:example "uri-beerware";
#[IT] skos:example "Creative Commons Naamsvermelding 4.0 licentie";
    sh:path dcterms:license;
  sh:name "dcterms:license";
.
req:Distributie_rights rdf:type sh:PropertyShape;
  rdfs:label "rechten"@nl;
    rdfs:comment "De rechten met betrekking tot de distributie zijn beschreven. Zie ook: svbg:gebruiksvoorwaarden en iso:confidentiality"@nl;
    skos:example '''Wilt u direct aan  de slag met BRK Levering? Raadpleeg dan de reference card bij 'Documenten'. Daarin vindt u de stappen die u moet zetten om met BRK Levering te kunnen starten. Eerste of éénmalige levering tot 100.000 objecten, per object €1,16;tot 1.000.000 objecten, per object €0,98;bij meer dan 1.000.000 objecten, per object €0,73;Gebiedsuitbreiding van een bestaand abonnement, per object €1,16;Abonnementslevering, per jaar en per 1.000 objecten binnen abonnement €208,00;Extra (losse) levering van een bestand, per verstrekking €192,00;Tweede mutatie-abonnement, per jaar €192,00;Deze bedragen zijn vrij van btw;Dit product valt onder de budgetfinanciering BRK.''';
    sh:path dcterms:rights;
  sh:name "dcterms:rights";
.
req:Distributie_accessURL rdf:type sh:PropertyShape;
  rdfs:label "API/servicelocatie"@nl;
    rdfs:comment "Een distributie kan een API zijn of een webservice die beschikbaar is via een uri."@nl;
    skos:example '''https://data.pdok.nl/brk/api/v1''';
    sh:path dcat:accessURL;
  sh:name "dcat:accessURL";
.
req:Distributie_downloadURL rdf:type sh:PropertyShape;
  rdfs:label "downloadlocatie"@nl;
    rdfs:comment "Een distributie kan een downloadservice zijn die beschikbaar is via een uri."@nl;
    skos:example '''https://www.pdok.nl/nl/producten/pdok-downloads/basis-registratie-kadaster/kadastrale-kaart''';
    sh:path dcat:downloadURL;
  sh:name "dcat:downloadURL";
.

#---------------------
# Gegevensklasse
#---------------------
req:Klasse a sh:NodeShape;
  rdfs:label "Gegevensklasse"@nl;
  sh:targetClass owl:Class;
  sh:name "owl:Class";
  sh:property req:Klasse_label;
  sh:property req:Klasse_onderwerp;
.
req:Klasse_label a sh:PropertyShape;
  rdfs:label "label"@nl;
  sh:name "rdfs:label";
  sh:path rdfs:label;
.
req:Klasse_onderwerp a sh:PropertyShape;
  rdfs:label "onderwerp"@nl;
  sh:name "dcterms:subject";
  sh:path dcterms:subject;
.

#---------------------
# Eigenschap
#---------------------
req:Eigenschap a sh:NodeShape;
  rdfs:label "Eigenschap"@nl;
  sh:targetClass rdf:Property;
  sh:name "rdf:Property";
  sh:property req:Eigenschap_onderwerp;
  sh:property req:Eigenschap_label;
.
req:Eigenschap_label a sh:PropertyShape;
  rdfs:label "label"@nl;
  sh:name "rdfs:label";
  sh:path rdfs:label;
.
req:Eigenschap_onderwerp a sh:PropertyShape;
  rdfs:label "onderwerp"@nl;
  sh:name "dcterms:subject";
  sh:path dcterms:subject;
.

#---------------------
# Datakwaliteitseisen
#---------------------
req:QualityDimension a sh:NodeShape;
  sh:targetClass dqv:Dimension;
  rdfs:label "Kwaliteitsdimensie"@nl;
  rdfs:label "Quality dimension"@en;
  sh:name "dqv:Dimension";
  sh:property req:QualityDimension_label;
.

req:QualityDimension_label a sh:PropertyShape;
  sh:name "rdfs:label";
  sh:path rdfs:label;
.

req:QualityIndicator a sh:NodeShape;
  sh:name "Indicator (dqv:Dimension)";
  rdfs:label "Quality indicator"@en;
  rdfs:label "Kwaliteitsindicator"@nl;
  sh:property req:QualityIndicator_label;
  sh:property req:QualityIndicator_broader;
  sh:property req:QualityIndicator_role;
.

req:QualityIndicator_role a sh:PropertyShape;
  sh:name "role";
  sh:path rdf:type;
  sh:hasValue dqv:Dimension;
.
req:QualityIndicator_label a sh:PropertyShape;
  sh:name "rdfs:label";
  sh:path rdfs:label;
.
req:QualityIndicator_broader a sh:PropertyShape;
  sh:name "skos:broader";
  sh:path skos:broader;
  sh:node req:QualityDimension;
.

req:QualityMetric a sh:NodeShape;
  sh:targetClass dqv:Metric;
  rdfs:label "Meetfunctie"@nl;
  rdfs:label "Quality metric"@en;
  sh:name "dqv:Metric";
  sh:property req:QualityMetric_label;
  sh:property req:QualityMetric_inDimension;
  sh:property req:QualityMetric_expectedDataType;
.

req:QualityMetric_label a sh:PropertyShape;
  sh:name "rdfs:label";
  sh:path rdfs:label;
.
req:QualityMetric_inDimension a sh:PropertyShape;
  sh:name "dqv:inDimension";
  sh:path dqv:inDimension;
  sh:node req:QualityIndicator;
.
req:QualityMetric_expectedDataType a sh:PropertyShape;
  sh:name "dqv:expectedDataType";
  sh:path dqv:expectedDataType;
.

req:QualityMeasurement a sh:NodeShape;
  sh:targetClass dqv:QualityMeasurement;
  sh:name "dqv:QualityMeasurement";
  sh:property req:QualityMeasurement_isMeasurementOf;
  sh:property req:QualityMeasurement_value;
.

req:QualityMeasurement_isMeasurementOf a sh:PropertyShape;
  sh:name "dqv:isMeasurementOf";
  sh:path dqv:isMeasurementOf;
  sh:class dqv:Metric;
  sh:minCount 1;
  sh:maxCount 1;
.
req:QualityMeasurement_value a sh:PropertyShape;
  sh:name "dqv:value";
  sh:path dqv:value;
  sh:minCount 1;
  sh:maxCount 1;
.

req:QualityPolicy a sh:NodeShape;
  sh:name "dqv:QualityPolicy";
  rdfs:label "Quality policy"@en;
  rdfs:label "Kwaliteitseis"@nl;
  sh:property req:QualityPolicy_role;
  sh:property req:QualityPolicy_targetNode;
  sh:property req:QualityPolicy_message;
  sh:property req:QualityPolicy_severity;
  sh:property req:QualityPolicy_property;
.

req:QualityPolicy_role a sh:PropertyShape;
  sh:name "role";
  sh:path rdf:type;
  sh:hasValue sh:NodeShape;
.
req:QualityPolicy_targetNode a sh:PropertyShape;
  sh:name "sh:targetNode";
  sh:class dqv:Metric;
  sh:minCount 1;
  sh:maxCount 1;
.
req:QualityPolicy_message a sh:PropertyShape;
  sh:name "sh:message";
  sh:datatype xsd:string;
.
req:QualityPolicy_severity a sh:PropertyShape;
  sh:name "sh:severity";
  sh:maxCount 1;
.
req:QualityPolicy_property a sh:PropertyShape;
  sh:name "sh:property";
  sh:path sh:property;
  sh:nodeKind sh:BlankNode;
  sh:node req:QualityPolicySpec;
  sh:minCount 1;
  sh:maxCount 1
.

req:QualityPolicySpec a sh:NodeShape;
  sh:name "spec";
  sh:property [
    sh:path sh:path;
    sh:name "sh:path/sh:inversePath = dqv:isMeasurementOf"; #Hack, propertypaths are not supported yet
#    sh:hasValue dqv:isMeasurementOf;
    sh:minCount 1;
    sh:maxCount 1
  ];
  sh:property [
    sh:path sh:node;
    sh:name "sh:node";
    sh:nodeKind sh:BlankNode;
    sh:node req:QualityPolicyMeasurement;
    sh:minCount 1;
    sh:maxCount 1
  ]
.

req:QualityPolicyMeasurement a sh:NodeShape;
  sh:name "measurement";
  sh:property [
    sh:nodeKind sh:BlankNode;
    sh:path sh:property;
    sh:name "sh:property";
    sh:node req:QualityPolicyValue;
    sh:maxCount 1;
  ]
.

req:QualityPolicyValue a sh:NodeShape;
  sh:name "value";
  sh:property [
    sh:path sh:path;
    sh:name "sh:path";
    sh:hasValue dqv:value;
    sh:minCount 1;
    sh:maxCount 1;
  ];
  sh:property [
    sh:path dqv:value;
    sh:name "dqv:value";
    sh:minCount 1;
    sh:maxCount 1;
  ]
.
