@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix req: <http://data.ontwikkeling.pdok.nl/gco/id/requirement/>.
@prefix adms: <http://www.w3.org/ns/adms#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix dcat: <http://www.w3.org/ns/dcat#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix prov: <http://www.w3.org/ns/prov#>.
@prefix dqv: <http://www.w3.org/ns/dqv#>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix dctype: <http://purl.org/dc/dcmitype/>.
@prefix wdrs: <http://www.w3.org/2007/05/powder-s#>.
@prefix skoslex: <http://bp4mc2.org/def/skos-lex#>.
@prefix skosthes: <http://purl.org/iso25964/skos-thes#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix dcmiperiod:   <http://dublincore.org/documents/2006/04/10/dcmi-period/>.
@prefix sd: <http://www.w3.org/ns/sparql-service-description#>.
@prefix frbr: <http://purl.org/vocab/frbr/core#>.

# [MB] ALGEMENE OPMERKINGEN
# - Engels en Nederlands wordt door elkaar gebruikt in de beschrijving
# - Het zou m.i. beter zijn als we alles in het Nederlands doen, en OOK in het engels

#---------------------
# IMPORT
#---------------------

#Overgenomen uit skos-lex
skoslex:Act rdfs:subClassOf skos:Concept.
skoslex:Object rdfs:subClassOf skos:Concept.
skoslex:Actor rdfs:subClassOf skos:Concept.
skoslex:Agent rdfs:subClassOf skoslex:Actor.

#Overgenomen uit frbr
frbr:Work rdfs:subClassOf frbr:Endeavour.
frbr:Expression rdfs:subClassOf frbr:Endeavour.

#Overgenomen uit prov
prov:Person rdfs:subClassOf prov:Agent.
prov:Organization rdfs:subClassOf prov:Agent.
prov:SoftwareAgent rdfs:subClassOf prov:Agent.

#---------------------
# CONCEPTEN
#---------------------

#---------------------
# Concept
#---------------------
req:Concept a sh:NodeShape;
  rdfs:label "Begrip";
  sh:name "skos:Concept";
  sh:targetClass skos:Concept;
  # Datatype properties
  sh:property req:Concept_comment;
  sh:property req:Concept_dcsource;
  sh:property req:Concept_definition;
  sh:property req:Concept_label;
  sh:property req:Concept_prefLabel;
  sh:property req:Concept_scopeNote;
  sh:property req:Concept_synonym;
  # Object properties
  sh:property req:Concept_dctsource;
  sh:property req:Concept_domain;
  sh:property req:Concept_metadata;
  # References to other concepts
  sh:property req:Concept_consistsOf;
  sh:property req:Concept_generalisationOf;
  sh:property req:Concept_isRelatedTo;
  sh:property req:Concept_partOf;
  sh:property req:Concept_specialisationOf;
  # References to other concepts in other concept schemes
  sh:property req:Concept_seeAlso;
  sh:property req:Concept_broadlyMatches;
  sh:property req:Concept_closelyMatches;
  sh:property req:Concept_exactlyMatches;
  sh:property req:Concept_narrowlyMatches;
.
req:Concept_domain a sh:PropertyShape;
  rdfs:label "has a domain";
  sh:name "skos:inScheme";
  sh:path skos:inScheme;
  sh:class skos:ConceptScheme;
  rdfs:comment "Een begrip is gedefinieerd in een bepaald domein";
  skos:example "Basisregistratie Adressen en Gebouwen (BAG)"
.
req:Concept_metadata a sh:PropertyShape;
  sh:path foaf:isPrimaryTopicOf;
  sh:class prov:Entity;
.
req:Concept_dctsource a sh:PropertyShape;
  rdfs:label "has source";
  sh:name "dcterms:source";
  sh:path dcterms:source;
  rdfs:comment "Een begrip is ontleend aan een formele bron. Dit kan een bron zijn die direct als 'resource' op het web vindbaar is.";
  sh:node [ sh:xone (req:Bron req:Brondocument)];
  skos:example "<jci1.3:c:BWBR0005416&titel=IV&hoofdstuk=XV&paragraaf=3&artikel=222>"
.
req:Concept_dcsource a sh:PropertyShape;
  rdfs:label "has source";
  sh:name "dc:source";
  sh:path dc:source;
  rdfs:comment "Een begrip is ontleend aan een formele bron. Dit kan een geschreven bron zijn.";
  skos:example "Europees verdrag voor de rechten van de mens"
.
req:Concept_label a sh:PropertyShape;
  rdfs:label "has label";
  sh:name "rdfs:label";
  rdfs:comment "Een begrip heeft een voor mensen leesbare naam. De conventie is om deze naam in UpperCamelCase te noteren.";
  sh:path rdfs:label;
  skos:example "Perceel"
.
req:Concept_prefLabel a sh:PropertyShape;
  rdfs:label "has preferred label";
  sh:name "skos:prefLabel";
  rdfs:comment "Een begrip heeft een voor mensen leesbare naam die in documentatie kan worden gebruikt. Dit label kan meertalig zijn, aangegeven door @nl of @en";
  sh:path skos:prefLabel;
  skos:example '''"Kadastraal perceel"@nl / "Cadastral parcel"@en'''
.
req:Concept_synonym a sh:PropertyShape;
#	rdfs:label "alternatieve aanduiding";
  rdfs:label "has synonym";
  sh:name "skos:altLabel";
  rdfs:comment "Een begrip kan een synoniem hebben"; 
  sh:path skos:altLabel;
  skos:example "KadastraalPerceel"
.
req:Concept_definition a sh:PropertyShape;
  rdfs:label "has formal definition";
  sh:name "skos:definition";
  rdfs:comment "Een begrip heeft een formele definitie. Deze wordt waar mogelijk overgenomen uit een officiële publicatie.";
  sh:path skos:definition;
  skos:example "Een perceel is een begrensd deel van het Nederlands grondgebied dat kadastraal geïdentificeerd is en met kadastrale grenzen begrensd is."
.
req:Concept_comment a sh:PropertyShape;
#	rdfs:label "uitleg"@nl;
  rdfs:label "has comment";
  sh:name "rdfs:comment";
  rdfs:comment "Een begrip heeft een uitleg in 'klare taal'.";
  sh:path rdfs:comment;
  skos:example "Een perceel is een stuk grond waarvan het Kadaster de grenzen heeft gemeten en dat bij het Kadaster een eigen nummer heeft."
.
req:Concept_scopeNote a sh:PropertyShape;
#	rdfs:label "toelichting";
  rdfs:label "has scope note";
  sh:name "skos:scopeNote";
  rdfs:comment "Een begrip kan nader worden toegelicht.";
  sh:path skos:scopeNote;
  skos:example '''Een perceel is een (2D) vlakvormig ruimtelijk object dat "opdelend" van structuur is. Dit betekent dat Nederland altijd naadloos en volledig is bedekt met perceelsvlakken, die elkaar niet mogen overlappen.'''
.
req:Concept_broadlyMatches a sh:PropertyShape;
  rdfs:label "lijkt op breder";
  sh:name "skos:broadMatch";
  sh:path skos:broadMatch;
  sh:node req:ExternConcept;
  rdfs:comment "Een begrip is een specialisatie van een begrip in een ander domein.";
  skos:example "Een Appartementsrecht in de BRK is een specialisatie van een Verblijfsobject in de BAG.";
.
req:Concept_narrowlyMatches a sh:PropertyShape;
  rdfs:label "lijkt op smaller";
  sh:name "skos:narrowMatch";
  sh:path skos:narrowMatch;
  sh:node req:ExternConcept;
  rdfs:comment "Een begrip is een generalisatie van een begrip in een ander domein.";
  skos:example "Een Postadres is een generalisatie van een Nummeraanduiding en een Postbus.";
.
req:Concept_seeAlso a sh:PropertyShape;
  rdfs:label "afgeleid van";
  sh:name "skos:relatedMatch";
  sh:path skos:relatedMatch;
  sh:node req:ExternConcept;
  rdfs:comment "Een begrip is gerelateerd aan een begrip in een ander domein.";
  skos:example '''Een Perceel in de BRK is gerelateerd aan een adres (Nummeraanduiding) in de BAG.''';
.
req:Concept_closelyMatches a sh:PropertyShape;
  rdfs:label "vergelijkbaar met";
  sh:name "skos:closeMatch";
  sh:path skos:closeMatch;
  rdfs:comment "Een begrip betekent bijna hetzelfde als een begrip in een ander domein.";
  sh:node req:ExternConcept;
  skos:example "Een OnroerendGoed in de BRK is ongeveer hetzelfde als een WOZobject in de WOZ.";
.
req:Concept_exactlyMatches a sh:PropertyShape;
  rdfs:label "exact gelijk aan";
  sh:name "skos:exactMatch";
  sh:path skos:exactMatch;
  sh:node req:ExternConcept;
  rdfs:comment "Een begrip betekent precies hetzelfde als een begrip in een ander domein.";
  skos:example "Een Perceel in het BAL betekent hetzelfde als een Perceel in de BRK.";
.
req:Concept_specialisationOf a sh:PropertyShape;
  rdfs:label "specialisatie van";
  sh:name "skosthes:broaderGeneric";
  sh:path skosthes:broaderGeneric;
  sh:class skos:Concept;
  rdfs:comment "Een begrip is een specialisatie van een begrip met een bredere betekenis.";
  skos:example "Een Perceel is een OnroerendGoed.";
.
req:Concept_generalisationOf a sh:PropertyShape;
  rdfs:label "generalisatie van";
  sh:name "skosthes:narrowerGeneric";
  sh:path skosthes:narrowerGeneric;
  sh:class skos:Concept;
  rdfs:comment "Een begrip is een generalisatie van een begrip met een engere of nauwere betekenis.";
  skos:example "Een KadastraalObject is een OnroerendGoed of een Registergoed.";
.
req:Concept_partOf a sh:PropertyShape;
  rdfs:label "onderdeel van";
  sh:name "skosthes:broaderPartitive";
  sh:path skosthes:broaderPartitive;
  sh:class skos:Concept;
  rdfs:comment "Een begrip gaat over een deel van een breder begrip.";
  skos:example "Een motor is onderdeel van een schip.";
.
req:Concept_consistsOf a sh:PropertyShape;
  rdfs:label "bestaat uit";
  sh:name "skosthes:narrowerPartitive";
  sh:path skosthes:narrowerPartitive;
  sh:class skos:Concept;
  rdfs:comment "Een begrip bestaat uit een aantal onderdelen.";
  skos:example '''Een schip bestaat uit een romp, kajuit, motor, … ''';
.
req:Concept_isRelatedTo a sh:PropertyShape;
  rdfs:label "gerelateerd aan";
  sh:name "skos:semanticRelation";
  sh:path skos:semanticRelation;
  sh:class skos:Concept;
  rdfs:comment "Een begrip is gerelateerd aan een ander begrip.";
  skos:example "Een perceel is gerelateerd aan KadastraleGrens.";
.

#---------------------
# Extern concept
#---------------------
req:ExternConcept a sh:NodeShape;
  sh:name "skos:Concept (extern)";
    rdfs:label "Extern concept";
    sh:property [
      sh:path rdfs:label;
      sh:name "rdfs:label";
    ];
.

#---------------------
# Collectie
#---------------------
req:Collectie a sh:NodeShape;
  rdfs:label "Collectie";
  sh:targetClass skos:Collection;
  sh:name "skos:Collection";
  sh:property req:Collectie_label;
  sh:property req:Collectie_heeftLid;
  sh:property req:Collectie_provenance;
.
req:Collectie_label a sh:PropertyShape;
  rdfs:label "has label";
  sh:path rdfs:label;
  sh:name "rdfs:label";
  rdfs:comment "Een collectie schema heeft een voor mensen leesbare naam. De conventie is om deze naam in UpperCamelCase te noteren.";
  skos:example "De collectie die alle activiteiten in het BAL beschrijft heeft als label 'BAL'"
.
req:Collectie_heeftLid a sh:PropertyShape;
  rdfs:label "heeft lid";
  sh:name "skos:member";
  sh:path skos:member;
  sh:class skos:Concept;
  rdfs:comment "Een collectie kan één of meerdere begrippen omvatten, die eventueel afkomstig kunnen zijn uit meerdere conceptschema's";
  skos:example "de collectie 'ZakelijkeRechten' bevat het begrip 'Erfpacht'";
.
req:Collectie_provenance a sh:PropertyShape;
  sh:path foaf:isPrimaryTopicOf;
  sh:class prov:Entity;
.

#---------------------
# Begrippenkader
#---------------------
req:Begrippenkader a sh:NodeShape;
  rdfs:label "Begrippenkader";
  sh:name "skos:ConceptScheme";
  sh:targetClass skos:ConceptScheme;
  sh:property req:Begrippenkader_type;
  sh:property req:Begrippenkader_label;
  sh:property req:Begrippenkader_hasTopConcept;
.
req:Begrippenkader_label a sh:PropertyShape;
  rdfs:label "has label";
  sh:path rdfs:label;
  sh:name "rdfs:label";
  rdfs:comment "Een concepten schema heeft een voor mensen leesbare naam. De conventie is om deze naam in UpperCamelCase te noteren.";
  skos:example "Het schema dat het domein regelgeving in het DSO beschrijft heeft als label 'Regelgeving'."
.
req:Begrippenkader_hasTopConcept a sh:PropertyShape;
  rdfs:label "has top concept";
  sh:path skos:hasTopConcept;
  sh:name "skos:hasTopConcept";
  sh:class skos:Concept;
  rdfs:comment "Een concepten schema heeft 1 begrip dat het schema zelf aanduidt.";
  skos:example "Het schema met als label 'Regelgeving' heeft als topconcept 'Regelgeving'."
.
req:Begrippenkader_type a sh:PropertyShape;
  rdfs:label "rol van dataset";
  rdfs:comment "Een begrippenkader vervult de rol van dataset";
  sh:path rdf:type;
  sh:hasValue dcat:Dataset;
.

#---------------------
# VERSIEBEHEER / PROVENANCE
#---------------------

#---------------------
# CatalogGraph
#---------------------
req:CatalogGraph a sh:NodeShape;
  rdfs:label "Catalog graph";
  rdfs:comment "De catalogus graph omvat zowel de concrete data (gerepresenteerd door een prov:Entity), als de metadata van de prov:Entity, dwz: een sd:Graph";
  sh:name "sd:Graph";
  sh:targetClass sd:Graph;
  sh:property [
    sh:path rdf:type;
    sh:hasValue prov:Entity;
  ];
  sh:property req:CatalogGraph_generatedAtTime;
  sh:property req:CatalogGraph_changeNote;
  sh:property req:CatalogGraph_attributedTo;
.
req:CatalogGraph_generatedAtTime a sh:PropertyShape;
  rdfs:label "generated at time";
  rdfs:comment "De datum en tijd van de administratieve handeling wordt bewaard. Daardoor is altijd terug te halen wat op welk tijdstip aan informatie bekend was.";
  sh:path prov:generatedAtTime;
  sh:name "prov:generatedAtTime";
.
req:CatalogGraph_changeNote a sh:PropertyShape;
  rdfs:label "change note";
  sh:path skos:changeNote;
  sh:name "skos:changeNote";
  rdfs:comment "De rationale van de aanpassing kan worden aangegeven.";
  skos:example "Een tikfout.";
.
req:CatalogGraph_attributedTo a sh:PropertyShape;
  rdfs:label "was attributed to";
  rdfs:comment "De persoon of organisatie die de wijziging heeft (laten) doorvoeren";
  sh:name "prov:wasAttributedTo";
  sh:path prov:wasAttributedTo;
  sh:class prov:Agent;
  skos:example "Het Kadaster";
.

req:ProvenanceAgent a sh:NodeShape;
  rdfs:label "Agent";
  rdfs:comment "An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity. ";
  sh:name "prov:Agent";
  sh:targetClass prov:Agent;
  sh:property req:ProvenanceAgent_OnBehalfOf;
.
req:ProvenanceAgent_OnBehalfOf a sh:PropertyShape;
  rdfs:label "acted on behalf of";
  rdfs:comment "Een persoon of organisatie kan opereren namens een andere persoon of organisatie";
  skos:example "overheid:Rijswaterstaat";
  sh:name "prov:actedOnBehalfOf";
  sh:path prov:actedOnBehalfOf;
  sh:node req:ProvenanceOrganization;
.

req:ProvenancePerson a sh:NodeShape;
  rdfs:label "ProvenancePerson";
  rdfs:comment "A human person";
  sh:name "prov:Person";
  sh:targetClass prov:Person;
.

req:ProvenanceSoftwareAgent a sh:NodeShape;
  rdfs:label "ProvenanceSoftwareAgent";
  rdfs:comment "A software agent is running software.";
  sh:name "prov:SoftwareAgent";
  sh:targetClass prov:SoftwareAgent;
.

req:ProvenanceOrganization a sh:NodeShape;
  rdfs:label "Organization";
  rdfs:comment "An organization is a social or legal institution such as a company, society, etc.";
  sh:name "prov:Organization";
  sh:targetClass prov:Organization;
.

#---------------------
# Metadata
#---------------------

req:Metadata a sh:NodeShape;
  rdfs:label "Metadata";
  sh:name "prov:Entity";
  sh:targetClass prov:Entity;
  sh:property req:Metadata_status;
  sh:property req:Metadata_isValidDuring;
  sh:property req:Metadata_isIssued;
  sh:property req:Metadata_changeNote;
.
req:Metadata_status a sh:PropertyShape;
  rdfs:label "heeft status";
  sh:name "adms:status";
  sh:path adms:status;
  sh:node req:ConceptStatus;
  rdfs:comment "Een versie heeft een administratieve status.";
  skos:example "Proposed";
#[IT] skos:example "Completed";
.
req:Metadata_changeNote a sh:PropertyShape;
  rdfs:label "has change note";
  sh:name "skos:changeNote";
  sh:path skos:changeNote;
  rdfs:comment "Een versie is gemaakt met een bepaalde reden.";
  skos:example "De toelichting is uitgebreid vanwege een onduidelijkheid.";
.
req:Metadata_isValidDuring a sh:PropertyShape;
  rdfs:label "is geldig in";
  sh:name "dcterms:temporal";
  sh:path dcterms:temporal;
  sh:node req:Metadata_Temporal;
  rdfs:comment '''Een versie is formeel/juridisch geldig gedurende een periode.''';
  skos:example '''22/10/2017 - ''';
.
req:Metadata_isIssued a sh:PropertyShape;
  rdfs:label "is issued";
  sh:name "dcterms:issued";
  sh:path dcterms:issued;
  rdfs:comment "Een versie is formeel bekend gemaakt op een bepaald moment.";
  skos:example '''21/10/2017 20:21''';
.

req:Metadata_Temporal a sh:NodeShape;
  rdfs:label "Temporal";
  sh:property req:Temporal_Start;
  sh:property req:Temporal_End;
.
req:Temporal_Start a sh:PropertyShape;
  rdfs:label "Start";
  sh:name "dcmiperiod:start";
  sh:path dcmiperiod:start;
  rdfs:comment "Een versie is formeel/juridisch geldig vanaf";
  skos:example "21/10/2017";
.
req:Temporal_End a sh:PropertyShape;
  rdfs:label "End";
  sh:name "dcmiperiod:end";
  sh:path dcmiperiod:end;
  rdfs:comment "Een versie is formeel/juridisch geldig tot";
  skos:example "23/10/2017";
.

req:Status a sh:NodeShape;
  sh:name "Status waardelijst";
  sh:property [
    sh:path skos:inScheme;
    sh:hasValue <http://purl.org/adms/status/1.0>;
    sh:minCount 1;
    sh:maxCount 1;
  ];
.

#---------------------
# SKOS Lex (legal skos)
#---------------------

#---------------------
# Act, Object, Actor, Agent
#---------------------
req:HandelingAct a sh:NodeShape;
  rdfs:label "Act";
  rdfs:comment "An act is a legal construct representing a set of activities, performed by an Actor and with respect to some Object.";
  sh:targetClass skoslex:Act;
  sh:name "skoslex:Act";
  sh:property req:Handeling_name;
  sh:property req:Handeling_actor;
  sh:property req:Handeling_agent;
  sh:property req:Handeling_object;
  sh:property req:Handeling_refersTo;
.
req:HandelingActor a sh:NodeShape;
  rdfs:label "Actor";
  rdfs:comment "An actor is some person (individual, group or organization) that performs some Act";
  sh:targetClass skoslex:Actor;
  sh:name "skoslex:Actor";
  sh:property req:Handeling_name;
.
req:HandelingAgent a sh:NodeShape;
  rdfs:label "Agent";
  rdfs:comment "An agent is some person (individual, group or organization) involved in some act, without actually performing the act.";
  sh:targetClass skoslex:Agent;
  sh:name "skoslex:Agent";
  sh:property req:Handeling_name;
.
req:HandelingObject a sh:NodeShape;
  rdfs:label "Object";
  rdfs:comment "An object is some thing (not an actor) that is created, used or changed during some Act";
  sh:targetClass skoslex:Object;
  sh:name "skoslex:Object";
  sh:property req:Handeling_name;
.

req:Handeling_name a sh:PropertyShape;
  sh:path rdfs:label;
.
req:Handeling_actor a sh:PropertyShape;
  rdfs:label "is performed by";
  sh:name "skoslex:actor";
  rdfs:comment "actor relates an Act with the Actor that performs the act.";
  sh:path skoslex:actor;
  sh:class skoslex:Actor;
.
req:Handeling_object a sh:PropertyShape;
  rdfs:label "object";
  sh:name "skoslex:object";
  rdfs:comment "object relates an Act with the object that is created, changed or used during the act.";
  sh:path skoslex:object;
  sh:class skoslex:Object;
.
req:Handeling_agent a sh:PropertyShape;
  rdfs:label "agent";
  sh:name "skoslex:agent";
  sh:path skoslex:agent;
  sh:class skoslex:Agent;
  rdfs:comment "agent relates an Act with the Agent involved in the act.";
.
req:Handeling_refersTo a sh:PropertyShape;
  rdfs:label "refersTo";
  sh:name "skoslex:refersTo";
  sh:path skoslex:refersTo;
  sh:class skoslex:Norm;
  rdfs:comment "refersTo relates a norm with the Act that is refered by the norm. Such an act has some relation with the norm, without further specification. It might be effected by the norm, but could also be a precondition or simply mentioned in the rules.";
.

#---------------------
# Norm
#---------------------
req:HandelingNorm a sh:NodeShape;
  rdfs:label "Norm";
  rdfs:comment "A norm effects an Act. It implies what 'ought' or 'should not' be done with regard to an Act. A norm represents the set of rules that apply to an Act.";
  sh:targetClass skoslex:Norm;
  sh:name "skoslex:Norm";
  sh:property req:Handeling_name;
  sh:property req:Handeling_affects;
.
req:Handeling_affects a sh:PropertyShape;
  rdfs:label "affects";
  rdfs:comment "Affects relates a norm with the Act that is affected by the norm. Such an act is restricted by the rules identified by the norm.";
  sh:name "skoslex:affects";
  sh:path skoslex:affects;
  sh:class skoslex:Act;
.

#---------------------
# Bron
#---------------------
req:Bron a sh:NodeShape;
  sh:name "frbr:Endeavour (bron)";
  rdfs:label "Bron";
  rdfs:comment "Een identificeerbare bron die gebruikt is voor informatie die in de Catalogus wordt ontsloten.";
  sh:targetClass frbr:Endeavour;
  sh:property req:Bron_label;
  sh:property req:Bron_isHetOnderwerpVan;
.
req:WerkAlsBron a sh:NodeShape;
  sh:name "frbr:Work (bron)";
  rdfs:label "Work";
  rdfs:comment "Een identificeerbare bron, zonder dat expliciet wordt verwezen naar een specifieke versie (bv: 'Artikel 1 Grondwet')";
  sh:targetClass frbr:Work;
.
req:ExpressieAlsBron a sh:NodeShape;
  sh:name "frbr:Expression (bronversie)";
  rdfs:label "Expression";
  rdfs:comment "Een identificeerbare concrete versie van een bron.";
  sh:targetClass frbr:Expression;
.
req:Bron_label a sh:PropertyShape;
  sh:name "rdfs:label";
  rdfs:comment "Een bron heeft een voor mensen leesbaar label";
  sh:path rdfs:label;
  sh:minCount 1;
.
req:Bron_isHetOnderwerpVan a sh:PropertyShape;
  sh:name "foaf:isPrimaryTopicOf";
  rdfs:comment "Een bron is het onderwerp van een brondocument";
  sh:path foaf:isPrimaryTopicOf;
  sh:node req:Brondocument;
  sh:maxCount 1;
.
req:Brondocument a sh:NodeShape;
  sh:name "foaf:Document (brondocument)";
  rdfs:label "Document";
  rdfs:comment "Een brondocument dat vindbaar is op het internet";
  sh:property req:Brondocument_label
.
req:Brondocument_label a sh:PropertyShape;
  sh:name "rdfs:label";
  rdfs:comment "Een brondocument heeft een voor mensen leesbaar label";
  sh:path rdfs:label;
  sh:minCount 1;
.

#---------------------
# CONCEPTEN
#---------------------

#---------------------
# Dataset
#---------------------
req:Dataset rdf:type sh:NodeShape;
  rdfs:label "Dataset";
  sh:name "dcat:Dataset";
  sh:targetClass dcat:Dataset;
  sh:property req:Dataset_name;
  sh:property req:Dataset_dateIssued;
  sh:property req:Dataset_language;
  sh:property req:Dataset_description;
.

req:Dataset_name rdf:type sh:PropertyShape;
  rdfs:label "naam";
  sh:name "dcterms:title";
  rdfs:comment "De dataset heeft een naam";
  skos:example ''''Omgevingswet','BAL','BRK', etc'''';
  sh:path dcterms:title
.
req:Dataset_dateIssued rdf:type sh:PropertyShape;
  rdfs:label "publicatiedatum";
  sh:name "dcterms:issued";
  rdfs:comment "De dataset is op een bepaalde datum gepubliceerd. Dit is de oorspronkelijke publicatiedatum. Het is niet per se de datum van opname van de dataset in de catalogus.";
  skos:example '''1/10/2017''';
  sh:path dcterms:issued
.
req:Dataset_language rdf:type sh:PropertyShape;
  rdfs:label "taal";
  sh:name "dcterms:language";
  rdfs:comment "De taal waarin de dataset is beschreven (vanwege de compatibiliteit met het DCAT-AP NL)";
  skos:example "@nl";
  sh:path dcterms:language
.
req:Dataset_description rdf:type sh:PropertyShape;
  rdfs:label "beschrijving";
  sh:name "dcterms:description";
  rdfs:comment "De dataset heeft een duidelijke beschrijving";
  skos:example '''Met de Omgevingswet wil de overheid de regels voor ruimtelijke ontwikkeling vereenvoudigen en samenvoegen. Zodat het straks bijvoorbeeld makkelijker is om bouwprojecten te starten. De Crisis- en herstelwet (Chw) maakt dit nu al mogelijk, bijvoorbeeld door bestaande regels aan te passen. Naar verwachting treedt de Omgevingswet in 2019 in werking.''';
  sh:path dcterms:description
.

req:Datasetversie rdf:type sh:NodeShape;
  rdfs:label "Datasetversie";
  sh:name "dcat:Dataset";
  sh:targetClass dcat:Dataset;
  sh:property req:Datasetversie_version; 
  sh:property req:Datasetversie_versionNotes;	
  sh:property req:Datasetversie_isDerivedFrom;
  sh:property req:Datasetversie_distribution;
  sh:property req:Datasetversie_versionOf;
  sh:property req:Datasetversie_describedBy;
  sh:property req:Datasetversie_provenance;
  sh:property req:Datasetversie_werkingsgebied;
.

req:Datasetversie_provenance a sh:PropertyShape;
  sh:path foaf:isPrimaryTopicOf;
  sh:class prov:Entity;
.
req:Datasetversie_version rdf:type sh:PropertyShape;
  rdfs:label "versie";
  sh:name "adms:version";
  rdfs:comment "De versie van de dataset.";
  sh:path adms:version;
  skos:example "2.1.0";
.
req:Datasetversie_versionNotes rdf:type sh:PropertyShape;
  rdfs:label "versie notes";
  sh:name "adms:versionNotes";
  rdfs:comment "Een versie heeft release notes.";
  sh:path adms:versionNotes;
  skos:example '''IMKAD 2.1.0 (publicatie 22-11-2011) is de final draft versie van IMKAD 2 zoals die is aangeboden aan belanghebbenden voor beoordeling. Het commentaar is voor zover mogelijk verwerkt in versie 2.1.1. Deze wijzigingen zijn terug te vinden in de change log.''';
.
req:Datasetversie_distribution a sh:PropertyShape;
  rdfs:label "distributie";
  sh:path dcat:distribution;
  sh:name "dcat:distribution";
  sh:class dcat:Distribution;
  rdfs:comment "Een dataset kan worden verspreid via verschillende kanalen.";
  skos:example "Digitale Kadastrale Kaart download service.";
.
req:Datasetversie_versionOf a sh:PropertyShape;
  rdfs:label "versie van";
  sh:path dcterms:isVersionOf;
  sh:name "dcterms:isVersionOf";
  rdfs:comment "Een concrete, geversioneerde dataset is afgeleid van een abstracte dataset. A versioned datasets is derived from the general dataset and a productmodel is derived from an informationmodel";
  sh:node req:Dataset;
  sh:maxCount 1;
  skos:example "IMKAD 2.1.0 is een concrete versie van IMKAD.";
.
req:Datasetversie_werkingsgebied rdf:type sh:PropertyShape;
    rdfs:label "geografische afbakening";
    rdfs:comment "Het gebied waar de dataset over gaat";
    sh:class dcterms:Location;
    skos:example "gemeente Apeldoorn";
    sh:path dcterms:spatial;
    sh:name "dcterms:spatial"
.
req:Datasetversie_isDerivedFrom rdf:type sh:PropertyShape;
  rdfs:label "gerelateerd aan";
  rdfs:comment "Een concreet, geversioneerd productmodel is afgeleid van een concreet, geversioneerd informatiemodel.";
  sh:path dcterms:relation;
  sh:name "dcterms:relation";
  sh:class dcat:Dataset;
.
req:Datasetversie_describedBy rdf:type sh:PropertyShape;
  rdfs:label "beschreven in";
  rdfs:comment "De data in een dataset is beschreven in een informatiemodel.";
  sh:path wdrs:describedBy;
  sh:name "wdrs:describedBy";
  sh:class adms:Asset;
  skos:example '''kadaster.nl/schemas/imkad''';
.

req:Datasetversie_locatie a sh:NodeShape;
  rdfs:label "Locatie";
  sh:name "dcterms:Location";
.

#---------------------
# Informatiemodel
# Datum: 7-11-2017
# Door: Ingrid Thurlings
#---------------------
req:Informatiemodel rdf:type sh:NodeShape;
    rdfs:label "Informatiemodel";
    sh:name "adms:Asset";
    sh:targetClass adms:Asset;
    sh:property req:Informatiemodel_name;
.
req:Informatiemodel_name rdf:type sh:PropertyShape;
    rdfs:label "name";
    sh:name "rdfs:comment";
    rdfs:comment "Het informatiemodel heeft een naam";
    skos:example "'IMKAD'";
    sh:path rdfs:comment
.



#---------------------
# Catalogus 
# datum:23-10-2017 
# door: Ingrid Thurlings
#---------------------
req:Catalogus rdf:type sh:NodeShape;
    rdfs:label "Catalogus";
  sh:name "dcat:Catalog";
    sh:property req:Catalogus_dateModified;
    sh:property req:Catalogus_homepage;
    sh:property req:Catalogus_licence;
    sh:property req:Catalogus_dateIssued;
    sh:property req:Catalogus_name;
    sh:property req:Catalogus_description;
    sh:property req:Catalogus_rights;
    sh:property req:Catalogus_language;
    sh:property req:Catalogus_dataset;
    sh:property req:Catalogus_provenance;
    sh:targetClass dcat:Catalog
.
req:Catalogus_provenance a sh:PropertyShape;
  sh:path foaf:isPrimaryTopicOf;
  sh:class prov:Entity;
.
req:Catalogus_name rdf:type sh:PropertyShape;
    rdfs:label "naam";
    sh:name "dcterms:title";
    rdfs:comment "De catalogus heeft een naam";
    skos:example "Catalogus Omgevingswet";
    sh:path dcterms:title
.
req:Catalogus_dataset a sh:PropertyShape;
  sh:path dcat:dataset;
  sh:class dcat:Dataset;
.
req:Catalogus_description rdf:type sh:PropertyShape;
    rdfs:label "beschrijving";
    sh:name "dcterms:description";
    rdfs:comment "De catalogus heeft een duidelijke beschrijving";
    skos:example "De Catalogus voor de Omgevingswet is een centrale ingang tot het stelsel, waarin wetgeving, begrippen, regels, informatiemodellen, datasets, producten en services met elkaar worden verbonden. De catalogus is daarmee een centrale plek waar de verschillende gebruikersgroepen van het stelsel kunnen zien waar het stelsel uit bestaat, wat begrippen betekenen en hoe de verschillende elementen van het stelsel aan elkaar zijn gerelateerd.";
    sh:path dcterms:description
.
req:Catalogus_dateIssued rdf:type sh:PropertyShape;
    rdfs:label "publicatiedatum";
  sh:name "dcterms:issued";
    rdfs:comment "De catalogus is op een bepaalde datum gepubliceerd";
    skos:example "1/10/2016";
    sh:path dcterms:issued
.
req:Catalogus_language rdf:type sh:PropertyShape;
    rdfs:label "taal";
  sh:name "dcterms:language";
    rdfs:comment "De taal waarin de catalogus is beschreven";
    skos:example "@nl";
    sh:path dcterms:language
.
req:Catalogus_dateModified rdf:type sh:PropertyShape;
    rdfs:label "datum wijziging";
    rdfs:comment "De datum waarop iets in de catalogus zelf is veranderd, wordt bewaard, bijvoorbeeld een eigenschap van de catalogus of een nieuwe dataset";
    skos:example "1/10/2016";
    sh:name "dcterms:modified";
    sh:path dcterms:modified
.
req:Catalogus_homepage rdf:type sh:PropertyShape;
    rdfs:label "homepage";
    rdfs:comment "De catalogus als portaal is vindbaar op een homepage.";
    skos:example "http://catalogus.kadaster.nl/";
    sh:name "foaf:homepage";
    sh:path foaf:homepage
.
req:Catalogus_licence rdf:type sh:PropertyShape;
    rdfs:label "licentie";
    rdfs:comment "Een licentie is van toepassing op de catalogus zelf. Dit kan een andere licentie zijn als de licentie voor distributies van datasets";
    skos:example "Creative Commons Naamsvermelding 4.0 licentie";
    sh:name "dcterms:license";
    sh:path dcterms:license
.
req:Catalogus_rights rdf:type sh:PropertyShape;
    rdfs:label "rechten";
    rdfs:comment "Een beschrijving van de rechten die van toepassing is op de catalogus. Dit kunnen andere rechten zijn als die voor distributies van datasets";
    skos:example "Proclaimer: De Catalogus voor de Omgevingswet verbindt definities, toelichtingen en uitleg van begrippen, regels, informatiemodellen, producten en services met elkaar. De datasets waarin deze worden beschreven worden federatief beheerd door de betreffende bronhouders. Bij iedere dataset wordt aangegeven wie de bronhouder is en daarmee verantwoordelijk is voor de inhoud.";
    sh:name "dcterms:rights";
    sh:path dcterms:rights
.

#---------------------
# Distributie
# datum: 1-11-2017
# door: Ingrid Thurlings
#---------------------
req:Distributie a sh:NodeShape;
  rdfs:label "Distributie";
  sh:targetClass dcat:Distribution;
  sh:name "dcat:Distribution";
  sh:property req:Distributie_name;
  sh:property req:Distributie_description;
  sh:property req:Distributie_issueDate;
  sh:property req:Distributie_license;
  sh:property req:Distributie_rights;
  sh:property req:Distributie_accessURL;
  sh:property req:Distributie_downloadURL;
  sh:property req:Distributie_provenance;
.
req:Distributie_provenance a sh:PropertyShape;
  sh:path foaf:isPrimaryTopicOf;
  sh:class prov:Entity;
.
req:Distributie_name rdf:type sh:PropertyShape;
  rdfs:label "naam";
  sh:name "dcterms:title";
  rdfs:comment "De distributie heeft een naam";
  skos:example "Digitale Kadastrale Kaart download service";
  sh:path dcterms:title;
.
req:Distributie_description rdf:type sh:PropertyShape;
  rdfs:label "beschrijving";
  sh:name "dcterms:description";
  rdfs:comment "De distributie heeft een duidelijke beschrijving.";
  skos:example '''Het Kadaster is houder van de Basisregistratie Kadaster (BRK). Onderdeel van de BRK is de Digitale kadastrale kaart. Deze is beschikbaar als open data en nu via dit portaal ook als Linked Open Data (vooralsnog zonder de topografie).''';
  sh:path dcterms:description;
.
req:Distributie_issueDate rdf:type sh:PropertyShape;
  rdfs:label "publicatiedatum";
  sh:name "dcterms:issued";
  rdfs:comment "De distributie is op een bepaalde datum gepubliceerd. Dit is de oorspronkelijke publicatiedatum. Het is niet per se de datum van opname van de distributie in de catalogus.";
  skos:example "1/10/2016";
  sh:path dcterms:issued;
.
req:Distributie_license rdf:type sh:PropertyShape;
  rdfs:label "licentie";
    rdfs:comment "Een licentie is van toepassing op de catalogus.";
    skos:example "uri-beerware";
#[IT] skos:example "Creative Commons Naamsvermelding 4.0 licentie";    
    sh:path dcterms:license;
  sh:name "dcterms:license";
.
req:Distributie_rights rdf:type sh:PropertyShape;
  rdfs:label "rechten";
    rdfs:comment "De rechten met betrekking tot de distributie zijn beschreven. Zie ook: svbg:gebruiksvoorwaarden en iso:confidentiality";
    skos:example '''Wilt u direct aan  de slag met BRK Levering? Raadpleeg dan de reference card bij 'Documenten'. Daarin vindt u de stappen die u moet zetten om met BRK Levering te kunnen starten. Eerste of éénmalige levering tot 100.000 objecten, per object €1,16;tot 1.000.000 objecten, per object €0,98;bij meer dan 1.000.000 objecten, per object €0,73;Gebiedsuitbreiding van een bestaand abonnement, per object €1,16;Abonnementslevering, per jaar en per 1.000 objecten binnen abonnement €208,00;Extra (losse) levering van een bestand, per verstrekking €192,00;Tweede mutatie-abonnement, per jaar €192,00;Deze bedragen zijn vrij van btw;Dit product valt onder de budgetfinanciering BRK.''';
    sh:path dcterms:rights;
  sh:name "dcterms:rights";
.
req:Distributie_accessURL rdf:type sh:PropertyShape;
  rdfs:label "API/servicelocatie";
    rdfs:comment "Een distributie kan een API zijn of een webservice die beschikbaar is via een uri.";
    skos:example '''https://data.pdok.nl/brk/api/v1''';
    sh:path dcat:accessURL;
  sh:name "dcat:accessURL";
.
req:Distributie_downloadURL rdf:type sh:PropertyShape;
  rdfs:label "downloadlocatie";
    rdfs:comment "Een distributie kan een downloadservice zijn die beschikbaar is via een uri.";
    skos:example '''https://www.pdok.nl/nl/producten/pdok-downloads/basis-registratie-kadaster/kadastrale-kaart''';
    sh:path dcat:downloadURL;
  sh:name "dcat:downloadURL";
.




#---------------------
# Gegevensklasse
#---------------------
req:Klasse a sh:NodeShape;
  rdfs:label "Gegevensklasse";
  sh:targetClass owl:Class;
  sh:name "owl:Class";
  sh:property req:Klasse_label;
  sh:property req:Klasse_onderwerp;
.
req:Klasse_label a sh:PropertyShape;
  rdfs:label "label";
  sh:name "rdfs:label";
  sh:path rdfs:label;
.
req:Klasse_onderwerp a sh:PropertyShape;
  rdfs:label "onderwerp";
  sh:name "dcterms:subject";
  sh:path dcterms:subject;
.

#---------------------
# Eigenschap
#---------------------
req:Eigenschap a sh:NodeShape;
  rdfs:label "Eigenschap";
  sh:targetClass rdf:Property;
  sh:name "rdf:Property";
  sh:property req:Eigenschap_onderwerp;
  sh:property req:Eigenschap_label;
.
req:Eigenschap_label a sh:PropertyShape;
  rdfs:label "label";
  sh:name "rdfs:label";
  sh:path rdfs:label;
.
req:Eigenschap_onderwerp a sh:PropertyShape;
  rdfs:label "onderwerp";
  sh:name "dcterms:subject";
  sh:path dcterms:subject;
.
